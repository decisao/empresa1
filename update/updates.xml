<?xml version="1.0" standalone="yes"?>  <DATAPACKET Version="2.0"><METADATA><FIELDS><FIELD attrname="CODIGO" fieldtype="i4"/><FIELD attrname="SQL" fieldtype="string" WIDTH="-32768"/></FIELDS><PARAMS CHANGE_LOG="1 0 4 2 0 4 3 0 4 4 0 4 5 0 4 6 0 4 7 0 4 8 0 4 9 0 4 10 0 4 11 0 4 12 0 4 13 0 4 14 0 4 15 0 4 16 0 4 17 0 4 18 0 4 19 0 4 20 0 4 21 0 4 22 0 4 23 0 4 24 0 4 25 0 4 26 0 4 27 0 4 28 0 4 29 0 4 30 0 4 31 0 4 32 0 4 33 0 4 34 0 4 35 0 4 36 0 4 37 0 4 38 0 4 39 0 4 40 0 4 41 0 4 42 0 4 43 0 4 44 0 4 45 0 4 46 0 4 47 0 4 48 0 4 49 0 4 50 0 4 51 0 4 52 0 4 53 0 4 54 0 4 55 0 4 56 0 4"/></METADATA><ROWDATA><ROW RowState="4" CODIGO="260" SQL="/*&#013;&#010;** ANALISE DE DATAS PARA PAGAMENTOS&#013;&#010;*/&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_DATA_FLUXO              DATA;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_SEMANA_FLUXO            INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_MES_FLUXO               INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_TRIMESTRE_FLUXO         INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_QUADRIMESTRE_FLUXO      INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_SEMESTRE_FLUXO          INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_ANO_FLUXO               INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_STR_SEMANA_FLUXO        STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_STR_MES_FLUXO           STR20;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_STR_BIMESTRE_FLUXO      STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_STR_TRIMESTRE_FLUXO     STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_STR_QUADRIMESTRE_FLUXO  STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_STR_SEMESTRE_FLUXO      STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD CAD_BIMESTRE_FLUXO          INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_DATA_FLUXO              DATA;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_SEMANA_FLUXO            INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_MES_FLUXO               INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_TRIMESTRE_FLUXO         INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_QUADRIMESTRE_FLUXO      INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_SEMESTRE_FLUXO          INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_ANO_FLUXO               INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_STR_SEMANA_FLUXO        STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_STR_MES_FLUXO           STR20;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_STR_BIMESTRE_FLUXO      STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_STR_TRIMESTRE_FLUXO     STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_STR_QUADRIMESTRE_FLUXO  STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_STR_SEMESTRE_FLUXO      STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD VEN_BIMESTRE_FLUXO          INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_DATA_FLUXO              DATA;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_SEMANA_FLUXO            INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_MES_FLUXO               INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_TRIMESTRE_FLUXO         INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_QUADRIMESTRE_FLUXO      INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_SEMESTRE_FLUXO          INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_ANO_FLUXO               INTEIRO;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_STR_SEMANA_FLUXO        STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_STR_MES_FLUXO           STR20;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_STR_BIMESTRE_FLUXO      STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_STR_TRIMESTRE_FLUXO     STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_STR_QUADRIMESTRE_FLUXO  STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_STR_SEMESTRE_FLUXO      STR30;&#013;&#010;ALTER TABLE PAGAMENTOS ADD PAG_BIMESTRE_FLUXO          INTEIRO;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE TRIGGER PAGAMENTOS_BI100 FOR PAGAMENTOS&#013;&#010;ACTIVE BEFORE INSERT POSITION 100&#013;&#010;AS&#013;&#010;declare variable DIA_FLUXO INTEGER;&#013;&#010;begin&#013;&#010;/* ANALISE DE DATAS - CADASTRO */&#013;&#010;IF (NEW.DATACADAST IS NOT NULL) THEN&#013;&#010;EXECUTE PROCEDURE ANALISE_DATA(NEW.DATACADAST)&#013;&#010;RETURNING_VALUES&#013;&#010;NEW.CAD_DATA_FLUXO,&#013;&#010;DIA_FLUXO,&#013;&#010;NEW.CAD_SEMANA_FLUXO,&#013;&#010;NEW.CAD_MES_FLUXO,&#013;&#010;NEW.CAD_BIMESTRE_FLUXO,&#013;&#010;NEW.CAD_TRIMESTRE_FLUXO,&#013;&#010;NEW.CAD_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.CAD_SEMESTRE_FLUXO,&#013;&#010;NEW.CAD_ANO_FLUXO,&#013;&#010;NEW.CAD_STR_SEMANA_FLUXO,&#013;&#010;NEW.CAD_STR_MES_FLUXO,&#013;&#010;NEW.CAD_STR_BIMESTRE_FLUXO,&#013;&#010;NEW.CAD_STR_TRIMESTRE_FLUXO,&#013;&#010;NEW.CAD_STR_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.CAD_STR_SEMESTRE_FLUXO;&#013;&#010;/* ANALISE DE DATAS - VENCIMENTO */&#013;&#010;IF (NEW.DATAVENCIMENTO IS NOT NULL) THEN&#013;&#010;EXECUTE PROCEDURE ANALISE_DATA(NEW.DATAVENCIMENTO)&#013;&#010;RETURNING_VALUES&#013;&#010;NEW.VEN_DATA_FLUXO,&#013;&#010;DIA_FLUXO,&#013;&#010;NEW.VEN_SEMANA_FLUXO,&#013;&#010;NEW.VEN_MES_FLUXO,&#013;&#010;NEW.VEN_BIMESTRE_FLUXO,&#013;&#010;NEW.VEN_TRIMESTRE_FLUXO,&#013;&#010;NEW.VEN_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.VEN_SEMESTRE_FLUXO,&#013;&#010;NEW.VEN_ANO_FLUXO,&#013;&#010;NEW.VEN_STR_SEMANA_FLUXO,&#013;&#010;NEW.VEN_STR_MES_FLUXO,&#013;&#010;NEW.VEN_STR_BIMESTRE_FLUXO,&#013;&#010;NEW.VEN_STR_TRIMESTRE_FLUXO,&#013;&#010;NEW.VEN_STR_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.VEN_STR_SEMESTRE_FLUXO;&#013;&#010;/* ANALISE DE DATAS - PAGAMENTO */&#013;&#010;IF (NEW.DATAPAGO IS NOT NULL) THEN&#013;&#010;EXECUTE PROCEDURE ANALISE_DATA(NEW.DATAPAGO)&#013;&#010;RETURNING_VALUES&#013;&#010;NEW.PAG_DATA_FLUXO,&#013;&#010;DIA_FLUXO,&#013;&#010;NEW.PAG_SEMANA_FLUXO,&#013;&#010;NEW.PAG_MES_FLUXO,&#013;&#010;NEW.PAG_BIMESTRE_FLUXO,&#013;&#010;NEW.PAG_TRIMESTRE_FLUXO,&#013;&#010;NEW.PAG_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.PAG_SEMESTRE_FLUXO,&#013;&#010;NEW.PAG_ANO_FLUXO,&#013;&#010;NEW.PAG_STR_SEMANA_FLUXO,&#013;&#010;NEW.PAG_STR_MES_FLUXO,&#013;&#010;NEW.PAG_STR_BIMESTRE_FLUXO,&#013;&#010;NEW.PAG_STR_TRIMESTRE_FLUXO,&#013;&#010;NEW.PAG_STR_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.PAG_STR_SEMESTRE_FLUXO;&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE TRIGGER PAGAMENTOS_BU100 FOR PAGAMENTOS&#013;&#010;ACTIVE BEFORE UPDATE POSITION 100&#013;&#010;AS&#013;&#010;declare variable DIA_FLUXO INTEGER;&#013;&#010;begin&#013;&#010;/* ANALISE DE DATAS - CADASTRO */&#013;&#010;IF (NEW.DATACADAST IS NOT NULL) THEN&#013;&#010;EXECUTE PROCEDURE ANALISE_DATA(NEW.DATACADAST)&#013;&#010;RETURNING_VALUES&#013;&#010;NEW.CAD_DATA_FLUXO,&#013;&#010;DIA_FLUXO,&#013;&#010;NEW.CAD_SEMANA_FLUXO,&#013;&#010;NEW.CAD_MES_FLUXO,&#013;&#010;NEW.CAD_BIMESTRE_FLUXO,&#013;&#010;NEW.CAD_TRIMESTRE_FLUXO,&#013;&#010;NEW.CAD_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.CAD_SEMESTRE_FLUXO,&#013;&#010;NEW.CAD_ANO_FLUXO,&#013;&#010;NEW.CAD_STR_SEMANA_FLUXO,&#013;&#010;NEW.CAD_STR_MES_FLUXO,&#013;&#010;NEW.CAD_STR_BIMESTRE_FLUXO,&#013;&#010;NEW.CAD_STR_TRIMESTRE_FLUXO,&#013;&#010;NEW.CAD_STR_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.CAD_STR_SEMESTRE_FLUXO;&#013;&#010;/* ANALISE DE DATAS - VENCIMENTO */&#013;&#010;IF (NEW.DATAVENCIMENTO IS NOT NULL) THEN&#013;&#010;EXECUTE PROCEDURE ANALISE_DATA(NEW.DATAVENCIMENTO)&#013;&#010;RETURNING_VALUES&#013;&#010;NEW.VEN_DATA_FLUXO,&#013;&#010;DIA_FLUXO,&#013;&#010;NEW.VEN_SEMANA_FLUXO,&#013;&#010;NEW.VEN_MES_FLUXO,&#013;&#010;NEW.VEN_BIMESTRE_FLUXO,&#013;&#010;NEW.VEN_TRIMESTRE_FLUXO,&#013;&#010;NEW.VEN_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.VEN_SEMESTRE_FLUXO,&#013;&#010;NEW.VEN_ANO_FLUXO,&#013;&#010;NEW.VEN_STR_SEMANA_FLUXO,&#013;&#010;NEW.VEN_STR_MES_FLUXO,&#013;&#010;NEW.VEN_STR_BIMESTRE_FLUXO,&#013;&#010;NEW.VEN_STR_TRIMESTRE_FLUXO,&#013;&#010;NEW.VEN_STR_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.VEN_STR_SEMESTRE_FLUXO;&#013;&#010;/* ANALISE DE DATAS - PAGAMENTO */&#013;&#010;IF (NEW.DATAPAGO IS NOT NULL) THEN&#013;&#010;EXECUTE PROCEDURE ANALISE_DATA(NEW.DATAPAGO)&#013;&#010;RETURNING_VALUES&#013;&#010;NEW.PAG_DATA_FLUXO,&#013;&#010;DIA_FLUXO,&#013;&#010;NEW.PAG_SEMANA_FLUXO,&#013;&#010;NEW.PAG_MES_FLUXO,&#013;&#010;NEW.PAG_BIMESTRE_FLUXO,&#013;&#010;NEW.PAG_TRIMESTRE_FLUXO,&#013;&#010;NEW.PAG_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.PAG_SEMESTRE_FLUXO,&#013;&#010;NEW.PAG_ANO_FLUXO,&#013;&#010;NEW.PAG_STR_SEMANA_FLUXO,&#013;&#010;NEW.PAG_STR_MES_FLUXO,&#013;&#010;NEW.PAG_STR_BIMESTRE_FLUXO,&#013;&#010;NEW.PAG_STR_TRIMESTRE_FLUXO,&#013;&#010;NEW.PAG_STR_QUADRIMESTRE_FLUXO,&#013;&#010;NEW.PAG_STR_SEMESTRE_FLUXO;&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;UPDATE PAGAMENTOS SET ES = UDF_ABS(ES);&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (260, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="261" SQL="/*&#013;&#010;** NOVOS CAMPOS NA CONFIGURAÇÃO DO SISTEMA&#013;&#010;*/&#013;&#010;ALTER TABLE SISCONFIG ADD NATUOPER_COMPRA STR05;&#013;&#010;ALTER TABLE SISCONFIG ADD MENSAGEM_OS STR254;&#013;&#010;ALTER TABLE SISCONFIG ADD MENSAGEM_VENDA STR254;&#013;&#010;UPDATE SISCONFIG SET MENSAGEM_OS = &apos;HORÁRIO DE ATENDIMENTO: SEGUNDA A SEXTA DAS 09h AS 18h;  AOS SABADOS DAS 9h AS 13h&apos;;&#013;&#010;UPDATE SISCONFIG SET MENSAGEM_VENDA = &apos;HORÁRIO DE ATENDIMENTO: SEGUNDA A SEXTA DAS 09h AS 18h;  AOS SABADOS DAS 9h AS 13h&apos;;&#013;&#010;ALTER TABLE SISCONFIG ADD OSCOND1 STR254;&#013;&#010;ALTER TABLE SISCONFIG ADD OSCOND2 STR254;&#013;&#010;UPDATE SISCONFIG SET OSCOND1 = &apos;(digite aqui as condições)&apos;;&#013;&#010;UPDATE SISCONFIG SET OSCOND2 = &apos;(digite aqui as condições)&apos;;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (261, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="262" SQL="/*&#013;&#010;** REINICIALIZAÇÃO DA BASE DE DADOS&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE REINICIAR (&#013;&#010;ROTINA INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODCLIENTE1 INTEGER;&#013;&#010;DECLARE VARIABLE CODCLIENTE2 INTEGER;&#013;&#010;begin&#013;&#010;/* DETERMINO A ROTINA */&#013;&#010;IF (ROTINA IS NULL) THEN&#013;&#010;ROTINA = 0;&#013;&#010;/* LIMPAR TUDO */&#013;&#010;IF (ROTINA = 0) THEN&#013;&#010;BEGIN&#013;&#010;/* SEQUENCIA */&#013;&#010;DELETE FROM&#013;&#010;ITSEQUENCIA;&#013;&#010;/* PAGAMENTOS */&#013;&#010;UPDATE&#013;&#010;PAGAMENTOS&#013;&#010;SET PAGO = 0;&#013;&#010;DELETE FROM&#013;&#010;PAGAMENTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;PAGAMENTOS&apos;;&#013;&#010;/* ESTOQUE */&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;;&#013;&#010;DELETE FROM&#013;&#010;INDIVIDUAIS;&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;INDIVIDUAIS&apos;;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;TEMPITENS&apos;;&#013;&#010;/* PRODUTOS */&#013;&#010;DELETE FROM&#013;&#010;VARIACAO_VALOR;&#013;&#010;DELETE FROM&#013;&#010;MENSAGENS;&#013;&#010;DELETE FROM&#013;&#010;PRODUTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 10000&#013;&#010;WHERE&#013;&#010;TABELA = &apos;PRODUTOS&apos;;&#013;&#010;/* MOVIMENTOS */&#013;&#010;DELETE FROM&#013;&#010;OS_VENDER;&#013;&#010;DELETE FROM&#013;&#010;COMISSOES;&#013;&#010;DELETE FROM&#013;&#010;MOVIMENTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 10000&#013;&#010;WHERE&#013;&#010;TABELA = &apos;MOVIMENTOS&apos;;&#013;&#010;/* EMPRESAS */&#013;&#010;DELETE FROM&#013;&#010;SISCONFIG&#013;&#010;WHERE&#013;&#010;CODIGO &gt; 1;&#013;&#010;/* CLIENTES */&#013;&#010;SELECT&#013;&#010;SI.CODCLIENTE,&#013;&#010;SI.CODCLIENTE_PADRAO&#013;&#010;FROM&#013;&#010;SISCONFIG SI&#013;&#010;WHERE&#013;&#010;SI.CODIGO = 1&#013;&#010;INTO&#013;&#010;:CODCLIENTE1,&#013;&#010;:CODCLIENTE2;&#013;&#010;DELETE FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;CODIGO NOT IN (:CODCLIENTE1, :CODCLIENTE2);&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REINICIAR (&#013;&#010;ROTINA INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODCLIENTE1 INTEGER;&#013;&#010;DECLARE VARIABLE CODCLIENTE2 INTEGER;&#013;&#010;begin&#013;&#010;/* DETERMINO A ROTINA */&#013;&#010;IF (ROTINA IS NULL) THEN&#013;&#010;ROTINA = 0;&#013;&#010;/* LIMPAR TUDO */&#013;&#010;IF (ROTINA = 0) THEN&#013;&#010;BEGIN&#013;&#010;/* SEQUENCIA */&#013;&#010;DELETE FROM&#013;&#010;ITSEQUENCIA;&#013;&#010;/* PAGAMENTOS */&#013;&#010;UPDATE&#013;&#010;PAGAMENTOS&#013;&#010;SET PAGO = 0;&#013;&#010;DELETE FROM&#013;&#010;COMISSOES;&#013;&#010;DELETE FROM&#013;&#010;PAGAMENTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;PAGAMENTOS&apos;;&#013;&#010;/* ESTOQUE */&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;;&#013;&#010;DELETE FROM&#013;&#010;INDIVIDUAIS;&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;INDIVIDUAIS&apos;;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;TEMPITENS&apos;;&#013;&#010;/* PRODUTOS */&#013;&#010;DELETE FROM&#013;&#010;VARIACAO_VALOR;&#013;&#010;DELETE FROM&#013;&#010;MENSAGENS;&#013;&#010;DELETE FROM&#013;&#010;CONTRATOS;&#013;&#010;DELETE FROM&#013;&#010;PRODUTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 10000&#013;&#010;WHERE&#013;&#010;TABELA = &apos;PRODUTOS&apos;;&#013;&#010;/* MOVIMENTOS */&#013;&#010;DELETE FROM&#013;&#010;OS_VENDER;&#013;&#010;DELETE FROM&#013;&#010;MOVIMENTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 10000&#013;&#010;WHERE&#013;&#010;TABELA = &apos;MOVIMENTOS&apos;;&#013;&#010;/* EMPRESAS */&#013;&#010;DELETE FROM&#013;&#010;TRANSFERENCIAS;&#013;&#010;DELETE FROM&#013;&#010;SISCONFIG&#013;&#010;WHERE&#013;&#010;CODIGO &gt; 1;&#013;&#010;/* CLIENTES */&#013;&#010;SELECT&#013;&#010;SI.CODCLIENTE,&#013;&#010;SI.CODCLIENTE_PADRAO&#013;&#010;FROM&#013;&#010;SISCONFIG SI&#013;&#010;WHERE&#013;&#010;SI.CODIGO = 1&#013;&#010;INTO&#013;&#010;:CODCLIENTE1,&#013;&#010;:CODCLIENTE2;&#013;&#010;DELETE FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;CODIGO NOT IN (:CODCLIENTE1, :CODCLIENTE2);&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = UDF_MAX(:CODCLIENTE1, :CODCLIENTE2) + 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;CLIENTES&apos;;&#013;&#010;UPDATE&#013;&#010;CLIENTES&#013;&#010;SET&#013;&#010;NOMEUSER = &apos;SYSDBA&apos;&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCLIENTE1;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE REINICIAR TO PUBLIC;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (262, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="263" SQL="/*&#013;&#010;** ANALISE DE FLUXO DE CAIXA&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE ANALISE_FLUXOCAIXA_DIA (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;SALDOINI NUMERIC(9,2),&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;SALDO NUMERIC(15,2),&#013;&#010;DATASALDO DATE,&#013;&#010;CREDITOS NUMERIC(15,2),&#013;&#010;DEBITOS NUMERIC(15,2))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE DATA DATE;&#013;&#010;DECLARE VARIABLE VALOR NUMERIC(15,2);&#013;&#010;begin&#013;&#010;/* SALDO INICIAL */&#013;&#010;SALDO = SALDOINI;&#013;&#010;/* INICIO */&#013;&#010;DATASALDO = NULL;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS  = NULL;&#013;&#010;/* SELECAO POR DATA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PA.ES,&#013;&#010;CAST(PA.DATAVENCIMENTO AS DATE) AS DATAVENC,&#013;&#010;PA.VALOR,&#013;&#010;PA.CODEMPRESA&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;CAST(PA.DATAVENCIMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM&#013;&#010;ORDER BY&#013;&#010;PA.DATAVENCIMENTO,&#013;&#010;PA.ES&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:DATA,&#013;&#010;:VALOR,&#013;&#010;:CODEMPRESA&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* MUDOU A DATA? */&#013;&#010;IF (DATASALDO &lt;&gt; DATA) THEN&#013;&#010;BEGIN&#013;&#010;/* TENHO LANCAMENTOS ANTERIORES */&#013;&#010;IF ((CREDITOS IS NOT NULL) AND (DEBITOS IS NOT NULL)) THEN&#013;&#010;BEGIN&#013;&#010;SALDO = (SALDO + CREDITOS) - DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;/* DATA ATUAL AGORA */&#013;&#010;DATASALDO = DATA;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS = NULL;&#013;&#010;END&#013;&#010;/* CREDITO OU DEBITO? */&#013;&#010;IF (ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;/* COMPUTO OS DEBITOS */&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = VALOR;&#013;&#010;ELSE&#013;&#010;DEBITOS = DEBITOS + VALOR;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* COMPUTO OS CREDITOS */&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = VALOR;&#013;&#010;ELSE&#013;&#010;CREDITOS = CREDITOS + VALOR;&#013;&#010;END&#013;&#010;END&#013;&#010;/* TENHO LANCAMENTOS FINAIS? */&#013;&#010;IF ((CREDITOS IS NOT NULL) AND (DEBITOS IS NOT NULL)) THEN&#013;&#010;BEGIN&#013;&#010;SALDO = (SALDO + CREDITOS) - DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ANALISE_FLUXOCAIXA_DIA (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;SALDOINI NUMERIC(9,2),&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;SALDO NUMERIC(15,2),&#013;&#010;DATASALDO DATE,&#013;&#010;CREDITOS NUMERIC(15,2),&#013;&#010;DEBITOS NUMERIC(15,2))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE DATA DATE;&#013;&#010;DECLARE VARIABLE VALOR NUMERIC(15,2);&#013;&#010;DECLARE VARIABLE DATACONST DATE;&#013;&#010;begin&#013;&#010;/* CONSTANTE NULA */&#013;&#010;DATACONST = &apos;01-01-1990&apos;;&#013;&#010;/* SALDO INICIAL */&#013;&#010;SALDO = SALDOINI;&#013;&#010;/* INICIO */&#013;&#010;DATASALDO = DATACONST;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS  = NULL;&#013;&#010;/* SELECAO POR DATA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PA.ES,&#013;&#010;CAST(PA.DATAVENCIMENTO AS DATE) AS DATAVENC,&#013;&#010;PA.VALOR,&#013;&#010;PA.CODEMPRESA&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.PAGO = 0 AND&#013;&#010;CAST(PA.DATAVENCIMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM&#013;&#010;ORDER BY&#013;&#010;PA.DATAVENCIMENTO,&#013;&#010;PA.ES&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:DATA,&#013;&#010;:VALOR,&#013;&#010;:CODEMPRESA&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* MUDOU A DATA? */&#013;&#010;IF (DATASALDO &lt; DATA) THEN&#013;&#010;BEGIN&#013;&#010;/* TENHO LANCAMENTOS ANTERIORES */&#013;&#010;IF (DATASALDO &lt;&gt; DATACONST) THEN&#013;&#010;BEGIN&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = 0;&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = 0;&#013;&#010;SALDO = (SALDO + CREDITOS) + DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;/* DATA ATUAL AGORA */&#013;&#010;DATASALDO = DATA;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS = NULL;&#013;&#010;END&#013;&#010;/* CREDITO OU DEBITO? */&#013;&#010;IF (ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;VALOR = (VALOR * -1);&#013;&#010;/* COMPUTO OS DEBITOS */&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = VALOR;&#013;&#010;ELSE&#013;&#010;DEBITOS = DEBITOS + VALOR;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* COMPUTO OS CREDITOS */&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = VALOR;&#013;&#010;ELSE&#013;&#010;CREDITOS = CREDITOS + VALOR;&#013;&#010;END&#013;&#010;END&#013;&#010;/* TENHO LANCAMENTOS FINAIS? */&#013;&#010;IF ((CREDITOS IS NOT NULL) AND (DEBITOS IS NOT NULL)) THEN&#013;&#010;BEGIN&#013;&#010;SALDO = (SALDO + CREDITOS) + DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE ANALISE_FLUXOCAIXA_DIA TO PUBLIC;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE ANALISE_FLUXOCAIXA_SEMANA (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;SALDOINI NUMERIC(9,2),&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;SALDO NUMERIC(15,2),&#013;&#010;DATASALDO VARCHAR(30),&#013;&#010;CREDITOS NUMERIC(15,2),&#013;&#010;DEBITOS NUMERIC(15,2))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE DATA VARCHAR(30);&#013;&#010;DECLARE VARIABLE VALOR NUMERIC(15,2);&#013;&#010;DECLARE VARIABLE DATACONST DATE;&#013;&#010;begin&#013;&#010;/* CONSTANTE NULA */&#013;&#010;DATACONST = &apos;SEMANA&apos;;&#013;&#010;/* SALDO INICIAL */&#013;&#010;SALDO = SALDOINI;&#013;&#010;/* INICIO */&#013;&#010;DATASALDO = DATACONST;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS  = NULL;&#013;&#010;/* SELECAO POR DATA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PA.ES,&#013;&#010;PA.VEN_STR_SEMANA_FLUXO,&#013;&#010;PA.VALOR,&#013;&#010;PA.CODEMPRESA&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.PAGO = 0 AND&#013;&#010;CAST(PA.DATAVENCIMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM&#013;&#010;ORDER BY&#013;&#010;PA.DATAVENCIMENTO,&#013;&#010;PA.ES&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:DATA,&#013;&#010;:VALOR,&#013;&#010;:CODEMPRESA&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* MUDOU A DATA? */&#013;&#010;IF (DATASALDO &lt;&gt; DATA) THEN&#013;&#010;BEGIN&#013;&#010;/* TENHO LANCAMENTOS ANTERIORES */&#013;&#010;IF (DATASALDO &lt;&gt; DATACONST) THEN&#013;&#010;BEGIN&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = 0;&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = 0;&#013;&#010;SALDO = (SALDO + CREDITOS) + DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;/* DATA ATUAL AGORA */&#013;&#010;DATASALDO = DATA;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS = NULL;&#013;&#010;END&#013;&#010;/* CREDITO OU DEBITO? */&#013;&#010;IF (ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;VALOR = (VALOR * -1);&#013;&#010;/* COMPUTO OS DEBITOS */&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = VALOR;&#013;&#010;ELSE&#013;&#010;DEBITOS = DEBITOS + VALOR;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* COMPUTO OS CREDITOS */&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = VALOR;&#013;&#010;ELSE&#013;&#010;CREDITOS = CREDITOS + VALOR;&#013;&#010;END&#013;&#010;END&#013;&#010;/* TENHO LANCAMENTOS FINAIS? */&#013;&#010;IF ((CREDITOS IS NOT NULL) AND (DEBITOS IS NOT NULL)) THEN&#013;&#010;BEGIN&#013;&#010;SALDO = (SALDO + CREDITOS) + DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ANALISE_FLUXOCAIXA_SEMANA (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;SALDOINI NUMERIC(9,2),&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;SALDO NUMERIC(15,2),&#013;&#010;DATASALDO VARCHAR(30),&#013;&#010;CREDITOS NUMERIC(15,2),&#013;&#010;DEBITOS NUMERIC(15,2))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE DATA1 VARCHAR(30);&#013;&#010;DECLARE VARIABLE VALOR NUMERIC(15,2);&#013;&#010;DECLARE VARIABLE DATACONST VARCHAR(30);&#013;&#010;begin&#013;&#010;/* CONSTANTE NULA */&#013;&#010;DATACONST = &apos;SEMANA&apos;;&#013;&#010;/* SALDO INICIAL */&#013;&#010;SALDO = SALDOINI;&#013;&#010;/* INICIO */&#013;&#010;DATASALDO = DATACONST;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS  = NULL;&#013;&#010;/* SELECAO POR DATA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PA.ES,&#013;&#010;PA.VEN_STR_SEMANA_FLUXO,&#013;&#010;PA.VALOR,&#013;&#010;PA.CODEMPRESA&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.PAGO = 0 AND&#013;&#010;CAST(PA.DATAVENCIMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM&#013;&#010;ORDER BY&#013;&#010;PA.DATAVENCIMENTO,&#013;&#010;PA.ES&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:DATA1,&#013;&#010;:VALOR,&#013;&#010;:CODEMPRESA&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* MUDOU A DATA? */&#013;&#010;IF (DATASALDO &lt;&gt; DATA1) THEN&#013;&#010;BEGIN&#013;&#010;/* TENHO LANCAMENTOS ANTERIORES */&#013;&#010;IF (DATASALDO &lt;&gt; DATACONST) THEN&#013;&#010;BEGIN&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = 0;&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = 0;&#013;&#010;SALDO = (SALDO + CREDITOS) + DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;/* DATA ATUAL AGORA */&#013;&#010;DATASALDO = DATA1;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS = NULL;&#013;&#010;END&#013;&#010;/* CREDITO OU DEBITO? */&#013;&#010;IF (ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;VALOR = (VALOR * -1);&#013;&#010;/* COMPUTO OS DEBITOS */&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = VALOR;&#013;&#010;ELSE&#013;&#010;DEBITOS = DEBITOS + VALOR;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* COMPUTO OS CREDITOS */&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = VALOR;&#013;&#010;ELSE&#013;&#010;CREDITOS = CREDITOS + VALOR;&#013;&#010;END&#013;&#010;END&#013;&#010;/* TENHO LANCAMENTOS FINAIS? */&#013;&#010;IF ((CREDITOS IS NOT NULL) AND (DEBITOS IS NOT NULL)) THEN&#013;&#010;BEGIN&#013;&#010;SALDO = (SALDO + CREDITOS) + DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE ANALISE_FLUXOCAIXA_SEMANA TO PUBLIC;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE ANALISE_FLUXOCAIXA_MES (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;SALDOINI NUMERIC(9,2),&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;SALDO NUMERIC(15,2),&#013;&#010;DATASALDO VARCHAR(30),&#013;&#010;CREDITOS NUMERIC(15,2),&#013;&#010;DEBITOS NUMERIC(15,2))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE DATA1 VARCHAR(30);&#013;&#010;DECLARE VARIABLE VALOR NUMERIC(15,2);&#013;&#010;DECLARE VARIABLE DATACONST VARCHAR(30);&#013;&#010;begin&#013;&#010;/* CONSTANTE NULA */&#013;&#010;DATACONST = &apos;MES&apos;;&#013;&#010;/* SALDO INICIAL */&#013;&#010;SALDO = SALDOINI;&#013;&#010;/* INICIO */&#013;&#010;DATASALDO = DATACONST;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS  = NULL;&#013;&#010;/* SELECAO POR DATA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PA.ES,&#013;&#010;PA.VEN_STR_MES_FLUXO,&#013;&#010;PA.VALOR,&#013;&#010;PA.CODEMPRESA&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.PAGO = 0 AND&#013;&#010;CAST(PA.DATAVENCIMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM&#013;&#010;ORDER BY&#013;&#010;PA.DATAVENCIMENTO,&#013;&#010;PA.ES&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:DATA1,&#013;&#010;:VALOR,&#013;&#010;:CODEMPRESA&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* MUDOU A DATA? */&#013;&#010;IF (DATASALDO &lt;&gt; DATA1) THEN&#013;&#010;BEGIN&#013;&#010;/* TENHO LANCAMENTOS ANTERIORES */&#013;&#010;IF (DATASALDO &lt;&gt; DATACONST) THEN&#013;&#010;BEGIN&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = 0;&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = 0;&#013;&#010;SALDO = (SALDO + CREDITOS) + DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;/* DATA ATUAL AGORA */&#013;&#010;DATASALDO = DATA1;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS = NULL;&#013;&#010;END&#013;&#010;/* CREDITO OU DEBITO? */&#013;&#010;IF (ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;VALOR = (VALOR * -1);&#013;&#010;/* COMPUTO OS DEBITOS */&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = VALOR;&#013;&#010;ELSE&#013;&#010;DEBITOS = DEBITOS + VALOR;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* COMPUTO OS CREDITOS */&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = VALOR;&#013;&#010;ELSE&#013;&#010;CREDITOS = CREDITOS + VALOR;&#013;&#010;END&#013;&#010;END&#013;&#010;/* TENHO LANCAMENTOS FINAIS? */&#013;&#010;IF ((CREDITOS IS NOT NULL) AND (DEBITOS IS NOT NULL)) THEN&#013;&#010;BEGIN&#013;&#010;SALDO = (SALDO + CREDITOS) + DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ANALISE_FLUXOCAIXA_MES (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;SALDOINI NUMERIC(9,2),&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;SALDO NUMERIC(15,2),&#013;&#010;DATASALDO VARCHAR(30),&#013;&#010;CREDITOS NUMERIC(15,2),&#013;&#010;DEBITOS NUMERIC(15,2))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE DATA1 VARCHAR(30);&#013;&#010;DECLARE VARIABLE VALOR NUMERIC(15,2);&#013;&#010;DECLARE VARIABLE DATACONST VARCHAR(30);&#013;&#010;begin&#013;&#010;/* CONSTANTE NULA */&#013;&#010;DATACONST = &apos;MES&apos;;&#013;&#010;/* SALDO INICIAL */&#013;&#010;SALDO = SALDOINI;&#013;&#010;/* INICIO */&#013;&#010;DATASALDO = DATACONST;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS  = NULL;&#013;&#010;/* SELECAO POR DATA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PA.ES,&#013;&#010;PA.VEN_STR_MES_FLUXO,&#013;&#010;PA.VALOR,&#013;&#010;PA.CODEMPRESA&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.PAGO = 0 AND&#013;&#010;CAST(PA.DATAVENCIMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM&#013;&#010;ORDER BY&#013;&#010;PA.DATAVENCIMENTO,&#013;&#010;PA.ES&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:DATA1,&#013;&#010;:VALOR,&#013;&#010;:CODEMPRESA&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* MUDOU A DATA? */&#013;&#010;IF (DATASALDO &lt;&gt; DATA1) THEN&#013;&#010;BEGIN&#013;&#010;/* TENHO LANCAMENTOS ANTERIORES */&#013;&#010;IF (DATASALDO &lt;&gt; DATACONST) THEN&#013;&#010;BEGIN&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = 0;&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = 0;&#013;&#010;SALDO = (SALDO + CREDITOS) + DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;/* DATA ATUAL AGORA */&#013;&#010;DATASALDO = DATA1;&#013;&#010;CREDITOS = NULL;&#013;&#010;DEBITOS = NULL;&#013;&#010;END&#013;&#010;/* CREDITO OU DEBITO? */&#013;&#010;IF (ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;VALOR = (VALOR * -1);&#013;&#010;/* COMPUTO OS DEBITOS */&#013;&#010;IF (DEBITOS IS NULL) THEN&#013;&#010;DEBITOS = VALOR;&#013;&#010;ELSE&#013;&#010;DEBITOS = DEBITOS + VALOR;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* COMPUTO OS CREDITOS */&#013;&#010;IF (CREDITOS IS NULL) THEN&#013;&#010;CREDITOS = VALOR;&#013;&#010;ELSE&#013;&#010;CREDITOS = CREDITOS + VALOR;&#013;&#010;END&#013;&#010;END&#013;&#010;/* TENHO LANCAMENTOS FINAIS? */&#013;&#010;IF ((CREDITOS IS NOT NULL) AND (DEBITOS IS NOT NULL)) THEN&#013;&#010;BEGIN&#013;&#010;SALDO = (SALDO + CREDITOS) + DEBITOS;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE ANALISE_FLUXOCAIXA_MES TO PUBLIC;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (263, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="264" SQL="/*&#013;&#010;** ANALISE DA CURVA ABC&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE ANALISE_CURVAABC_PRODUTOS (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODPRODUTO INTEGER,&#013;&#010;CODBARRA VARCHAR(14),&#013;&#010;DESCRICAO VARCHAR(50),&#013;&#010;QUANTIDADE NUMERIC(15,2),&#013;&#010;TOTAL NUMERIC(15,2),&#013;&#010;CMV NUMERIC(15,2))&#013;&#010;AS&#013;&#010;begin&#013;&#010;/* LEITURA DAS VENDAS DE PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PO.CODIGO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;SUM(ID.QUANTIDADE),&#013;&#010;SUM(ID.VALOR_PAGO),&#013;&#010;SUM(ID.CUSTO_TOTAL)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;JOIN INDIVIDUAIS ID ON&#013;&#010;(ID.CODMOVSAIDA = MO.CODIGO)&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = ID.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;MO.ES = 2 AND&#013;&#010;MO.TIPO IN (3, 6) AND&#013;&#010;CAST(MO.DATAFECHAMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM AND&#013;&#010;MO.CODEMPRESA = :CODEMPRESA AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;PO.PS = &apos;P&apos; AND&#013;&#010;PO.TIPOPRODUTO = &apos;F&apos;&#013;&#010;GROUP BY&#013;&#010;PO.CODIGO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO&#013;&#010;INTO&#013;&#010;:CODPRODUTO,&#013;&#010;:CODBARRA,&#013;&#010;:DESCRICAO,&#013;&#010;:QUANTIDADE,&#013;&#010;:TOTAL,&#013;&#010;:CMV&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ANALISE_CURVAABC_PRODUTOS (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODPRODUTO INTEGER,&#013;&#010;CODBARRA VARCHAR(14),&#013;&#010;DESCRICAO VARCHAR(60),&#013;&#010;QUANTIDADE DOUBLE PRECISION,&#013;&#010;TOTAL DOUBLE PRECISION,&#013;&#010;CMV DOUBLE PRECISION,&#013;&#010;LIQUIDO DOUBLE PRECISION)&#013;&#010;AS&#013;&#010;begin&#013;&#010;/* LEITURA DAS VENDAS DE PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PO.CODIGO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;SUM(ID.QUANTIDADE),&#013;&#010;SUM(ID.VALOR_PAGO),&#013;&#010;SUM(ID.CUSTO_TOTAL)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;JOIN INDIVIDUAIS ID ON&#013;&#010;(ID.CODMOVSAIDA = MO.CODIGO)&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = ID.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;MO.ES = 2 AND&#013;&#010;MO.TIPO IN (3, 6) AND&#013;&#010;CAST(MO.DATAFECHAMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM AND&#013;&#010;MO.CODEMPRESA = :CODEMPRESA AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;PO.PS = &apos;P&apos; AND&#013;&#010;PO.TIPOPRODUTO = &apos;F&apos;&#013;&#010;GROUP BY&#013;&#010;PO.CODIGO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO&#013;&#010;INTO&#013;&#010;:CODPRODUTO,&#013;&#010;:CODBARRA,&#013;&#010;:DESCRICAO,&#013;&#010;:QUANTIDADE,&#013;&#010;:TOTAL,&#013;&#010;:CMV&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;LIQUIDO = (TOTAL - CMV);&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE ANALISE_CURVAABC_PRODUTOS TO PUBLIC;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE ANALISE_CURVAABC_PECAS (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODPRODUTO INTEGER,&#013;&#010;CODBARRA VARCHAR(14),&#013;&#010;DESCRICAO VARCHAR(60),&#013;&#010;QUANTIDADE DOUBLE PRECISION,&#013;&#010;TOTAL DOUBLE PRECISION,&#013;&#010;CMV DOUBLE PRECISION,&#013;&#010;LIQUIDO DOUBLE PRECISION)&#013;&#010;AS&#013;&#010;begin&#013;&#010;/* LEITURA DAS VENDAS DE PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PO.CODIGO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;SUM(ID.QUANTIDADE),&#013;&#010;SUM(ID.VALOR_PAGO),&#013;&#010;SUM(ID.CUSTO_TOTAL)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;JOIN INDIVIDUAIS ID ON&#013;&#010;(ID.CODMOVSAIDA = MO.CODIGO)&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = ID.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;MO.ES = 2 AND&#013;&#010;MO.TIPO IN (3, 6) AND&#013;&#010;CAST(MO.DATAFECHAMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM AND&#013;&#010;MO.CODEMPRESA = :CODEMPRESA AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;PO.PS = &apos;P&apos; AND&#013;&#010;PO.TIPOPRODUTO = &apos;P&apos;&#013;&#010;GROUP BY&#013;&#010;PO.CODIGO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO&#013;&#010;INTO&#013;&#010;:CODPRODUTO,&#013;&#010;:CODBARRA,&#013;&#010;:DESCRICAO,&#013;&#010;:QUANTIDADE,&#013;&#010;:TOTAL,&#013;&#010;:CMV&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;LIQUIDO = (TOTAL - CMV);&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ANALISE_CURVAABC_PECAS (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODPRODUTO INTEGER,&#013;&#010;CODBARRA VARCHAR(14),&#013;&#010;DESCRICAO VARCHAR(60),&#013;&#010;QUANTIDADE DOUBLE PRECISION,&#013;&#010;TOTAL DOUBLE PRECISION,&#013;&#010;CMV DOUBLE PRECISION,&#013;&#010;LIQUIDO DOUBLE PRECISION)&#013;&#010;AS&#013;&#010;begin&#013;&#010;/* LEITURA DAS VENDAS DE PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PO.CODIGO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;SUM(ID.QUANTIDADE),&#013;&#010;SUM(ID.VALOR_PAGO),&#013;&#010;SUM(ID.CUSTO_TOTAL)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;JOIN INDIVIDUAIS ID ON&#013;&#010;(ID.CODMOVSAIDA = MO.CODIGO)&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = ID.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;MO.ES = 2 AND&#013;&#010;MO.TIPO IN (3, 6) AND&#013;&#010;CAST(MO.DATAFECHAMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM AND&#013;&#010;MO.CODEMPRESA = :CODEMPRESA AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;PO.PS = &apos;P&apos; AND&#013;&#010;PO.TIPOPRODUTO = &apos;C&apos;&#013;&#010;GROUP BY&#013;&#010;PO.CODIGO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO&#013;&#010;INTO&#013;&#010;:CODPRODUTO,&#013;&#010;:CODBARRA,&#013;&#010;:DESCRICAO,&#013;&#010;:QUANTIDADE,&#013;&#010;:TOTAL,&#013;&#010;:CMV&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;LIQUIDO = (TOTAL - CMV);&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE ANALISE_CURVAABC_PECAS TO PUBLIC;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE ANALISE_CURVAABC_SERVICOS (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODPRODUTO INTEGER,&#013;&#010;CODBARRA VARCHAR(14),&#013;&#010;DESCRICAO VARCHAR(60),&#013;&#010;QUANTIDADE DOUBLE PRECISION,&#013;&#010;TOTAL DOUBLE PRECISION,&#013;&#010;CMV DOUBLE PRECISION,&#013;&#010;LIQUIDO DOUBLE PRECISION)&#013;&#010;AS&#013;&#010;begin&#013;&#010;/* LEITURA DAS VENDAS DE PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PO.CODIGO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;SUM(ID.QUANTIDADE),&#013;&#010;SUM(ID.VALOR_PAGO),&#013;&#010;SUM(ID.CUSTO_TOTAL)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;JOIN INDIVIDUAIS ID ON&#013;&#010;(ID.CODMOVSAIDA = MO.CODIGO)&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = ID.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;MO.ES = 2 AND&#013;&#010;MO.TIPO IN (3, 6) AND&#013;&#010;CAST(MO.DATAFECHAMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM AND&#013;&#010;MO.CODEMPRESA = :CODEMPRESA AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;PO.PS = &apos;S&apos;&#013;&#010;GROUP BY&#013;&#010;PO.CODIGO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO&#013;&#010;INTO&#013;&#010;:CODPRODUTO,&#013;&#010;:CODBARRA,&#013;&#010;:DESCRICAO,&#013;&#010;:QUANTIDADE,&#013;&#010;:TOTAL,&#013;&#010;:CMV&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;LIQUIDO = (TOTAL - CMV);&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE ANALISE_CURVAABC_SERVICOS TO PUBLIC;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE ANALISE_CURVAABC_CLIENTES (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;NOME VARCHAR(60),&#013;&#010;TOTAL DOUBLE PRECISION,&#013;&#010;CMV DOUBLE PRECISION,&#013;&#010;LIQUIDO DOUBLE PRECISION)&#013;&#010;AS&#013;&#010;begin&#013;&#010;/* LEITURA DAS VENDAS DE PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CL.CODIGO,&#013;&#010;CL.NOME,&#013;&#010;SUM(ID.VALOR_PAGO),&#013;&#010;SUM(ID.CUSTO_TOTAL)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;JOIN INDIVIDUAIS ID ON&#013;&#010;(ID.CODMOVSAIDA = MO.CODIGO)&#013;&#010;JOIN CLIENTES CL ON&#013;&#010;(CL.CODIGO = MO.CODCLIENTE)&#013;&#010;WHERE&#013;&#010;MO.ES = 2 AND&#013;&#010;MO.TIPO IN (3, 6) AND&#013;&#010;CAST(MO.DATAFECHAMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM AND&#013;&#010;MO.CODEMPRESA = :CODEMPRESA AND&#013;&#010;ID.VENDIDO = &apos;S&apos;&#013;&#010;GROUP BY&#013;&#010;CL.CODIGO,&#013;&#010;CL.NOME&#013;&#010;INTO&#013;&#010;:CODCLIENTE,&#013;&#010;:NOME,&#013;&#010;:TOTAL,&#013;&#010;:CMV&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;LIQUIDO = (TOTAL - CMV);&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE ANALISE_CURVAABC_CLIENTES TO PUBLIC;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE ANALISE_CURVAABC_FORNECEDORES (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;NOME VARCHAR(60),&#013;&#010;TOTAL DOUBLE PRECISION)&#013;&#010;AS&#013;&#010;begin&#013;&#010;/* LEITURA DAS VENDAS DE PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CL.CODIGO,&#013;&#010;CL.NOME,&#013;&#010;SUM(MO.NOTA_VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;JOIN CLIENTES CL ON&#013;&#010;(CL.CODIGO = MO.CODCLIENTE)&#013;&#010;WHERE&#013;&#010;MO.ES = 1 AND&#013;&#010;MO.TIPO = 1 AND&#013;&#010;CAST(MO.DATAFECHAMENTO AS DATE) BETWEEN :DATAINI AND :DATAFIM AND&#013;&#010;MO.CODEMPRESA = :CODEMPRESA&#013;&#010;GROUP BY&#013;&#010;CL.CODIGO,&#013;&#010;CL.NOME&#013;&#010;INTO&#013;&#010;:CODCLIENTE,&#013;&#010;:NOME,&#013;&#010;:TOTAL&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ANALISE_CURVAABC_FORNECEDORES (&#013;&#010;DATAINI DATE,&#013;&#010;DATAFIM DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;NOME VARCHAR(60),&#013;&#010;TOTAL DOUBLE PRECISION)&#013;&#010;AS&#013;&#010;begin&#013;&#010;/* LEITURA DAS VENDAS DE PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CL.CODIGO,&#013;&#010;CL.NOME,&#013;&#010;SUM(MO.NOTA_VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;JOIN CLIENTES CL ON&#013;&#010;(CL.CODIGO = MO.CODCLIENTE)&#013;&#010;WHERE&#013;&#010;MO.ES = 1 AND&#013;&#010;MO.TIPO = 1 AND&#013;&#010;CAST(MO.DATA AS DATE) BETWEEN :DATAINI AND :DATAFIM AND&#013;&#010;MO.CODEMPRESA = :CODEMPRESA&#013;&#010;GROUP BY&#013;&#010;CL.CODIGO,&#013;&#010;CL.NOME&#013;&#010;INTO&#013;&#010;:CODCLIENTE,&#013;&#010;:NOME,&#013;&#010;:TOTAL&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE ANALISE_CURVAABC_FORNECEDORES TO PUBLIC;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (264, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="265" SQL="/*&#013;&#010;** CONTROLE DE ESTOQUE CONTABIL&#013;&#010;*/&#013;&#010;CREATE TABLE ESTOQUE_PEPS(&#013;&#010;CONTROLE INTEIRO_VALIDO NOT NULL,&#013;&#010;CODMOVIMENTO INTEIRO_VALIDO,&#013;&#010;CODPRODUTO INTEIRO_VALIDO,&#013;&#010;DATA DATA_VALIDA,&#013;&#010;OPERACAO STR30_VALIDO,&#013;&#010;ENTRADA_QUANTIDADE DINHEIRO,&#013;&#010;ENTRADA_VALOR DINHEIRO,&#013;&#010;ENTRADA_TOTAL DINHEIRO,&#013;&#010;SAIDA_QUANTIDADE DINHEIRO,&#013;&#010;SAIDA_VALOR DINHEIRO,&#013;&#010;SAIDA_TOTAL DINHEIRO,&#013;&#010;SALDO_QUANTIDADE DINHEIRO,&#013;&#010;SALDO_VALOR DINHEIRO,&#013;&#010;SALDO_TOTAL DINHEIRO);&#013;&#010;ALTER TABLE ESTOQUE_PEPS&#013;&#010;ADD CONSTRAINT FK_ESTOQUE_PEPS&#013;&#010;PRIMARY KEY (CONTROLE);&#013;&#010;ALTER TABLE ESTOQUE_PEPS&#013;&#010;ADD CONSTRAINT ESTOQUE_PEPS_FK01&#013;&#010;FOREIGN KEY (CODMOVIMENTO)&#013;&#010;REFERENCES MOVIMENTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE ESTOQUE_PEPS&#013;&#010;ADD CONSTRAINT ESTOQUE_PEPS_FK02&#013;&#010;FOREIGN KEY (CODPRODUTO)&#013;&#010;REFERENCES PRODUTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;CREATE TABLE ESTOQUE_UEPS(&#013;&#010;CONTROLE INTEIRO_VALIDO NOT NULL,&#013;&#010;CODMOVIMENTO INTEIRO_VALIDO,&#013;&#010;CODPRODUTO INTEIRO_VALIDO,&#013;&#010;DATA DATA_VALIDA,&#013;&#010;OPERACAO STR30_VALIDO,&#013;&#010;ENTRADA_QUANTIDADE DINHEIRO,&#013;&#010;ENTRADA_VALOR DINHEIRO,&#013;&#010;ENTRADA_TOTAL DINHEIRO,&#013;&#010;SAIDA_QUANTIDADE DINHEIRO,&#013;&#010;SAIDA_VALOR DINHEIRO,&#013;&#010;SAIDA_TOTAL DINHEIRO,&#013;&#010;SALDO_QUANTIDADE DINHEIRO,&#013;&#010;SALDO_VALOR DINHEIRO,&#013;&#010;SALDO_TOTAL DINHEIRO);&#013;&#010;ALTER TABLE ESTOQUE_UEPS&#013;&#010;ADD CONSTRAINT FK_ESTOQUE_UEPS&#013;&#010;PRIMARY KEY (CONTROLE);&#013;&#010;ALTER TABLE ESTOQUE_UEPS&#013;&#010;ADD CONSTRAINT ESTOQUE_UEPS_FK01&#013;&#010;FOREIGN KEY (CODMOVIMENTO)&#013;&#010;REFERENCES MOVIMENTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE ESTOQUE_UEPS&#013;&#010;ADD CONSTRAINT ESTOQUE_UEPS_FK02&#013;&#010;FOREIGN KEY (CODPRODUTO)&#013;&#010;REFERENCES PRODUTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;CREATE TABLE ESTOQUE_CM(&#013;&#010;CONTROLE INTEIRO_VALIDO NOT NULL,&#013;&#010;CODMOVIMENTO INTEIRO_VALIDO,&#013;&#010;CODPRODUTO INTEIRO_VALIDO,&#013;&#010;DATA DATA_VALIDA,&#013;&#010;OPERACAO STR30_VALIDO,&#013;&#010;ENTRADA_QUANTIDADE DINHEIRO,&#013;&#010;ENTRADA_VALOR DINHEIRO,&#013;&#010;ENTRADA_TOTAL DINHEIRO,&#013;&#010;SAIDA_QUANTIDADE DINHEIRO,&#013;&#010;SAIDA_VALOR DINHEIRO,&#013;&#010;SAIDA_TOTAL DINHEIRO,&#013;&#010;SALDO_QUANTIDADE DINHEIRO,&#013;&#010;SALDO_VALOR DINHEIRO,&#013;&#010;SALDO_TOTAL DINHEIRO);&#013;&#010;ALTER TABLE ESTOQUE_CM&#013;&#010;ADD CONSTRAINT FK_ESTOQUE_CM&#013;&#010;PRIMARY KEY (CONTROLE);&#013;&#010;ALTER TABLE ESTOQUE_CM&#013;&#010;ADD CONSTRAINT ESTOQUE_CM_FK01&#013;&#010;FOREIGN KEY (CODMOVIMENTO)&#013;&#010;REFERENCES MOVIMENTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE ESTOQUE_CM&#013;&#010;ADD CONSTRAINT ESTOQUE_CM_FK02&#013;&#010;FOREIGN KEY (CODPRODUTO)&#013;&#010;REFERENCES PRODUTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;INSERT INTO&#013;&#010;SEQUENCIA(&#013;&#010;CODIGO,&#013;&#010;TABELA,&#013;&#010;SEQUENCIA)&#013;&#010;VALUES(&#013;&#010;47,&#013;&#010;&apos;ESTOQUE_CM&apos;,&#013;&#010;1);&#013;&#010;INSERT INTO&#013;&#010;SEQUENCIA(&#013;&#010;CODIGO,&#013;&#010;TABELA,&#013;&#010;SEQUENCIA)&#013;&#010;VALUES(&#013;&#010;48,&#013;&#010;&apos;ESTOQUE_PEPS&apos;,&#013;&#010;1);&#013;&#010;INSERT INTO&#013;&#010;SEQUENCIA(&#013;&#010;CODIGO,&#013;&#010;TABELA,&#013;&#010;SEQUENCIA)&#013;&#010;VALUES(&#013;&#010;49,&#013;&#010;&apos;ESTOQUE_UEPS&apos;,&#013;&#010;1);&#013;&#010;ALTER TABLE ESTOQUE_CM ADD CODEMPRESA INTEIRO_VALIDO;&#013;&#010;ALTER TABLE ESTOQUE_PEPS ADD CODEMPRESA INTEIRO_VALIDO;&#013;&#010;ALTER TABLE ESTOQUE_UEPS ADD CODEMPRESA INTEIRO_VALIDO;&#013;&#010;DROP TABLE ESTOQUE_UEPS;&#013;&#010;DELETE FROM &#013;&#010;SEQUENCIA&#013;&#010;WHERE&#013;&#010;CODIGO = 49;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (265, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="266" SQL="/*&#013;&#010;** SISTEMA DE BLOQUEIO LENTO&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE HISTORICO (&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;NOME VARCHAR(40),&#013;&#010;MOVIMENTOS INTEGER,&#013;&#010;TOTAL_MOVIMENTOS NUMERIC(9,2),&#013;&#010;TOTAL_PAGO NUMERIC(9,2),&#013;&#010;TOTAL_ARECEBER NUMERIC(9,2),&#013;&#010;TOTAL_ATRASO NUMERIC(9,2),&#013;&#010;DATA_MAISATRASADO TIMESTAMP,&#013;&#010;DIAS_ATRASO INTEGER,&#013;&#010;BLOQUEIO CHAR(1))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE DIAS_SISTEMA INTEGER;&#013;&#010;DECLARE VARIABLE TIPO_BLOQUEIO CHAR(1);&#013;&#010;DECLARE VARIABLE TIPO_IMPEDIMENTO CHAR(1);&#013;&#010;DECLARE VARIABLE CLIENTE1 INTEGER;&#013;&#010;DECLARE VARIABLE CLIENTE2 INTEGER;&#013;&#010;BEGIN&#013;&#010;/* CLIENTE */&#013;&#010;SELECT&#013;&#010;SI.CODCLIENTE,&#013;&#010;SI.CODCLIENTE_PADRAO&#013;&#010;FROM&#013;&#010;SISCONFIG SI&#013;&#010;WHERE&#013;&#010;SI.CODIGO = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:CLIENTE1,&#013;&#010;:CLIENTE2;&#013;&#010;IF ((CLIENTE1 = CODCLIENTE) OR (CLIENTE2 = CODCLIENTE)) THEN&#013;&#010;BEGIN&#013;&#010;NOME = &apos;CLIENTE PADRAO&apos;;&#013;&#010;MOVIMENTOS = 0;&#013;&#010;TOTAL_MOVIMENTOS = 0;&#013;&#010;TOTAL_PAGO = 0;&#013;&#010;TOTAL_ARECEBER = 0;&#013;&#010;TOTAL_ATRASO = 0;&#013;&#010;DATA_MAISATRASADO = CURRENT_TIMESTAMP;&#013;&#010;DIAS_ATRASO = 0;&#013;&#010;BLOQUEIO = &apos;N&apos;;&#013;&#010;SUSPEND;&#013;&#010;EXIT;&#013;&#010;END&#013;&#010;/* NOME */&#013;&#010;SELECT&#013;&#010;NOME,&#013;&#010;TIPO_BLOQUEIO,&#013;&#010;TIPO_IMPEDIMENTO&#013;&#010;FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCLIENTE&#013;&#010;INTO&#013;&#010;:NOME,&#013;&#010;:TIPO_BLOQUEIO,&#013;&#010;:TIPO_IMPEDIMENTO;&#013;&#010;/* MOVIMENTOS, TOTAL_MOVIMENTOS */&#013;&#010;SELECT&#013;&#010;COUNT(MO.CODIGO),&#013;&#010;SUM(PA.TOTAL_PAGO)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;LEFT JOIN PAGAMENTOS PA ON&#013;&#010;(MO.CODIGO = PA.CODMOVIMENTO)&#013;&#010;WHERE&#013;&#010;MO.CODCLIENTE = :CODCLIENTE AND&#013;&#010;MO.TIPO IN (3, 6)&#013;&#010;INTO&#013;&#010;:MOVIMENTOS,&#013;&#010;:TOTAL_MOVIMENTOS;&#013;&#010;/* TOTAL_PAGO */&#013;&#010;SELECT&#013;&#010;SUM(PA.TOTAL_PAGO)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;LEFT JOIN PAGAMENTOS PA ON&#013;&#010;(MO.CODIGO = PA.CODMOVIMENTO)&#013;&#010;WHERE&#013;&#010;MO.CODCLIENTE = :CODCLIENTE AND&#013;&#010;MO.TIPO IN (3, 6) AND&#013;&#010;PA.PAGO = 1&#013;&#010;INTO&#013;&#010;:TOTAL_PAGO;&#013;&#010;/* TOTAL_ARECEBER */&#013;&#010;SELECT&#013;&#010;SUM(PA.TOTAL_PAGO)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;LEFT JOIN PAGAMENTOS PA ON&#013;&#010;(MO.CODIGO = PA.CODMOVIMENTO)&#013;&#010;WHERE&#013;&#010;MO.CODCLIENTE = :CODCLIENTE AND&#013;&#010;MO.TIPO IN (3, 6) AND&#013;&#010;PA.PAGO = 0 AND&#013;&#010;PA.DATAVENCIMENTO &gt;= CURRENT_TIMESTAMP&#013;&#010;INTO&#013;&#010;:TOTAL_ARECEBER;&#013;&#010;/* TOTAL_ATRASO, DATA_MAISATRASADO, DIAS_ATRASO */&#013;&#010;SELECT&#013;&#010;SUM(PA.TOTAL_PAGO),&#013;&#010;MIN(PA.DATAVENCIMENTO)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;LEFT JOIN PAGAMENTOS PA ON&#013;&#010;(MO.CODIGO = PA.CODMOVIMENTO)&#013;&#010;WHERE&#013;&#010;MO.CODCLIENTE = :CODCLIENTE AND&#013;&#010;MO.TIPO IN (3, 6) AND&#013;&#010;PA.PAGO = 0 AND&#013;&#010;PA.DATAVENCIMENTO &lt; CURRENT_TIMESTAMP&#013;&#010;INTO&#013;&#010;:TOTAL_ATRASO,&#013;&#010;:DATA_MAISATRASADO;&#013;&#010;DIAS_ATRASO = CAST((CURRENT_TIMESTAMP - DATA_MAISATRASADO) AS INTEGER);&#013;&#010;/* BLOQUEIO */&#013;&#010;SELECT&#013;&#010;BLOQUEIO_DIAS&#013;&#010;FROM&#013;&#010;SISCONFIG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:DIAS_SISTEMA;&#013;&#010;IF (DIAS_ATRASO &gt;= DIAS_SISTEMA) THEN&#013;&#010;BLOQUEIO = &apos;S&apos;;&#013;&#010;ELSE&#013;&#010;BLOQUEIO = &apos;N&apos;;&#013;&#010;IF (TIPO_BLOQUEIO &lt;&gt; &apos;A&apos;) THEN&#013;&#010;BEGIN&#013;&#010;IF (TIPO_BLOQUEIO = &apos;B&apos;) THEN&#013;&#010;BLOQUEIO = &apos;S&apos;;&#013;&#010;ELSE&#013;&#010;BLOQUEIO = &apos;N&apos;;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF ((TIPO_IMPEDIMENTO &lt;&gt; &apos;N&apos;) AND (BLOQUEIO = &apos;N&apos;)) THEN&#013;&#010;BLOQUEIO = &apos;S&apos;;&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE HISTORICO (&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;NOME VARCHAR(40),&#013;&#010;MOVIMENTOS INTEGER,&#013;&#010;TOTAL_MOVIMENTOS NUMERIC(9,2),&#013;&#010;TOTAL_PAGO NUMERIC(9,2),&#013;&#010;TOTAL_ARECEBER NUMERIC(9,2),&#013;&#010;TOTAL_ATRASO NUMERIC(9,2),&#013;&#010;DATA_MAISATRASADO TIMESTAMP,&#013;&#010;DIAS_ATRASO INTEGER,&#013;&#010;BLOQUEIO CHAR(1))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE DIAS_SISTEMA INTEGER;&#013;&#010;DECLARE VARIABLE TIPO_BLOQUEIO CHAR(1);&#013;&#010;DECLARE VARIABLE TIPO_IMPEDIMENTO CHAR(1);&#013;&#010;DECLARE VARIABLE CLIENTE1 INTEGER;&#013;&#010;DECLARE VARIABLE CLIENTE2 INTEGER;&#013;&#010;BEGIN&#013;&#010;/* CLIENTE */&#013;&#010;SELECT&#013;&#010;SI.CODCLIENTE,&#013;&#010;SI.CODCLIENTE_PADRAO,&#013;&#010;SI.BLOQUEIO_DIAS&#013;&#010;FROM&#013;&#010;SISCONFIG SI&#013;&#010;WHERE&#013;&#010;SI.CODIGO = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:CLIENTE1,&#013;&#010;:CLIENTE2,&#013;&#010;:DIAS_SISTEMA;&#013;&#010;IF ((CLIENTE1 = CODCLIENTE) OR (CLIENTE2 = CODCLIENTE)) THEN&#013;&#010;BEGIN&#013;&#010;NOME = &apos;CLIENTE PADRAO&apos;;&#013;&#010;MOVIMENTOS = 0;&#013;&#010;TOTAL_MOVIMENTOS = 0;&#013;&#010;TOTAL_PAGO = 0;&#013;&#010;TOTAL_ARECEBER = 0;&#013;&#010;TOTAL_ATRASO = 0;&#013;&#010;DATA_MAISATRASADO = CURRENT_TIMESTAMP;&#013;&#010;DIAS_ATRASO = 0;&#013;&#010;BLOQUEIO = &apos;N&apos;;&#013;&#010;SUSPEND;&#013;&#010;EXIT;&#013;&#010;END&#013;&#010;/* NOME */&#013;&#010;SELECT&#013;&#010;NOME,&#013;&#010;TIPO_BLOQUEIO,&#013;&#010;TIPO_IMPEDIMENTO&#013;&#010;FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCLIENTE&#013;&#010;INTO&#013;&#010;:NOME,&#013;&#010;:TIPO_BLOQUEIO,&#013;&#010;:TIPO_IMPEDIMENTO;&#013;&#010;/* MOVIMENTOS, TOTAL_MOVIMENTOS */&#013;&#010;SELECT&#013;&#010;COUNT(MO.CODIGO),&#013;&#010;SUM(PA.TOTAL_PAGO)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;LEFT JOIN PAGAMENTOS PA ON&#013;&#010;(MO.CODIGO = PA.CODMOVIMENTO)&#013;&#010;WHERE&#013;&#010;MO.CODCLIENTE = :CODCLIENTE AND&#013;&#010;MO.TIPO IN (3, 6)&#013;&#010;INTO&#013;&#010;:MOVIMENTOS,&#013;&#010;:TOTAL_MOVIMENTOS;&#013;&#010;/* TOTAL_PAGO */&#013;&#010;SELECT&#013;&#010;SUM(PA.TOTAL_PAGO)&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.CODCLIENTE = :CODCLIENTE AND&#013;&#010;PA.PAGO = 1 AND&#013;&#010;PA.ES = 2&#013;&#010;INTO&#013;&#010;:TOTAL_PAGO;&#013;&#010;/* TOTAL_ARECEBER */&#013;&#010;SELECT&#013;&#010;SUM(PA.TOTAL_PAGO)&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.CODCLIENTE = :CODCLIENTE AND&#013;&#010;PA.PAGO = 0 AND&#013;&#010;PA.ES = 2 AND&#013;&#010;PA.DATAVENCIMENTO &gt;= CURRENT_TIMESTAMP&#013;&#010;INTO&#013;&#010;:TOTAL_ARECEBER;&#013;&#010;/* TOTAL_ATRASO, DATA_MAISATRASADO, DIAS_ATRASO */&#013;&#010;SELECT&#013;&#010;SUM(PA.TOTAL_PAGO),&#013;&#010;MIN(PA.DATAVENCIMENTO)&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.CODCLIENTE = :CODCLIENTE AND&#013;&#010;PA.PAGO = 0 AND&#013;&#010;PA.ES = 2 AND&#013;&#010;PA.DATAVENCIMENTO &lt; CURRENT_TIMESTAMP&#013;&#010;INTO&#013;&#010;:TOTAL_ATRASO,&#013;&#010;:DATA_MAISATRASADO;&#013;&#010;DIAS_ATRASO = CAST((CURRENT_TIMESTAMP - DATA_MAISATRASADO) AS INTEGER);&#013;&#010;IF (DIAS_ATRASO &gt;= DIAS_SISTEMA) THEN&#013;&#010;BLOQUEIO = &apos;S&apos;;&#013;&#010;ELSE&#013;&#010;BLOQUEIO = &apos;N&apos;;&#013;&#010;IF (TIPO_BLOQUEIO &lt;&gt; &apos;A&apos;) THEN&#013;&#010;BEGIN&#013;&#010;IF (TIPO_BLOQUEIO = &apos;B&apos;) THEN&#013;&#010;BLOQUEIO = &apos;S&apos;;&#013;&#010;ELSE&#013;&#010;BLOQUEIO = &apos;N&apos;;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF ((TIPO_IMPEDIMENTO &lt;&gt; &apos;N&apos;) AND (BLOQUEIO = &apos;N&apos;)) THEN&#013;&#010;BLOQUEIO = &apos;S&apos;;&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (266, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="267" SQL="/*&#013;&#010;** ERRO DA MENSAGEM NO VALOR DOS PAGAMENTOS&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE AUTOBAIXA (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODDOC_AVISTA INTEGER;&#013;&#010;DECLARE VARIABLE CODIGO INTEGER;&#013;&#010;DECLARE VARIABLE CODDOCUMENTO INTEGER;&#013;&#010;DECLARE VARIABLE DATAVENCIMENTO TIMESTAMP;&#013;&#010;DECLARE VARIABLE PAGO INTEGER;&#013;&#010;DECLARE VARIABLE PARCELA_TOTAL DOUBLE PRECISION;&#013;&#010;DECLARE VARIABLE MOVIMENTO_TOTAL DOUBLE PRECISION;&#013;&#010;DECLARE VARIABLE XPARC INTEGER;&#013;&#010;DECLARE VARIABLE CODEMPRESA INTEGER;&#013;&#010;DECLARE VARIABLE CODCONTA INTEGER;&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE OS VALORES SAO CORRESPONDENTES */&#013;&#010;SELECT&#013;&#010;COUNT(PA.CODIGO),&#013;&#010;SUM(PA.VALOR)&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:XPARC,&#013;&#010;:PARCELA_TOTAL;&#013;&#010;IF (XPARC IS NULL) THEN&#013;&#010;XPARC = 0;&#013;&#010;/* COMISSIONAMENTO DE VENDEDORES */&#013;&#010;SELECT&#013;&#010;NOTA_VALOR_TOTAL,&#013;&#010;CODEMPRESA&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:MOVIMENTO_TOTAL,&#013;&#010;:CODEMPRESA;&#013;&#010;/* VALOR DAS PARCELAS DEVE SER IGUAL OU SUPERIOR AO VALOR DO FATURAMENTO */&#013;&#010;IF (MOVIMENTO_TOTAL &gt; PARCELA_TOTAL) THEN&#013;&#010;EXCEPTION VALOR_PARCELA;&#013;&#010;/* APOS FECHADO, MOSTRO AS PARCELAS */&#013;&#010;UPDATE&#013;&#010;PAGAMENTOS&#013;&#010;SET&#013;&#010;ES = 2&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO;&#013;&#010;/* QUAL É O DOCUMENTO A VISTA? */&#013;&#010;SELECT&#013;&#010;CODDOC_AVISTA&#013;&#010;FROM&#013;&#010;SISCONFIG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:CODDOC_AVISTA;&#013;&#010;/* PROCURO OS PAGAMENTOS, ALGUM É A VISTA? */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;CODDOCUMENTO,&#013;&#010;DATAVENCIMENTO,&#013;&#010;PAGO,&#013;&#010;CODCONTA&#013;&#010;FROM&#013;&#010;PAGAMENTOS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:CODDOCUMENTO,&#013;&#010;:DATAVENCIMENTO,&#013;&#010;:PAGO,&#013;&#010;:CODCONTA&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* O DOCUMENTO É A VISTA? */&#013;&#010;IF ((CODDOCUMENTO = CODDOC_AVISTA) AND (PAGO = 0)) THEN&#013;&#010;BEGIN&#013;&#010;/* FAÇO O LANÇAMENTO */&#013;&#010;EXECUTE PROCEDURE BAIXA(&#013;&#010;:CODIGO,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;T&apos;,&#013;&#010;:CODCONTA,&#013;&#010;:CODDOCUMENTO,&#013;&#010;&apos;&apos;);&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER MOVIMENTOS_AFTUPD&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODORIGEM INTEGER;&#013;&#010;DECLARE VARIABLE CODUSUARIO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODIGO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODPRODUTO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_SERIE VARCHAR(20);&#013;&#010;DECLARE VARIABLE TEMP_SERIE2 VARCHAR(20);&#013;&#010;DECLARE VARIABLE TEMP_VALOR_VENDA NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_DESCONTO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_BARRA VARCHAR(20);&#013;&#010;DECLARE VARIABLE TEMP_ICMSVENDA NUMERIC(9,4);&#013;&#010;DECLARE VARIABLE TEMP_QUANTIDADE NUMERIC(9,2);&#013;&#010;BEGIN&#013;&#010;IF (NEW.ES IN (0, 1, 2)) THEN&#013;&#010;BEGIN&#013;&#010;IF (((NEW.VALOR_TOTAL &lt;&gt; OLD.VALOR_TOTAL) OR&#013;&#010;(NEW.CONDICAO &lt;&gt; OLD.CONDICAO)) AND&#013;&#010;(NEW.TIPO IN (0, 1, 2, 5))) THEN&#013;&#010;EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);&#013;&#010;IF ((NEW.TIPO IN (3, 6)) AND (OLD.TIPO IN (2, 5))) THEN&#013;&#010;BEGIN&#013;&#010;EXECUTE PROCEDURE COMISSAO_CALC(NEW.CODIGO);&#013;&#010;EXECUTE PROCEDURE AUTOBAIXA(NEW.CODIGO);&#013;&#010;EXECUTE PROCEDURE CADASTRA_EQUIPAMENTO(NEW.CODIGO);&#013;&#010;END&#013;&#010;END&#013;&#010;/* ESTORNO */&#013;&#010;IF ((NEW.TIPO = 9) AND (OLD.TIPO &lt;&gt; 9)) THEN&#013;&#010;BEGIN&#013;&#010;/* GUARDO OS ITENS ESTORNADOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODPRODUTO,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;VALOR_VENDA,&#013;&#010;DESCONTO,&#013;&#010;BARRA,&#013;&#010;ICMSVENDA,&#013;&#010;SUM(QUANTIDADE)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = NEW.CODIGO&#013;&#010;GROUP BY&#013;&#010;CODPRODUTO,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;VALOR_VENDA,&#013;&#010;DESCONTO,&#013;&#010;BARRA,&#013;&#010;ICMSVENDA&#013;&#010;INTO&#013;&#010;TEMP_CODPRODUTO,&#013;&#010;TEMP_SERIE,&#013;&#010;TEMP_SERIE2,&#013;&#010;TEMP_VALOR_VENDA,&#013;&#010;TEMP_DESCONTO,&#013;&#010;TEMP_BARRA,&#013;&#010;TEMP_ICMSVENDA,&#013;&#010;TEMP_QUANTIDADE&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* CODIGO UNICO DO TEMPITENS */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES TEMP_CODIGO;&#013;&#010;/* GUARDO ITEM UM A UM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS (&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;BARRA)&#013;&#010;VALUES (&#013;&#010;:TEMP_CODIGO,&#013;&#010;NEW.CODIGO,&#013;&#010;:TEMP_CODPRODUTO,&#013;&#010;:TEMP_QUANTIDADE,&#013;&#010;:TEMP_VALOR_VENDA,&#013;&#010;:TEMP_DESCONTO,&#013;&#010;&apos;0.0&apos;,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;(:TEMP_VALOR_VENDA - :TEMP_DESCONTO),&#013;&#010;:TEMP_ICMSVENDA,&#013;&#010;:TEMP_ICMSVENDA,&#013;&#010;0,&#013;&#010;:TEMP_SERIE,&#013;&#010;:TEMP_SERIE2,&#013;&#010;:TEMP_BARRA);&#013;&#010;END&#013;&#010;/* VERIFICO SE POSSUI MOVIMENTAÇÃO DE ESTOQUE */&#013;&#010;IF (NEW.NO_ESTOQUE = &apos;S&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/* DEVOLVO OS PRODUTOS */&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = NEW.CODIGO;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* DEVOLVO OS PRODUTOS */&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = NEW.CODIGO;&#013;&#010;/* SIMPLESMENTE EXCLUO OS ITENS */&#013;&#010;DELETE FROM&#013;&#010;INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = NEW.CODIGO;&#013;&#010;END&#013;&#010;/* VERIFICO SE EXISTE MOVIMENTACAO FINANCEIRA */&#013;&#010;IF (NEW.NO_VENDA = &apos;S&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO USUARIO */&#013;&#010;SELECT&#013;&#010;CODIGO&#013;&#010;FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;NOMEUSER = NEW.USUARIOESTORNO&#013;&#010;INTO&#013;&#010;:CODUSUARIO;&#013;&#010;/* VERIFICO OS PAGAMENTOS E ESTORNO 1 A 1 */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO&#013;&#010;FROM&#013;&#010;PAGAMENTOS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = NEW.CODIGO&#013;&#010;INTO&#013;&#010;:CODORIGEM&#013;&#010;DO&#013;&#010;EXECUTE PROCEDURE FINANC_ESTORNO(:CODORIGEM, :CODUSUARIO);&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (267, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="268" SQL="/*&#013;&#010;** EMPRESA PADRAO&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE TRIGGER SISCONFIG_AU0 FOR SISCONFIG&#013;&#010;ACTIVE AFTER UPDATE POSITION 0&#013;&#010;AS&#013;&#010;begin&#013;&#010;IF ((OLD.PADRAO = &apos;N&apos;) AND (NEW.PADRAO = &apos;S&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;UPDATE&#013;&#010;SISCONFIG&#013;&#010;SET&#013;&#010;PADRAO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODIGO &lt;&gt; NEW.CODIGO;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;CREATE EXCEPTION DESABILITAR_PERFIL &apos;Você não pode desabilitar um perfil. Habilite outro.&apos;;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE TRIGGER SISCONFIG_BU0 FOR SISCONFIG&#013;&#010;ACTIVE BEFORE UPDATE POSITION 0&#013;&#010;AS&#013;&#010;begin&#013;&#010;IF ((NEW.PADRAO = &apos;N&apos;) AND (OLD.PADRAO = &apos;S&apos;)) THEN&#013;&#010;EXCEPTION DESABILITAR_PERFIL;&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (268, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="269" SQL="/*&#013;&#010;** ALTERAÇÃO PARA EXIBIR LINHA/OPERADORA/PLANO NOS ITENS DA VENDA&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAPRO (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE XIPI CHAR(1);&#013;&#010;DECLARE VARIABLE SERIE2 VARCHAR(20);&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE EH COMPRA OU VENDA */&#013;&#010;SELECT&#013;&#010;ES&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ES;&#013;&#010;IF (ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;/* COMPRA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;&apos;N/F&apos;,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSCOMPRA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = TI.CODPRODUTO )&#013;&#010;WHERE&#013;&#010;TI.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:UNIDADE,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:SITTRIBU,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;IF (SERIE &lt;&gt; &apos;N/F&apos;) THEN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || SERIE;&#013;&#010;ELSE&#013;&#010;DESCRICAO2 = DESCRICAO1;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.IPI,&#013;&#010;SUM(ID.QUANTIDADE),&#013;&#010;SUM(ID.VALOR_PAGO),&#013;&#010;SUM(ID.VALOR_ICMS)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = ID.CODPRODUTO )&#013;&#010;LEFT JOIN TEMPITENS TI ON&#013;&#010;( TI.CODMOVIMENTO = ID.CODMOVENTRADA AND&#013;&#010;TI.CODPRODUTO   = ID.CODPRODUTO    AND&#013;&#010;TI.CODIGO       = ID.CODITEM )&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.PS = &apos;P&apos;&#013;&#010;GROUP BY&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.IPI&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:UNIDADE,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:SITTRIBU,&#013;&#010;:IPI,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE O SERIE2 CONTEM DADOS E SERIE NAO, MANDO SERIE2 */&#013;&#010;IF ((UDF_TRIM(SERIE) = &apos;N/F&apos;) OR (UDF_TRIM(SERIE) = &apos;&apos;)) THEN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;SERIE = SERIE2;&#013;&#010;IF (SERIE &lt;&gt; &apos;N/F&apos;) THEN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || SERIE;&#013;&#010;ELSE&#013;&#010;DESCRICAO2 = DESCRICAO1;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;/* VERIFICO SE CORTO IPI */&#013;&#010;SELECT&#013;&#010;NA.IPI&#013;&#010;FROM&#013;&#010;NATUOPER NA&#013;&#010;JOIN MOVIMENTOS MO ON&#013;&#010;(MO.NOTA_CODNATUOPER = NA.CODIGO)&#013;&#010;WHERE&#013;&#010;MO.CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:XIPI;&#013;&#010;IF (XIPI = &apos;N&apos;) THEN&#013;&#010;IPI = NULL;&#013;&#010;/* ATIVAÇÃO */&#013;&#010;SELECT FIRST 1&#013;&#010;ID.NUMERO_FONE,&#013;&#010;OP.NOME AS OPERADORA,&#013;&#010;PL.NOME AS PLANO&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;JOIN OPERADORAS OP ON&#013;&#010;(OP.CODIGO = ID.CODOPERADORA)&#013;&#010;JOIN PLANOS PL ON&#013;&#010;(PL.CODIGO = ID.CODPLANO AND&#013;&#010;PL.CODOPERADORA = ID.CODOPERADORA)&#013;&#010;WHERE&#013;&#010;ID.BARRA = :BARRA AND&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.PS = &apos;P&apos; AND&#013;&#010;ID.UNICO = 1 AND&#013;&#010;ID.CODPLANO IS NOT NULL AND&#013;&#010;ID.NUMERO_FONE IS NOT NULL&#013;&#010;INTO&#013;&#010;:LINHA,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAITENS(&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ESMOV INTEGER;&#013;&#010;DECLARE VARIABLE TIPOMOV INTEGER;&#013;&#010;DECLARE VARIABLE SERIE2 VARCHAR(20);&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ESMOV,&#013;&#010;:TIPOMOV;&#013;&#010;IF ((TIPOMOV = 9) OR ((ESMOV = 0) AND (TIPOMOV = 1))) THEN&#013;&#010;BEGIN&#013;&#010;/* ITENS ESTORNADOS OU DE ORÇAMENTO */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;TI.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.DESCRICAO,&#013;&#010;TI.SERIE,&#013;&#010;TI.SERIE2,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSVENDA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA,&#013;&#010;TI.SITTRIBU,&#013;&#010;PO.UNIDADE,&#013;&#010;(TI.VALOR_UNITARIO - TI.DESCONTO),&#013;&#010;TI.IPI&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = TI.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* TRATAMENTO DA SERIE */&#013;&#010;IF ((UDF_TRIM(SERIE) &lt;&gt; &apos;N/F&apos;) AND (UDF_TRIM(SERIE) &gt; &apos;&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE);&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE2);&#013;&#010;END ELSE&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1);&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;UNIDADE,&#013;&#010;VALOR_ITEM,&#013;&#010;IPI&#013;&#010;FROM&#013;&#010;REL_NOTAPRO(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;/* SERVIÇOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;&apos;SE&apos;,&#013;&#010;VALOR_ITEM,&#013;&#010;0 AS IPI&#013;&#010;FROM&#013;&#010;REL_NOTASER(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTASER (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(40),&#013;&#010;DESCRICAO2 VARCHAR(60),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40))&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;UDF_LEFT(PO.DESCRICAO, 40),&#013;&#010;ID.SERIE,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;ID.QUANTIDADE,&#013;&#010;ID.VALOR_PAGO,&#013;&#010;ID.VALOR_ICMS,&#013;&#010;TI.SITTRIBU&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = ID.CODPRODUTO )&#013;&#010;LEFT JOIN TEMPITENS TI ON&#013;&#010;( TI.CODMOVIMENTO = ID.CODMOVENTRADA AND&#013;&#010;TI.CODPRODUTO   = ID.CODPRODUTO    AND&#013;&#010;TI.CODIGO       = ID.CODITEM )&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.PS = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = DESCRICAO1 || &apos; &apos; || SERIE;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAITENS(&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ESMOV INTEGER;&#013;&#010;DECLARE VARIABLE TIPOMOV INTEGER;&#013;&#010;DECLARE VARIABLE SERIE2 VARCHAR(20);&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ESMOV,&#013;&#010;:TIPOMOV;&#013;&#010;IF ((TIPOMOV = 9) OR ((ESMOV = 0) AND (TIPOMOV = 1))) THEN&#013;&#010;BEGIN&#013;&#010;/* ITENS ESTORNADOS OU DE ORÇAMENTO */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;TI.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.DESCRICAO,&#013;&#010;TI.SERIE,&#013;&#010;TI.SERIE2,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSVENDA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA,&#013;&#010;TI.SITTRIBU,&#013;&#010;PO.UNIDADE,&#013;&#010;(TI.VALOR_UNITARIO - TI.DESCONTO),&#013;&#010;TI.IPI&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = TI.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* TRATAMENTO DA SERIE */&#013;&#010;IF ((UDF_TRIM(SERIE) &lt;&gt; &apos;N/F&apos;) AND (UDF_TRIM(SERIE) &gt; &apos;&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE);&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE2);&#013;&#010;END ELSE&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1);&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;UNIDADE,&#013;&#010;VALOR_ITEM,&#013;&#010;IPI&#013;&#010;FROM&#013;&#010;REL_NOTAPRO(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;/* SERVIÇOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;&apos;SE&apos;,&#013;&#010;VALOR_ITEM,&#013;&#010;0 AS IPI&#013;&#010;FROM&#013;&#010;REL_NOTASER(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAITENS (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ESMOV INTEGER;&#013;&#010;DECLARE VARIABLE TIPOMOV INTEGER;&#013;&#010;DECLARE VARIABLE SERIE2 VARCHAR(20);&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ESMOV,&#013;&#010;:TIPOMOV;&#013;&#010;IF ((TIPOMOV = 9) OR ((ESMOV = 0) AND (TIPOMOV = 1))) THEN&#013;&#010;BEGIN&#013;&#010;/* ITENS ESTORNADOS OU DE ORÇAMENTO */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;TI.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.DESCRICAO,&#013;&#010;TI.SERIE,&#013;&#010;TI.SERIE2,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSVENDA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA,&#013;&#010;TI.SITTRIBU,&#013;&#010;PO.UNIDADE,&#013;&#010;(TI.VALOR_UNITARIO - TI.DESCONTO),&#013;&#010;TI.IPI&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = TI.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* TRATAMENTO DA SERIE */&#013;&#010;IF ((UDF_TRIM(SERIE) &lt;&gt; &apos;N/F&apos;) AND (UDF_TRIM(SERIE) &gt; &apos;&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE);&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE2);&#013;&#010;END ELSE&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1);&#013;&#010;END&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;UNIDADE,&#013;&#010;VALOR_ITEM,&#013;&#010;IPI,&#013;&#010;LINHA,&#013;&#010;OPERADORA,&#013;&#010;PLANO&#013;&#010;FROM&#013;&#010;REL_NOTAPRO(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI,&#013;&#010;:LINHA,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;/* SERVIÇOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;&apos;SE&apos;,&#013;&#010;VALOR_ITEM,&#013;&#010;0 AS IPI,&#013;&#010;LINHA,&#013;&#010;OPERADORA,&#013;&#010;PLANO&#013;&#010;FROM&#013;&#010;REL_NOTASER(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI,&#013;&#010;:LINHA,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (269, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="270" SQL="/*&#013;&#010;** SIMPLIFICAÇÃO DO PROCESSO DE VENDA&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_ABRE (&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;CODEMPRESA INTEGER,&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODRESPONSAVEL INTEGER,&#013;&#010;CODVENDEDOR INTEGER,&#013;&#010;CODCONDPAG INTEGER,&#013;&#010;CODNATUOPER VARCHAR(5),&#013;&#010;PROCESSO CHAR(3),&#013;&#010;PASSAGEM INTEGER,&#013;&#010;I01_CODBARRA VARCHAR(14),&#013;&#010;I01_QUANTIDADE NUMERIC(9,2),&#013;&#010;I01_VALOR NUMERIC(9,2),&#013;&#010;I01_DESCONTO NUMERIC(9,2),&#013;&#010;I01_ICMS NUMERIC(9,2),&#013;&#010;I01_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I01_IPI NUMERIC(9,2),&#013;&#010;I01_SITTRIBU CHAR(3),&#013;&#010;I02_CODBARRA VARCHAR(14),&#013;&#010;I02_QUANTIDADE NUMERIC(9,2),&#013;&#010;I02_VALOR NUMERIC(9,2),&#013;&#010;I02_DESCONTO NUMERIC(9,2),&#013;&#010;I02_ICMS NUMERIC(9,2),&#013;&#010;I02_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I02_IPI NUMERIC(9,2),&#013;&#010;I02_SITTRIBU CHAR(3),&#013;&#010;I03_CODBARRA VARCHAR(14),&#013;&#010;I03_QUANTIDADE NUMERIC(9,2),&#013;&#010;I03_VALOR NUMERIC(9,2),&#013;&#010;I03_DESCONTO NUMERIC(9,2),&#013;&#010;I03_ICMS NUMERIC(9,2),&#013;&#010;I03_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I03_IPI NUMERIC(9,2),&#013;&#010;I03_SITTRIBU CHAR(3))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER,&#013;&#010;RE_01 INTEGER,&#013;&#010;RE_02 INTEGER,&#013;&#010;RE_03 INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TESTE INTEGER;&#013;&#010;DECLARE VARIABLE CONDICAO VARCHAR(40);&#013;&#010;DECLARE VARIABLE TEMP_SERVICOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_PRODUTOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE MOV_ES INTEGER;&#013;&#010;DECLARE VARIABLE MOV_TIPO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODIGO INTEGER;&#013;&#010;BEGIN&#013;&#010;/* SE FOR NULO, É VENDA */&#013;&#010;IF (PROCESSO IS NULL) THEN&#013;&#010;PROCESSO = &apos;VEN&apos;;&#013;&#010;/* ZERAMENTO DOS RETORNOS */&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;RE_01 = 0;&#013;&#010;RE_02 = 0;&#013;&#010;RE_03 = 0;&#013;&#010;IF (I01_QUANTIDADE IS NULL) THEN&#013;&#010;I01_QUANTIDADE = 0;&#013;&#010;IF (I02_QUANTIDADE IS NULL) THEN&#013;&#010;I02_QUANTIDADE = 0;&#013;&#010;IF (I03_QUANTIDADE IS NULL) THEN&#013;&#010;I03_QUANTIDADE = 0;&#013;&#010;IF (I01_SITTRIBU IS NULL) THEN&#013;&#010;I01_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I02_SITTRIBU IS NULL) THEN&#013;&#010;I02_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I03_SITTRIBU IS NULL) THEN&#013;&#010;I03_SITTRIBU = &apos;0.0&apos;;&#013;&#010;/* ABRO O MOVIMENTO - PRIMEIRA PASSAGEM */&#013;&#010;IF ((CODMOVIMENTO &gt; 0) AND (PASSAGEM = 0)) THEN&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE A VENDA JÁ EXISTE */&#013;&#010;SELECT&#013;&#010;COUNT(*)&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TESTE;&#013;&#010;IF (TESTE IS NULL) THEN&#013;&#010;TESTE = 0;&#013;&#010;/* PEGO A CONDICAO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;CONDICAO&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCONDPAG&#013;&#010;INTO&#013;&#010;CONDICAO;&#013;&#010;/* SE JÁ EXISTIR ATUALIZO A VENDA */&#013;&#010;IF (TESTE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* EXCLUSÃO DOS ITENS DA VENDA */&#013;&#010;IF (PROCESSO = &apos;VEN&apos;) THEN&#013;&#010;BEGIN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* APAGO OS ITENS DO ORÇAMENTO */&#013;&#010;IF ((PROCESSO = &apos;ORC&apos;) OR (PROCESSO = &apos;COM&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* ATUALIZO OS DADOS DO CABEÇALHO DO MOVIMENTO */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;CODCLIENTE        = :CODCLIENTE,&#013;&#010;CODRESPONSAVEL    = :CODRESPONSAVEL,&#013;&#010;CODVENDEDOR       = :CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER  = :CODNATUOPER,&#013;&#010;CONDICAO          = :CONDICAO,&#013;&#010;CODCONDPAG        = :CODCONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;IF (PROCESSO = &apos;VEN&apos;) THEN&#013;&#010;BEGIN&#013;&#010;MOV_ES = 2;&#013;&#010;MOV_TIPO = 5;&#013;&#010;END&#013;&#010;/* ORÇAMENTO */&#013;&#010;IF (PROCESSO = &apos;ORC&apos;) THEN&#013;&#010;BEGIN&#013;&#010;MOV_ES = 0;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* COMPRA */&#013;&#010;IF (PROCESSO = &apos;COM&apos;) THEN&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* INICIO O MOVIMENTO */&#013;&#010;INSERT INTO&#013;&#010;MOVIMENTOS (&#013;&#010;CODIGO,&#013;&#010;ES,&#013;&#010;TIPO,&#013;&#010;CODCLIENTE,&#013;&#010;DATA,&#013;&#010;VALOR_SERVICOS,&#013;&#010;VALOR_ITENS,&#013;&#010;DESCONTO,&#013;&#010;VALOR_ICMS,&#013;&#010;NOTA_FRETE,&#013;&#010;NOTA_VALOR_FRETE,&#013;&#010;NOTA_VALOR_SEGURO,&#013;&#010;NOTA_VALOR_OUTROS,&#013;&#010;NOTA_QUANTIDADE,&#013;&#010;NOTA_PESOBRUTO,&#013;&#010;NOTA_PESOLIQUIDO,&#013;&#010;STATUS,&#013;&#010;CONDICAO,&#013;&#010;ICMSSIMPLES,&#013;&#010;ICMSSIMPALIQ,&#013;&#010;ISSALIQ,&#013;&#010;NOTA_DATASAIDA,&#013;&#010;NOTA_BASEICMSSUBST,&#013;&#010;NOTA_VALORICMSSUBST,&#013;&#010;VALOR_IPI,&#013;&#010;GARANTIA,&#013;&#010;EMPRESTIMO,&#013;&#010;CODEMPRESA,&#013;&#010;VALOR_COMISSAO,&#013;&#010;ECF,&#013;&#010;OSTIPO,&#013;&#010;VALOR_IPI_PRODUTOS,&#013;&#010;AUTORIZADO,&#013;&#010;CODRESPONSAVEL,&#013;&#010;CODVENDEDOR_ABRE,&#013;&#010;CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER,&#013;&#010;PRIORIDADE,&#013;&#010;CONDICAO,&#013;&#010;CODCENTRO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;PERCCOMIS_PROD,&#013;&#010;PERCCOMIS_PECA,&#013;&#010;PERCCOMIS_SERV,&#013;&#010;CODCONDPAG)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:MOV_ES,&#013;&#010;:MOV_TIPO,&#013;&#010;:CODCLIENTE,&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;&apos;,&#013;&#010;&apos;&apos;,                    /* CONDICAO        */&#013;&#010;&apos;N&apos;,                   /* ICMSSIMPLES     */&#013;&#010;0,                     /* ICMSSIMPLESALIQ */&#013;&#010;0,                     /* ISSALIQ         */&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;0,&#013;&#010;&apos;N&apos;,                   /* ECF             */&#013;&#010;99,                    /* OSTIPO          */&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODVENDEDOR,&#013;&#010;:CODNATUOPER,&#013;&#010;1,&#013;&#010;:CONDICAO,&#013;&#010;1,                     /* CODCENTRO       */&#013;&#010;&apos;F&apos;,                   /* COMIS CALCULO   */&#013;&#010;0,                     /* COMIS PROD      */&#013;&#010;0,                     /* COMIS PECA      */&#013;&#010;0,                     /* COMIS SERV      */&#013;&#010;:CODCONDPAG);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;/* SE NÃO HOUVER MOVIMENTO, ABORTO */&#013;&#010;IF (CODMOVIMENTO = 0) THEN&#013;&#010;EXIT;&#013;&#010;/* SE DEU ERRO PASSO AOS ITENS */&#013;&#010;IF (RE_MOVIMENTO = 0) THEN&#013;&#010;BEGIN&#013;&#010;/*   V E N D A   */&#013;&#010;IF (PROCESSO = &apos;VEN&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I01_CODBARRA,&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I02_CODBARRA,&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I03_CODBARRA,&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;S&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_SERVICOS;&#013;&#010;IF (TEMP_SERVICOS IS NULL) THEN&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;P&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* VENDA */&#013;&#010;/*   O R C A M E N T O   */&#013;&#010;IF (PROCESSO = &apos;ORC&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* ORÇAMENTO */&#013;&#010;/*   C O M P R A   */&#013;&#010;IF (PROCESSO = &apos;COM&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* COMPRA */&#013;&#010;/* ATUALIZO OS TOTAIS */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_SERVICOS = :TEMP_SERVICOS,&#013;&#010;VALOR_ITENS    = :TEMP_PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (270, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="271" SQL="/*&#013;&#010;** BUG NA SIMPLIFICAÇÃO DO PROCESSO DE VENDA&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_ABRE (&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;CODEMPRESA INTEGER,&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODRESPONSAVEL INTEGER,&#013;&#010;CODVENDEDOR INTEGER,&#013;&#010;CODCONDPAG INTEGER,&#013;&#010;CODNATUOPER VARCHAR(5),&#013;&#010;PROCESSO CHAR(3),&#013;&#010;PASSAGEM INTEGER,&#013;&#010;I01_CODBARRA VARCHAR(14),&#013;&#010;I01_QUANTIDADE NUMERIC(9,2),&#013;&#010;I01_VALOR NUMERIC(9,2),&#013;&#010;I01_DESCONTO NUMERIC(9,2),&#013;&#010;I01_ICMS NUMERIC(9,2),&#013;&#010;I01_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I01_IPI NUMERIC(9,2),&#013;&#010;I01_SITTRIBU CHAR(3),&#013;&#010;I02_CODBARRA VARCHAR(14),&#013;&#010;I02_QUANTIDADE NUMERIC(9,2),&#013;&#010;I02_VALOR NUMERIC(9,2),&#013;&#010;I02_DESCONTO NUMERIC(9,2),&#013;&#010;I02_ICMS NUMERIC(9,2),&#013;&#010;I02_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I02_IPI NUMERIC(9,2),&#013;&#010;I02_SITTRIBU CHAR(3),&#013;&#010;I03_CODBARRA VARCHAR(14),&#013;&#010;I03_QUANTIDADE NUMERIC(9,2),&#013;&#010;I03_VALOR NUMERIC(9,2),&#013;&#010;I03_DESCONTO NUMERIC(9,2),&#013;&#010;I03_ICMS NUMERIC(9,2),&#013;&#010;I03_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I03_IPI NUMERIC(9,2),&#013;&#010;I03_SITTRIBU CHAR(3))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER,&#013;&#010;RE_01 INTEGER,&#013;&#010;RE_02 INTEGER,&#013;&#010;RE_03 INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TESTE INTEGER;&#013;&#010;DECLARE VARIABLE CONDICAO VARCHAR(40);&#013;&#010;DECLARE VARIABLE TEMP_SERVICOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_PRODUTOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE MOV_ES INTEGER;&#013;&#010;DECLARE VARIABLE MOV_TIPO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODIGO INTEGER;&#013;&#010;BEGIN&#013;&#010;/* SE FOR NULO, É VENDA */&#013;&#010;if (PROCESSO IS NULL) then&#013;&#010;PROCESSO = &apos;VEN&apos;;&#013;&#010;/* ZERAMENTO DOS RETORNOS */&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;RE_01 = 0;&#013;&#010;RE_02 = 0;&#013;&#010;RE_03 = 0;&#013;&#010;IF (I01_QUANTIDADE IS NULL) THEN&#013;&#010;I01_QUANTIDADE = 0;&#013;&#010;IF (I02_QUANTIDADE IS NULL) THEN&#013;&#010;I02_QUANTIDADE = 0;&#013;&#010;IF (I03_QUANTIDADE IS NULL) THEN&#013;&#010;I03_QUANTIDADE = 0;&#013;&#010;IF (I01_SITTRIBU IS NULL) THEN&#013;&#010;I01_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I02_SITTRIBU IS NULL) THEN&#013;&#010;I02_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I03_SITTRIBU IS NULL) THEN&#013;&#010;I03_SITTRIBU = &apos;0.0&apos;;&#013;&#010;/* ABRO O MOVIMENTO - PRIMEIRA PASSAGEM */&#013;&#010;IF ((CODMOVIMENTO &gt; 0) AND (PASSAGEM = 1)) THEN&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE A VENDA JÁ EXISTE */&#013;&#010;SELECT&#013;&#010;COUNT(*)&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TESTE;&#013;&#010;IF (TESTE IS NULL) THEN&#013;&#010;TESTE = 0;&#013;&#010;/* PEGO A CONDICAO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;CONDICAO&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCONDPAG&#013;&#010;INTO&#013;&#010;CONDICAO;&#013;&#010;/* SE JÁ EXISTIR ATUALIZO A VENDA */&#013;&#010;IF (TESTE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* EXCLUSÃO DOS ITENS DA VENDA */&#013;&#010;IF (PROCESSO = &apos;VEN&apos;) THEN&#013;&#010;BEGIN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* APAGO OS ITENS DO ORÇAMENTO */&#013;&#010;IF ((PROCESSO = &apos;ORC&apos;) OR (PROCESSO = &apos;COM&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* ATUALIZO OS DADOS DO CABEÇALHO DO MOVIMENTO */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;CODCLIENTE        = :CODCLIENTE,&#013;&#010;CODRESPONSAVEL    = :CODRESPONSAVEL,&#013;&#010;CODVENDEDOR       = :CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER  = :CODNATUOPER,&#013;&#010;CONDICAO          = :CONDICAO,&#013;&#010;CODCONDPAG        = :CODCONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 2;&#013;&#010;MOV_TIPO = 5;&#013;&#010;END&#013;&#010;/* ORÇAMENTO */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 0;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* COMPRA */&#013;&#010;if (PROCESSO = &apos;COM&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* INICIO O MOVIMENTO */&#013;&#010;INSERT INTO&#013;&#010;MOVIMENTOS (&#013;&#010;CODIGO,&#013;&#010;ES,&#013;&#010;TIPO,&#013;&#010;CODCLIENTE,&#013;&#010;DATA,&#013;&#010;VALOR_SERVICOS,&#013;&#010;VALOR_ITENS,&#013;&#010;DESCONTO,&#013;&#010;VALOR_ICMS,&#013;&#010;NOTA_FRETE,&#013;&#010;NOTA_VALOR_FRETE,&#013;&#010;NOTA_VALOR_SEGURO,&#013;&#010;NOTA_VALOR_OUTROS,&#013;&#010;NOTA_QUANTIDADE,&#013;&#010;NOTA_PESOBRUTO,&#013;&#010;NOTA_PESOLIQUIDO,&#013;&#010;STATUS,&#013;&#010;CONDICAO,&#013;&#010;ICMSSIMPLES,&#013;&#010;ICMSSIMPALIQ,&#013;&#010;ISSALIQ,&#013;&#010;NOTA_DATASAIDA,&#013;&#010;NOTA_BASEICMSSUBST,&#013;&#010;NOTA_VALORICMSSUBST,&#013;&#010;VALOR_IPI,&#013;&#010;GARANTIA,&#013;&#010;EMPRESTIMO,&#013;&#010;CODEMPRESA,&#013;&#010;VALOR_COMISSAO,&#013;&#010;ECF,&#013;&#010;OSTIPO,&#013;&#010;VALOR_IPI_PRODUTOS,&#013;&#010;AUTORIZADO,&#013;&#010;CODRESPONSAVEL,&#013;&#010;CODVENDEDOR_ABRE,&#013;&#010;CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER,&#013;&#010;PRIORIDADE,&#013;&#010;CONDICAO,&#013;&#010;CODCENTRO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;PERCCOMIS_PROD,&#013;&#010;PERCCOMIS_PECA,&#013;&#010;PERCCOMIS_SERV,&#013;&#010;CODCONDPAG)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:MOV_ES,&#013;&#010;:MOV_TIPO,&#013;&#010;:CODCLIENTE,&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;&apos;,&#013;&#010;&apos;&apos;,                    /* CONDICAO        */&#013;&#010;&apos;N&apos;,                   /* ICMSSIMPLES     */&#013;&#010;0,                     /* ICMSSIMPLESALIQ */&#013;&#010;0,                     /* ISSALIQ         */&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;0,&#013;&#010;&apos;N&apos;,                   /* ECF             */&#013;&#010;99,                    /* OSTIPO          */&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODVENDEDOR,&#013;&#010;:CODNATUOPER,&#013;&#010;1,&#013;&#010;:CONDICAO,&#013;&#010;1,                     /* CODCENTRO       */&#013;&#010;&apos;F&apos;,                   /* COMIS CALCULO   */&#013;&#010;0,                     /* COMIS PROD      */&#013;&#010;0,                     /* COMIS PECA      */&#013;&#010;0,                     /* COMIS SERV      */&#013;&#010;:CODCONDPAG);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;/* SE NÃO HOUVER MOVIMENTO, ABORTO */&#013;&#010;IF (CODMOVIMENTO = 0) THEN&#013;&#010;EXIT;&#013;&#010;/* SE DEU ERRO PASSO AOS ITENS */&#013;&#010;IF (RE_MOVIMENTO = 0) THEN&#013;&#010;BEGIN&#013;&#010;/*   V E N D A   */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I01_CODBARRA,&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I02_CODBARRA,&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I03_CODBARRA,&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;S&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_SERVICOS;&#013;&#010;IF (TEMP_SERVICOS IS NULL) THEN&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;P&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* VENDA */&#013;&#010;/*   O R C A M E N T O   */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* ORÇAMENTO */&#013;&#010;/*   C O M P R A   */&#013;&#010;if (PROCESSO = &apos;COM&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* COMPRA */&#013;&#010;/* ATUALIZO OS TOTAIS */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_SERVICOS = :TEMP_SERVICOS,&#013;&#010;VALOR_ITENS    = :TEMP_PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (271, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="272" SQL="/*&#013;&#010;** BUG DA ATIVAÇÃO&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ATIVACAO_LER (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODATIVACAO INTEGER,&#013;&#010;CODAPARELHO INTEGER,&#013;&#010;APARELHO VARCHAR(60),&#013;&#010;SERIE VARCHAR(30),&#013;&#010;SERIE2 VARCHAR(30),&#013;&#010;NUMERO VARCHAR(20),&#013;&#010;CODOPERADORA INTEGER,&#013;&#010;CODPLANO INTEGER,&#013;&#010;VALOR1 NUMERIC(9,2),&#013;&#010;VALOR2 NUMERIC(9,2),&#013;&#010;REBATE CHAR(1))&#013;&#010;AS&#013;&#010;begin&#013;&#010;/* ATIVACAO */&#013;&#010;SELECT FIRST 1&#013;&#010;ID.CODIGO&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = ID.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.PS = &apos;S&apos; AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;PO.ATIVACAO = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:CODATIVACAO;&#013;&#010;IF (CODATIVACAO IS NOT NULL) THEN&#013;&#010;BEGIN&#013;&#010;/* APARELHO */&#013;&#010;SELECT FIRST 1&#013;&#010;PO.CODIGO,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.PRECOVENDA,&#013;&#010;ID.VALOR_PAGO,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.NUMERO_FONE,&#013;&#010;ID.CODOPERADORA,&#013;&#010;ID.CODPLANO&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = ID.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.PS = &apos;P&apos; AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.UNICO = 1 AND&#013;&#010;ID.NUMERO_FONE IS NOT NULL AND&#013;&#010;ID.CODPLANO IS NOT NULL&#013;&#010;INTO&#013;&#010;:CODAPARELHO,&#013;&#010;:APARELHO,&#013;&#010;:VALOR1,&#013;&#010;:VALOR2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:NUMERO,&#013;&#010;:CODOPERADORA,&#013;&#010;:CODPLANO;&#013;&#010;IF (VALOR1 &lt;&gt; VALOR2) THEN&#013;&#010;REBATE = &apos;S&apos;;&#013;&#010;ELSE&#013;&#010;REBATE = &apos;N&apos;;&#013;&#010;END&#013;&#010;suspend;&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE EH_CHECKIN (&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODAPTO INTEGER,&#013;&#010;VALOR NUMERIC(9,2),&#013;&#010;PROCESSO CHAR(1),&#013;&#010;CODOPERADOR INTEGER,&#013;&#010;DATA_ENTRADA DATE,&#013;&#010;DATA_SAIDA DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODHOSPED INTEGER;&#013;&#010;DECLARE VARIABLE OPERADOR_CHECKIN INTEGER;&#013;&#010;DECLARE VARIABLE DATA_CHECKIN DATE;&#013;&#010;DECLARE VARIABLE TIPO INTEGER;&#013;&#010;DECLARE VARIABLE CODMOVIMENTO INTEGER;&#013;&#010;DECLARE VARIABLE RE_MOVIMENTO INTEGER;&#013;&#010;DECLARE VARIABLE RE_01 INTEGER;&#013;&#010;DECLARE VARIABLE RE_02 INTEGER;&#013;&#010;DECLARE VARIABLE RE_03 INTEGER;&#013;&#010;DECLARE VARIABLE CODNATUOPER VARCHAR(5);&#013;&#010;DECLARE VARIABLE CODCONDPAG INTEGER;&#013;&#010;begin&#013;&#010;/* CÓDIGO SEQUENCIAL DE HOSPEDAGEM */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER(&apos;EH_HOSPED&apos;)&#013;&#010;RETURNING_VALUES CODHOSPED;&#013;&#010;/* TIPO DO PROCESSO */&#013;&#010;IF (PROCESSO = &apos;R&apos;) THEN&#013;&#010;BEGIN&#013;&#010;OPERADOR_CHECKIN = NULL;&#013;&#010;DATA_CHECKIN = NULL;&#013;&#010;TIPO = 0;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;OPERADOR_CHECKIN = CODOPERADOR;&#013;&#010;DATA_CHECKIN = DATA_ENTRADA;&#013;&#010;TIPO = 1;&#013;&#010;END&#013;&#010;/* GRAVO REGISTRO DE HOSPEDAGEM */&#013;&#010;INSERT INTO&#013;&#010;EH_HOSPED (&#013;&#010;CODHOSPED,&#013;&#010;CODCLIENTE,&#013;&#010;TIPO,&#013;&#010;DATA_ENTRADA,&#013;&#010;DATA_SAIDA,&#013;&#010;DATA_CHECKIN,&#013;&#010;OPERADOR_RESERVA,&#013;&#010;OPERADOR_CHECKIN,&#013;&#010;CODEMPRESA)&#013;&#010;VALUES (&#013;&#010;:CODHOSPED,&#013;&#010;:CODCLIENTE,&#013;&#010;:TIPO,&#013;&#010;:DATA_ENTRADA,&#013;&#010;:DATA_SAIDA,&#013;&#010;:DATA_CHECKIN,&#013;&#010;:CODOPERADOR,&#013;&#010;:OPERADOR_CHECKIN,&#013;&#010;:CODEMPRESA);&#013;&#010;/* GRAVO REGISTRO DE APTO */&#013;&#010;INSERT INTO&#013;&#010;EH_ITHOSPED_APTO (&#013;&#010;CODHOSPED,&#013;&#010;CODAPTO,&#013;&#010;DATA_ENTRADA,&#013;&#010;DATA_SAIDA,&#013;&#010;VALOR_DIARIA,&#013;&#010;DIARIAS,&#013;&#010;TOTAL)&#013;&#010;VALUES (&#013;&#010;:CODHOSPED,&#013;&#010;:CODAPTO,&#013;&#010;:DATA_ENTRADA,&#013;&#010;:DATA_SAIDA,&#013;&#010;:VALOR,&#013;&#010;1,&#013;&#010;0);&#013;&#010;/* CÓDIGO DO MOVIMENTO DE FATURAMENTO */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER (&apos;MOVIMENTOS&apos;)&#013;&#010;RETURNING_VALUES CODMOVIMENTO;&#013;&#010;/* NATUREZA PADRAO DA VENDA */&#013;&#010;SELECT&#013;&#010;SI.NATUOPER_PADRAO&#013;&#010;FROM&#013;&#010;SISCONFIG SI&#013;&#010;WHERE&#013;&#010;CODIGO = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:CODNATUOPER;&#013;&#010;/* CONDIÇÃO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;MIN(CODIGO)&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;INTO&#013;&#010;:CODCONDPAG;&#013;&#010;/* ABRO A VENDA */&#013;&#010;SELECT&#013;&#010;RE_MOVIMENTO,&#013;&#010;RE_01,&#013;&#010;RE_02,&#013;&#010;RE_03&#013;&#010;FROM&#013;&#010;VENDA_ABRE (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODEMPRESA,&#013;&#010;:CODCLIENTE,&#013;&#010;:CODOPERADOR,&#013;&#010;:CODOPERADOR,&#013;&#010;:CODCONDPAG,&#013;&#010;:CODNATUOPER,&#013;&#010;&apos;VEN&aposend&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE EH_CHECKIN TO PUBLIC;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (272, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="273" SQL="/*&#013;&#010;** HOTELARIA I&#013;&#010;*/&#013;&#010;CREATE TABLE EH_RECURSOS(&#013;&#010;CODRECURSO INTEIRO_VALIDO NOT NULL,&#013;&#010;RECURSO STR40_VALIDO);&#013;&#010;ALTER TABLE EH_RECURSOS&#013;&#010;ADD CONSTRAINT FK_EH_RECURSOS&#013;&#010;PRIMARY KEY (CODRECURSO);&#013;&#010;GRANT ALL ON EH_RECURSOS TO PUBLIC;&#013;&#010;CREATE TABLE EH_APTOS(&#013;&#010;CODAPTO INTEIRO_VALIDO NOT NULL,&#013;&#010;APTO STR40,&#013;&#010;VALOR DINHEIRO,&#013;&#010;STATUS STR20);&#013;&#010;ALTER TABLE EH_APTOS&#013;&#010;ADD CONSTRAINT FK_EH_APTOS&#013;&#010;PRIMARY KEY (CODAPTO);&#013;&#010;GRANT ALL ON EH_APTOS TO PUBLIC;&#013;&#010;CREATE TABLE EH_ITAPTOS(&#013;&#010;CODAPTO INTEIRO_VALIDO NOT NULL,&#013;&#010;CODRECURSO INTEIRO_VALIDO NOT NULL);&#013;&#010;ALTER TABLE EH_ITAPTOS&#013;&#010;ADD CONSTRAINT FK_EH_ITAPTOS&#013;&#010;PRIMARY KEY (CODAPTO,CODRECURSO);&#013;&#010;ALTER TABLE EH_ITAPTOS&#013;&#010;ADD CONSTRAINT EH_ITAPTOS_FK01&#013;&#010;FOREIGN KEY (CODAPTO)&#013;&#010;REFERENCES EH_APTOS(CODAPTO)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_ITAPTOS&#013;&#010;ADD CONSTRAINT EH_ITAPTOS_FK02&#013;&#010;FOREIGN KEY (CODRECURSO)&#013;&#010;REFERENCES EH_RECURSOS(CODRECURSO)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;GRANT ALL ON EH_ITAPTOS TO PUBLIC;&#013;&#010;CREATE TABLE EH_HOSPED(&#013;&#010;CODHOSPED INTEIRO_VALIDO NOT NULL,&#013;&#010;CODCLIENTE INTEIRO_VALIDO,&#013;&#010;TIPO INTEIRO_VALIDO,&#013;&#010;STATUS STR20,&#013;&#010;DATA_ENTRADA DATADIA_VALIDA,&#013;&#010;DATA_SAIDA DATADIA_VALIDA,&#013;&#010;DATA_CHECKIN DATA,&#013;&#010;DATA_CHECKOUT DATA,&#013;&#010;OPERADOR_RESERVA INTEIRO_VALIDO,&#013;&#010;OPERADOR_CHECKIN INTEIRO,&#013;&#010;OPERADOR_CHECKOUT INTEIRO);&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT FK_EH_HOSPED&#013;&#010;PRIMARY KEY (CODHOSPED);&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT EH_HOSPED_FK01&#013;&#010;FOREIGN KEY (CODCLIENTE)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT EH_HOSPED_FK02&#013;&#010;FOREIGN KEY (OPERADOR_RESERVA)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT EH_HOSPED_FK03&#013;&#010;FOREIGN KEY (OPERADOR_CHECKIN)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT EH_HOSPED_FK04&#013;&#010;FOREIGN KEY (OPERADOR_CHECKOUT)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;GRANT ALL ON EH_HOSPED TO PUBLIC;&#013;&#010;CREATE TABLE EH_ITHOSPED_APTO(&#013;&#010;CODHOSPED INTEIRO_VALIDO NOT NULL,&#013;&#010;CODAPTO INTEIRO_VALIDO NOT NULL,&#013;&#010;DATA_ENTRADA DATADIA_VALIDA,&#013;&#010;DATA_SAIDA DATADIA_VALIDA,&#013;&#010;VALOR_DIARIA DINHEIRO,&#013;&#010;DIARIAS INTEIRO_CHEIO1,&#013;&#010;TOTAL DINHEIRO);&#013;&#010;ALTER TABLE EH_ITHOSPED_APTO&#013;&#010;ADD CONSTRAINT FK_EH_ITHOSPED_APTO&#013;&#010;PRIMARY KEY (CODHOSPED,CODAPTO);&#013;&#010;ALTER TABLE EH_ITHOSPED_APTO&#013;&#010;ADD CONSTRAINT EH_ITHOSPED_APTO_FK01&#013;&#010;FOREIGN KEY (CODHOSPED)&#013;&#010;REFERENCES EH_HOSPED(CODHOSPED)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_ITHOSPED_APTO&#013;&#010;ADD CONSTRAINT EH_ITHOSPED_APTO_FK02&#013;&#010;FOREIGN KEY (CODAPTO)&#013;&#010;REFERENCES EH_APTOS(CODAPTO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;GRANT ALL ON EH_ITHOSPED_APTO TO PUBLIC;&#013;&#010;CREATE TABLE EH_ITHOSPED_APTOPROD(&#013;&#010;CODHOSPED INTEIRO_VALIDO NOT NULL,&#013;&#010;CODAPTO INTEIRO_VALIDO NOT NULL,&#013;&#010;CODPRODUTO INTEIRO_VALIDO NOT NULL,&#013;&#010;DATA DATA_VALIDA NOT NULL,&#013;&#010;QUANTIDADE DINHEIRO,&#013;&#010;VALOR_UNITARIO DINHEIRO,&#013;&#010;DESCONTO DINHEIRO,&#013;&#010;TOTAL DINHEIRO);&#013;&#010;ALTER TABLE EH_ITHOSPED_APTOPROD&#013;&#010;ADD CONSTRAINT FK_EH_ITHOSPED_APTOPROD&#013;&#010;PRIMARY KEY (CODHOSPED,CODAPTO,CODPRODUTO,DATA);&#013;&#010;ALTER TABLE EH_ITHOSPED_APTOPROD&#013;&#010;ADD CONSTRAINT EH_ITHOSPED_APTOPROD_FK01&#013;&#010;FOREIGN KEY (CODHOSPED,CODAPTO)&#013;&#010;REFERENCES EH_ITHOSPED_APTO(CODHOSPED,CODAPTO)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_ITHOSPED_APTOPROD&#013;&#010;ADD CONSTRAINT EH_ITHOSPED_APTOPROD_FK02&#013;&#010;FOREIGN KEY (CODPRODUTO)&#013;&#010;REFERENCES PRODUTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;GRANT ALL ON EH_ITHOSPED_APTOPROD TO PUBLIC;&#013;&#010;ALTER TABLE EH_ITHOSPED_APTOPROD ADD OPERADOR INTEIRO_VALIDO;&#013;&#010;ALTER TABLE EH_ITHOSPED_APTOPROD&#013;&#010;ADD CONSTRAINT EH_ITHOSPED_APTOPROD_FK03&#013;&#010;FOREIGN KEY (OPERADOR)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;CREATE TABLE EH_ITHOSPED_APTOFAT(&#013;&#010;CODHOSPED INTEIRO_VALIDO NOT NULL,&#013;&#010;CODMOVIMENTO INTEIRO_VALIDO NOT NULL);&#013;&#010;ALTER TABLE EH_ITHOSPED_APTOFAT&#013;&#010;ADD CONSTRAINT FK_EH_ITHOSPED_APTOFAT&#013;&#010;PRIMARY KEY (CODHOSPED,CODMOVIMENTO);&#013;&#010;ALTER TABLE EH_ITHOSPED_APTOFAT&#013;&#010;ADD CONSTRAINT EH_ITHOSPED_APTOFAT_FK01&#013;&#010;FOREIGN KEY (CODHOSPED)&#013;&#010;REFERENCES EH_HOSPED(CODHOSPED)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_ITHOSPED_APTOFAT&#013;&#010;ADD CONSTRAINT EH_ITHOSPED_APTOFAT_FK02&#013;&#010;FOREIGN KEY (CODMOVIMENTO)&#013;&#010;REFERENCES MOVIMENTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;GRANT ALL ON EH_ITHOSPED_APTOFAT TO PUBLIC;&#013;&#010;ALTER TABLE EH_ITHOSPED_APTOPROD&#013;&#010;ADD CONSTRAINT EH_ITHOSPED_APTOPROD_FK04&#013;&#010;FOREIGN KEY (CODHOSPED,CODMOVIMENTO)&#013;&#010;REFERENCES EH_ITHOSPED_APTOFAT(CODHOSPED,CODMOVIMENTO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;INSERT INTO&#013;&#010;SEQUENCIA (&#013;&#010;CODIGO,&#013;&#010;TABELA,&#013;&#010;SEQUENCIA)&#013;&#010;VALUES (&#013;&#010;49,&#013;&#010;&apos;EH_RECURSOS&apos;,&#013;&#010;1);&#013;&#010;INSERT INTO&#013;&#010;SEQUENCIA (&#013;&#010;CODIGO,&#013;&#010;TABELA,&#013;&#010;SEQUENCIA)&#013;&#010;VALUES (&#013;&#010;50,&#013;&#010;&apos;EH_HOSPED&apos;,&#013;&#010;1);&#013;&#010;ALTER TABLE EH_HOSPED ADD CODEMPRESA INTEIRO_VALIDO;&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT EH_HOSPED_FK05&#013;&#010;FOREIGN KEY (CODEMPRESA)&#013;&#010;REFERENCES SISCONFIG(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (273, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="274" SQL="/*&#013;&#010;** PREVENÇÃO DO BUG DO SALDO ANTERIOR NOS PAGAMENTOS&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER PAGAMENTOS_BU0&#013;&#010;ACTIVE BEFORE UPDATE POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ULTIMO     INTEGER;&#013;&#010;DECLARE VARIABLE SALDO      NUMERIC(9, 2);&#013;&#010;DECLARE VARIABLE SALDONOVO  NUMERIC(9, 2);&#013;&#010;BEGIN&#013;&#010;/* CARREGO AS OPCOES DO DOCUMENTO */&#013;&#010;SELECT&#013;&#010;TIPO_PAG,&#013;&#010;TIPO_DOC&#013;&#010;FROM&#013;&#010;DOCUMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODDOCUMENTO&#013;&#010;INTO&#013;&#010;NEW.TIPO_PAG,&#013;&#010;NEW.TIPO_DOC;&#013;&#010;/* FOI ESTORNADO? */&#013;&#010;IF (NEW.ESTORNO_CODUSUARIO IS NOT NULL) THEN&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;NOMEUSER&#013;&#010;FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.ESTORNO_CODUSUARIO&#013;&#010;INTO&#013;&#010;NEW.ESTORNO_NOMEUSER;&#013;&#010;END&#013;&#010;/* ESTA PAGO? */&#013;&#010;IF ((OLD.PAGO = 0) AND (NEW.PAGO = 1)) THEN&#013;&#010;BEGIN&#013;&#010;/* DESCUBRO O SALDO ANTERIOR */&#013;&#010;SELECT&#013;&#010;MAX(CODLANCTO)&#013;&#010;FROM&#013;&#010;PAGAMENTOS&#013;&#010;WHERE&#013;&#010;CODCONTA = NEW.CODCONTA AND&#013;&#010;CODEMPRESA = NEW.CODEMPRESA&#013;&#010;INTO&#013;&#010;:ULTIMO;&#013;&#010;IF (ULTIMO IS NOT NULL) THEN&#013;&#010;BEGIN&#013;&#010;SELECT FIRST 1&#013;&#010;PA.SALDOATU&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.CODLANCTO = :ULTIMO&#013;&#010;ORDER BY&#013;&#010;PA.DATAPAGO DESC&#013;&#010;INTO&#013;&#010;:SALDO;&#013;&#010;END ELSE SALDO = 0;&#013;&#010;/* PEGO O NUMERO DESTE LANCAMENTO */&#013;&#010;SELECT&#013;&#010;SEQUENCIA&#013;&#010;FROM&#013;&#010;SEQ_OBTER(&apos;LANCTO&apos;)&#013;&#010;INTO&#013;&#010;:ULTIMO;&#013;&#010;/* GRAVO OS VALORES CORRETOS */&#013;&#010;NEW.SALDOANT = SALDO;&#013;&#010;IF (NEW.ES = 1) THEN&#013;&#010;SALDONOVO = SALDO - NEW.TOTAL_PAGO;&#013;&#010;IF (NEW.ES = 2) THEN&#013;&#010;SALDONOVO = SALDO + NEW.TOTAL_PAGO;&#013;&#010;NEW.SALDOATU = SALDONOVO;&#013;&#010;NEW.NOMEUSUARIO = USER;&#013;&#010;NEW.DATAPAGO = &apos;NOW&apos;;&#013;&#010;NEW.CODLANCTO = ULTIMO;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (274, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="275" SQL="/*&#013;&#010;** ADMINISTRAÇÃO HOTELEIRA II&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE EH_CHECKIN (&#013;&#010;CODHOSPED INTEGER,&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODAPTO INTEGER,&#013;&#010;VALOR NUMERIC(9,2),&#013;&#010;PROCESSO CHAR(1),&#013;&#010;CODOPERADOR INTEGER,&#013;&#010;DATA_ENTRADA DATE,&#013;&#010;DATA_SAIDA DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE OPERADOR_CHECKIN INTEGER;&#013;&#010;DECLARE VARIABLE DATA_CHECKIN DATE;&#013;&#010;DECLARE VARIABLE TIPO INTEGER;&#013;&#010;DECLARE VARIABLE CODMOVIMENTO INTEGER;&#013;&#010;DECLARE VARIABLE RE_MOVIMENTO INTEGER;&#013;&#010;DECLARE VARIABLE RE_01 INTEGER;&#013;&#010;DECLARE VARIABLE RE_02 INTEGER;&#013;&#010;DECLARE VARIABLE RE_03 INTEGER;&#013;&#010;DECLARE VARIABLE CODNATUOPER VARCHAR(5);&#013;&#010;DECLARE VARIABLE CODCONDPAG INTEGER;&#013;&#010;begin&#013;&#010;/* TIPO DO PROCESSO */&#013;&#010;IF (PROCESSO = &apos;R&apos;) THEN&#013;&#010;BEGIN&#013;&#010;OPERADOR_CHECKIN = NULL;&#013;&#010;DATA_CHECKIN = NULL;&#013;&#010;TIPO = 0;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;OPERADOR_CHECKIN = CODOPERADOR;&#013;&#010;DATA_CHECKIN = DATA_ENTRADA;&#013;&#010;TIPO = 1;&#013;&#010;END&#013;&#010;/* CODHOSPEDAGEM PREVIA */&#013;&#010;IF (CODHOSPED IS NULL) THEN&#013;&#010;BEGIN&#013;&#010;/* CÓDIGO SEQUENCIAL DE HOSPEDAGEM */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER(&apos;EH_HOSPED&apos;)&#013;&#010;RETURNING_VALUES CODHOSPED;&#013;&#010;/* GRAVO REGISTRO DE HOSPEDAGEM */&#013;&#010;INSERT INTO&#013;&#010;EH_HOSPED (&#013;&#010;CODHOSPED,&#013;&#010;CODCLIENTE,&#013;&#010;TIPO,&#013;&#010;DATA_ENTRADA,&#013;&#010;DATA_SAIDA,&#013;&#010;DATA_CHECKIN,&#013;&#010;OPERADOR_RESERVA,&#013;&#010;OPERADOR_CHECKIN,&#013;&#010;CODEMPRESA)&#013;&#010;VALUES (&#013;&#010;:CODHOSPED,&#013;&#010;:CODCLIENTE,&#013;&#010;:TIPO,&#013;&#010;:DATA_ENTRADA,&#013;&#010;:DATA_SAIDA,&#013;&#010;:DATA_CHECKIN,&#013;&#010;:CODOPERADOR,&#013;&#010;:OPERADOR_CHECKIN,&#013;&#010;:CODEMPRESA);&#013;&#010;/* GRAVO REGISTRO DE APTO */&#013;&#010;INSERT INTO&#013;&#010;EH_ITHOSPED_APTO (&#013;&#010;CODHOSPED,&#013;&#010;CODAPTO,&#013;&#010;DATA_ENTRADA,&#013;&#010;DATA_SAIDA,&#013;&#010;VALOR_DIARIA,&#013;&#010;DIARIAS,&#013;&#010;TOTAL)&#013;&#010;VALUES (&#013;&#010;:CODHOSPED,&#013;&#010;:CODAPTO,&#013;&#010;:DATA_ENTRADA,&#013;&#010;:DATA_SAIDA,&#013;&#010;:VALOR,&#013;&#010;1,&#013;&#010;0);&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* ATUALIZO OS DADOS DA HOSPEDAGEM */&#013;&#010;UPDATE&#013;&#010;EH_HOSPED&#013;&#010;SET&#013;&#010;TIPO = :TIPO,&#013;&#010;DATA_ENTRADA = :DATA_ENTRADA,&#013;&#010;DATA_SAIDA = :DATA_SAIDA,&#013;&#010;OPERADOR_CHECKIN = :OPERADOR_CHECKIN&#013;&#010;WHERE&#013;&#010;CODHOSPED = :CODHOSPED;&#013;&#010;END&#013;&#010;IF (PROCESSO = &apos;C&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/* CÓDIGO DO MOVIMENTO DE FATURAMENTO */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER (&apos;MOVIMENTOS&apos;)&#013;&#010;RETURNING_VALUES CODMOVIMENTO;&#013;&#010;/* NATUREZA PADRAO DA VENDA */&#013;&#010;SELECT&#013;&#010;SI.NATUOPER_PADRAO&#013;&#010;FROM&#013;&#010;SISCONFIG SI&#013;&#010;WHERE&#013;&#010;CODIGO = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:CODNATUOPER;&#013;&#010;/* CONDIÇÃO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;MIN(CODIGO)&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;INTO&#013;&#010;:CODCONDPAG;&#013;&#010;/* ABRO A VENDA */&#013;&#010;SELECT&#013;&#010;RE_MOVIMENTO,&#013;&#010;RE_01,&#013;&#010;RE_02,&#013;&#010;RE_03&#013;&#010;FROM&#013;&#010;VENDA_ABRE (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODEMPRESA,&#013;&#010;:CODCLIENTE,&#013;&#010;:CODOPERADOR,&#013;&#010;:CODOPERADOR,&#013;&#010;:CODCONDPAG,&#013;&#010;:CODNATUOPER,&#013;&#010;&apos;VEN&aposend&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE EH_CHECKIN (&#013;&#010;CODHOSPED INTEGER,&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODAPTO INTEGER,&#013;&#010;VALOR NUMERIC(9,2),&#013;&#010;PROCESSO CHAR(1),&#013;&#010;CODOPERADOR INTEGER,&#013;&#010;DATA_ENTRADA DATE,&#013;&#010;DATA_SAIDA DATE,&#013;&#010;CODEMPRESA INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODHOSPED_RESULTADO INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE OPERADOR_CHECKIN INTEGER;&#013;&#010;DECLARE VARIABLE DATA_CHECKIN DATE;&#013;&#010;DECLARE VARIABLE TIPO INTEGER;&#013;&#010;DECLARE VARIABLE CODMOVIMENTO INTEGER;&#013;&#010;DECLARE VARIABLE RE_MOVIMENTO INTEGER;&#013;&#010;DECLARE VARIABLE RE_01 INTEGER;&#013;&#010;DECLARE VARIABLE RE_02 INTEGER;&#013;&#010;DECLARE VARIABLE RE_03 INTEGER;&#013;&#010;DECLARE VARIABLE CODNATUOPER VARCHAR(5);&#013;&#010;DECLARE VARIABLE CODCONDPAG INTEGER;&#013;&#010;begin&#013;&#010;/* TIPO DO PROCESSO */&#013;&#010;IF (PROCESSO = &apos;R&apos;) THEN&#013;&#010;BEGIN&#013;&#010;OPERADOR_CHECKIN = NULL;&#013;&#010;DATA_CHECKIN = NULL;&#013;&#010;TIPO = 0;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;OPERADOR_CHECKIN = CODOPERADOR;&#013;&#010;DATA_CHECKIN = DATA_ENTRADA;&#013;&#010;TIPO = 1;&#013;&#010;END&#013;&#010;/* CODHOSPEDAGEM PREVIA */&#013;&#010;IF (CODHOSPED IS NULL) THEN&#013;&#010;BEGIN&#013;&#010;/* CÓDIGO SEQUENCIAL DE HOSPEDAGEM */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER(&apos;EH_HOSPED&apos;)&#013;&#010;RETURNING_VALUES CODHOSPED;&#013;&#010;/* GRAVO REGISTRO DE HOSPEDAGEM */&#013;&#010;INSERT INTO&#013;&#010;EH_HOSPED (&#013;&#010;CODHOSPED,&#013;&#010;CODCLIENTE,&#013;&#010;TIPO,&#013;&#010;DATA_ENTRADA,&#013;&#010;DATA_SAIDA,&#013;&#010;DATA_CHECKIN,&#013;&#010;OPERADOR_RESERVA,&#013;&#010;OPERADOR_CHECKIN,&#013;&#010;CODEMPRESA)&#013;&#010;VALUES (&#013;&#010;:CODHOSPED,&#013;&#010;:CODCLIENTE,&#013;&#010;:TIPO,&#013;&#010;:DATA_ENTRADA,&#013;&#010;:DATA_SAIDA,&#013;&#010;:DATA_CHECKIN,&#013;&#010;:CODOPERADOR,&#013;&#010;:OPERADOR_CHECKIN,&#013;&#010;:CODEMPRESA);&#013;&#010;/* GRAVO REGISTRO DE APTO */&#013;&#010;INSERT INTO&#013;&#010;EH_ITHOSPED_APTO (&#013;&#010;CODHOSPED,&#013;&#010;CODAPTO,&#013;&#010;DATA_ENTRADA,&#013;&#010;DATA_SAIDA,&#013;&#010;VALOR_DIARIA,&#013;&#010;DIARIAS,&#013;&#010;TOTAL)&#013;&#010;VALUES (&#013;&#010;:CODHOSPED,&#013;&#010;:CODAPTO,&#013;&#010;:DATA_ENTRADA,&#013;&#010;:DATA_SAIDA,&#013;&#010;:VALOR,&#013;&#010;1,&#013;&#010;0);&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* ATUALIZO OS DADOS DA HOSPEDAGEM */&#013;&#010;UPDATE&#013;&#010;EH_HOSPED&#013;&#010;SET&#013;&#010;TIPO = :TIPO,&#013;&#010;DATA_ENTRADA = :DATA_ENTRADA,&#013;&#010;DATA_SAIDA = :DATA_SAIDA,&#013;&#010;OPERADOR_CHECKIN = :OPERADOR_CHECKIN&#013;&#010;WHERE&#013;&#010;CODHOSPED = :CODHOSPED;&#013;&#010;END&#013;&#010;IF (PROCESSO = &apos;C&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/* CÓDIGO DO MOVIMENTO DE FATURAMENTO */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER (&apos;MOVIMENTOS&apos;)&#013;&#010;RETURNING_VALUES CODMOVIMENTO;&#013;&#010;/* NATUREZA PADRAO DA VENDA */&#013;&#010;SELECT&#013;&#010;SI.NATUOPER_PADRAO&#013;&#010;FROM&#013;&#010;SISCONFIG SI&#013;&#010;WHERE&#013;&#010;CODIGO = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:CODNATUOPER;&#013;&#010;/* CONDIÇÃO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;MIN(CODIGO)&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;INTO&#013;&#010;:CODCONDPAG;&#013;&#010;/* ABRO A VENDA */&#013;&#010;SELECT&#013;&#010;RE_MOVIMENTO,&#013;&#010;RE_01,&#013;&#010;RE_02,&#013;&#010;RE_03&#013;&#010;FROM&#013;&#010;VENDA_ABRE (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODEMPRESA,&#013;&#010;:CODCLIENTE,&#013;&#010;:CODOPERADOR,&#013;&#010;:CODOPERADOR,&#013;&#010;:CODCONDPAG,&#013;&#010;:CODNATUOPER,&#013;&#010;&apos;VEN&apos;,&#013;&#010;1,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL,&#013;&#010;NULL)&#013;&#010;INTO&#013;&#010;:RE_MOVIMENTO,&#013;&#010;:RE_01,&#013;&#010;:RE_02,&#013;&#010;:RE_03;&#013;&#010;/* DEFINO O RELATIONAMENTO ENTRE A HOSPEDAGEM E A FATURA */&#013;&#010;INSERT INTO&#013;&#010;EH_ITHOSPED_APTOFAT (&#013;&#010;CODHOSPED,&#013;&#010;CODMOVIMENTO)&#013;&#010;VALUES (&#013;&#010;:CODHOSPED,&#013;&#010;:CODMOVIMENTO);&#013;&#010;END&#013;&#010;CODHOSPED_RESULTADO = CODHOSPED;&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (275, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="276" SQL="/*&#013;&#010;** LOCALIZAÇÃO NA O.S.&#013;&#010;*/&#013;&#010;ALTER TABLE MOVIMENTOS ADD LOCALIZACAO STR40;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (276, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="277" SQL="/*&#013;&#010;** CORREÇÃO DA CHAVE CLI_FILES -&gt; CLIENTES&#013;&#010;*/&#013;&#010;ALTER TABLE CLI_FILES DROP CONSTRAINT CLI_FILES_FK01;&#013;&#010;ALTER TABLE CLI_FILES&#013;&#010;ADD CONSTRAINT CLI_FILES_FK01&#013;&#010;FOREIGN KEY (CODCLIENTE)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (277, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="278" SQL="/*&#013;&#010;** ADMINISTRAÇÃO HOTELEIRA - CORREÇÕES&#013;&#010;*/&#013;&#010;ALTER TABLE &quot;EH_APTOS&quot; DROP &quot;VALOR&quot;;&#013;&#010;DROP PROCEDURE EH_CHECKIN;&#013;&#010;DROP TABLE EH_ITHOSPED_APTOPROD;&#013;&#010;DROP TABLE EH_ITHOSPED_APTOFAT;&#013;&#010;DROP TABLE EH_ITHOSPED_APTO;&#013;&#010;DROP TABLE EH_HOSPED;&#013;&#010;CREATE TABLE EH_ITAPTOV(&#013;&#010;CODAPTO INTEIRO_VALIDO NOT NULL,&#013;&#010;CODVALOR INTEIRO_VALIDO NOT NULL,&#013;&#010;VALOR DINHEIRO);&#013;&#010;ALTER TABLE EH_ITAPTOV&#013;&#010;ADD CONSTRAINT FK_EH_ITAPTOV&#013;&#010;PRIMARY KEY (CODAPTO,CODVALOR);&#013;&#010;GRANT ALL ON EH_ITAPTOV TO PUBLIC;&#013;&#010;CREATE TABLE EH_HOSPED(&#013;&#010;CODEMPRESA INTEIRO_VALIDO NOT NULL,&#013;&#010;CODCLIENTE INTEIRO_VALIDO NOT NULL,&#013;&#010;DATA_CHECKIN DATADIA_VALIDA NOT NULL,&#013;&#010;DATA_PREVSAIDA DATADIA_VALIDA,&#013;&#010;DATA_CHECKOUT DATADIA,&#013;&#010;OPERADOR_CHECKIN INTEIRO_VALIDO,&#013;&#010;OPERADOR_CHECKOUT INTEIRO);&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT FK_EH_HOSPED&#013;&#010;PRIMARY KEY (CODEMPRESA,CODCLIENTE,DATA_CHECKIN);&#013;&#010;GRANT ALL ON EH_HOSPED TO PUBLIC;&#013;&#010;CREATE TABLE EH_DIARIAS(&#013;&#010;CODEMPRESA INTEIRO_VALIDO NOT NULL,&#013;&#010;CODCLIENTE INTEIRO_VALIDO NOT NULL,&#013;&#010;DATA_CHECKIN DATADIA_VALIDA NOT NULL,&#013;&#010;CODAPTO INTEIRO_VALIDO NOT NULL,&#013;&#010;DATAREF DATADIA_VALIDA NOT NULL,&#013;&#010;CODVALOR INTEIRO_VALIDO,&#013;&#010;VALOR DINHEIRO);&#013;&#010;ALTER TABLE EH_DIARIAS&#013;&#010;ADD CONSTRAINT FK_EH_DIARIAS&#013;&#010;PRIMARY KEY (CODEMPRESA,CODCLIENTE,DATA_CHECKIN,CODAPTO,DATAREF);&#013;&#010;GRANT ALL ON EH_DIARIAS TO PUBLIC;&#013;&#010;CREATE TABLE EH_CONSUMO(&#013;&#010;CODEMPRESA INTEIRO_VALIDO NOT NULL,&#013;&#010;CODCLIENTE INTEIRO_VALIDO NOT NULL,&#013;&#010;DATA_CHECKIN DATADIA_VALIDA NOT NULL,&#013;&#010;CODAPTO INTEIRO_VALIDO NOT NULL,&#013;&#010;DATAREF DATADIA_VALIDA NOT NULL,&#013;&#010;DATAHORA DATA_VALIDA NOT NULL,&#013;&#010;CODPRODUTO INTEIRO_VALIDO NOT NULL,&#013;&#010;QUANTIDADE DINHEIRO,&#013;&#010;VALORUNITARIO DINHEIRO,&#013;&#010;VALOR COMPUTED BY ((QUANTIDADE * VALORUNITARIO)));&#013;&#010;ALTER TABLE EH_CONSUMO&#013;&#010;ADD CONSTRAINT FK_EH_CONSUMO&#013;&#010;PRIMARY KEY (CODEMPRESA,CODCLIENTE,DATA_CHECKIN,CODAPTO,DATAREF,DATAHORA,CODPRODUTO);&#013;&#010;GRANT ALL ON EH_CONSUMO TO PUBLIC;&#013;&#010;ALTER TABLE EH_DIARIAS&#013;&#010;ADD CONSTRAINT EH_DIARIAS_FK01&#013;&#010;FOREIGN KEY (CODEMPRESA,CODCLIENTE,DATA_CHECKIN)&#013;&#010;REFERENCES EH_HOSPED(CODEMPRESA,CODCLIENTE,DATA_CHECKIN)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_CONSUMO&#013;&#010;ADD CONSTRAINT EH_CONSUMO_FK01&#013;&#010;FOREIGN KEY (CODEMPRESA,CODCLIENTE,DATA_CHECKIN,CODAPTO,DATAREF)&#013;&#010;REFERENCES EH_DIARIAS(CODEMPRESA,CODCLIENTE,DATA_CHECKIN,CODAPTO,DATAREF)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT EH_HOSPED_FK01&#013;&#010;FOREIGN KEY (CODEMPRESA)&#013;&#010;REFERENCES SISCONFIG(CODIGO)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT EH_HOSPED_FK02&#013;&#010;FOREIGN KEY (CODCLIENTE)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT EH_HOSPED_FK03&#013;&#010;FOREIGN KEY (OPERADOR_CHECKIN)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_HOSPED&#013;&#010;ADD CONSTRAINT EH_HOSPED_FK04&#013;&#010;FOREIGN KEY (OPERADOR_CHECKOUT)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_DIARIAS&#013;&#010;ADD CONSTRAINT EH_DIARIAS_FK02&#013;&#010;FOREIGN KEY (CODAPTO,CODVALOR)&#013;&#010;REFERENCES EH_ITAPTOV(CODAPTO,CODVALOR)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_CONSUMO&#013;&#010;ADD CONSTRAINT EH_CONSUMO_FK02&#013;&#010;FOREIGN KEY (CODPRODUTO)&#013;&#010;REFERENCES PRODUTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_ITAPTOV&#013;&#010;ADD CONSTRAINT EH_ITAPTOV_FK01&#013;&#010;FOREIGN KEY (CODAPTO)&#013;&#010;REFERENCES EH_APTOS(CODAPTO)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;CREATE TABLE EH_RESERVAS(&#013;&#010;CODEMPRESA INTEIRO_VALIDO NOT NULL,&#013;&#010;CODRESERVA INTEIRO_VALIDO NOT NULL,&#013;&#010;CODCLIENTE INTEIRO_VALIDO,&#013;&#010;CODAPTO INTEIRO_VALIDO,&#013;&#010;DATA_ENTRADA DATADIA_VALIDA,&#013;&#010;DATA_SAIDA DATADIA_VALIDA,&#013;&#010;OPERADOR_RESERVA INTEIRO_VALIDO);&#013;&#010;ALTER TABLE EH_RESERVAS&#013;&#010;ADD CONSTRAINT FK_EH_RESERVAS&#013;&#010;PRIMARY KEY (CODEMPRESA,CODRESERVA);&#013;&#010;GRANT ALL ON EH_RESERVAS TO PUBLIC;&#013;&#010;ALTER TABLE EH_RESERVAS&#013;&#010;ADD CONSTRAINT EH_RESERVAS_FK01&#013;&#010;FOREIGN KEY (CODEMPRESA)&#013;&#010;REFERENCES SISCONFIG(CODIGO)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_RESERVAS&#013;&#010;ADD CONSTRAINT EH_RESERVAS_FK02&#013;&#010;FOREIGN KEY (CODCLIENTE)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_RESERVAS&#013;&#010;ADD CONSTRAINT EH_RESERVAS_FK03&#013;&#010;FOREIGN KEY (CODAPTO)&#013;&#010;REFERENCES EH_APTOS(CODAPTO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE EH_RESERVAS&#013;&#010;ADD CONSTRAINT EH_RESERVAS_FK04&#013;&#010;FOREIGN KEY (OPERADOR_RESERVA)&#013;&#010;REFERENCES CLIENTES(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;CREATE EXCEPTION EH_RESERVA &apos;JÁ EXISTE UMA RESERVA NESSE ESPAÇO DE TEMPO.&apos;;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE TRIGGER EH_RESERVAS_BI0 FOR EH_RESERVAS&#013;&#010;ACTIVE BEFORE INSERT POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODRESERVA INTEGER;&#013;&#010;DECLARE VARIABLE NOME VARCHAR(50);&#013;&#010;begin&#013;&#010;/* VERIFICO SE NÃO EXISTEM RESERVAS CONFLITANTES */&#013;&#010;SELECT FIRST 1&#013;&#010;EHRE.CODRESERVA,&#013;&#010;CL.NOME&#013;&#010;FROM&#013;&#010;EH_RESERVAS EHRE&#013;&#010;JOIN CLIENTES CL ON&#013;&#010;(CL.CODIGO = EHRE.CODCLIENTE)&#013;&#010;WHERE&#013;&#010;((NEW.DATA_ENTRADA BETWEEN EHRE.DATA_ENTRADA AND EHRE.DATA_SAIDA) OR&#013;&#010;(NEW.DATA_SAIDA BETWEEN EHRE.DATA_ENTRADA AND EHRE.DATA_SAIDA))  AND&#013;&#010;NEW.CODAPTO = EHRE.CODAPTO&#013;&#010;INTO&#013;&#010;:CODRESERVA,&#013;&#010;:NOME;&#013;&#010;IF (CODRESERVA IS NOT NULL) THEN&#013;&#010;EXCEPTION EH_RESERVA;&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE TRIGGER EH_RESERVAS_BU0 FOR EH_RESERVAS&#013;&#010;ACTIVE BEFORE UPDATE POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE RESERVA INTEGER;&#013;&#010;begin&#013;&#010;/* VERIFICO SE NÃO EXISTEM RESERVAS CONFLITANTES */&#013;&#010;SELECT&#013;&#010;COUNT(*)&#013;&#010;FROM&#013;&#010;EH_RESERVAS&#013;&#010;WHERE&#013;&#010;( ((NEW.DATA_ENTRADA &gt;= DATA_ENTRADA) AND (NEW.DATA_ENTRADA &lt; DATA_SAIDA)) OR&#013;&#010;((NEW.DATA_SAIDA &gt; DATA_ENTRADA) AND (NEW.DATA_SAIDA &lt;= DATA_SAIDA)) ) AND&#013;&#010;CODAPTO = NEW.CODAPTO&#013;&#010;INTO&#013;&#010;:RESERVA;&#013;&#010;IF (RESERVA &gt; 0) THEN&#013;&#010;EXCEPTION EH_RESERVA;&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER EH_RESERVAS_BI0&#013;&#010;ACTIVE BEFORE INSERT POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE RESERVA INTEGER;&#013;&#010;begin&#013;&#010;/* VERIFICO SE NÃO EXISTEM RESERVAS CONFLITANTES */&#013;&#010;SELECT&#013;&#010;COUNT(*)&#013;&#010;FROM&#013;&#010;EH_RESERVAS&#013;&#010;WHERE&#013;&#010;( ((NEW.DATA_ENTRADA &gt;= DATA_ENTRADA) AND (NEW.DATA_ENTRADA &lt; DATA_SAIDA)) OR&#013;&#010;((NEW.DATA_SAIDA &gt; DATA_ENTRADA) AND (NEW.DATA_SAIDA &lt;= DATA_SAIDA)) ) AND&#013;&#010;CODAPTO = NEW.CODAPTO&#013;&#010;INTO&#013;&#010;:RESERVA;&#013;&#010;IF (RESERVA &gt; 0) THEN&#013;&#010;EXCEPTION EH_RESERVA;&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (278, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="279" SQL="/*&#013;&#010;** MELHORIAS DE PERFORMANCE&#013;&#010;*/&#013;&#010;CREATE INDEX MOVIMENTOS_SI07 ON MOVIMENTOS (DATAFECHAMENTO);&#013;&#010;DROP INDEX INDIVIDUAIS_SI11;&#013;&#010;DROP INDEX INDIVIDUAIS_SI10;&#013;&#010;DROP INDEX INDIVIDUAIS_SI09;&#013;&#010;DROP INDEX INDIVIDUAIS_SI06;&#013;&#010;DROP INDEX INDIVIDUAIS_SI04;&#013;&#010;DROP INDEX IDX_PRODUTOS_PS;&#013;&#010;DROP INDEX MOVIMENTOS_SI06;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (279, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="280" SQL="/*&#013;&#010;** MELHORIAS DE PERFORMANCE E CORREÇÃO DE BUGS&#013;&#010;*/&#013;&#010;create index MOVIMENTOS_SI08 on MOVIMENTOS (DATA_ENTREGA);&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER STATUS_UPDATE&#013;&#010;ACTIVE BEFORE UPDATE POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE PRIMEIRO TIMESTAMP;&#013;&#010;DECLARE VARIABLE ULTIMO TIMESTAMP;&#013;&#010;DECLARE VARIABLE TOTAL DOUBLE PRECISION;&#013;&#010;DECLARE VARIABLE TDATAINI TIMESTAMP;&#013;&#010;DECLARE VARIABLE TDATAFIM TIMESTAMP;&#013;&#010;BEGIN&#013;&#010;/* DATA DA ENTREGA */&#013;&#010;IF ((NEW.QUEM_RECEBEU IS NOT NULL) AND (OLD.QUEM_RECEBEU IS NULL)) THEN&#013;&#010;NEW.DATA_ENTREGA = CURRENT_TIMESTAMP;&#013;&#010;/* DATA DA AUTORIZAÇÃO */&#013;&#010;IF ((NEW.QUEM_AUTORIZOU IS NOT NULL) AND (OLD.QUEM_AUTORIZOU IS NULL)) THEN&#013;&#010;NEW.DATA_AUTORIZADO = CURRENT_TIMESTAMP;&#013;&#010;IF (NEW.TIPO = 1) THEN&#013;&#010;BEGIN&#013;&#010;IF (NEW.ES = 0) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;ORC ABERTO&apos;;&#013;&#010;IF (NEW.AUTORIZADO = &apos;S&apos;) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;ORC AUTORIZADO&apos;;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF (NEW.DATA_AUTORIZADO IS NOT NULL) THEN&#013;&#010;NEW.STATUS = &apos;ORC NAO AUTO&apos;;&#013;&#010;IF ((NEW.RETORNO = &apos;S&apos;) AND (NEW.DATA_RETORNO IS NOT NULL)) THEN&#013;&#010;NEW.STATUS = &apos;ORC RETORNAR&apos;;&#013;&#010;END&#013;&#010;END&#013;&#010;IF (NEW.ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;if (NEW.FECHADO = &apos;S&apos;) then&#013;&#010;NEW.STATUS = &apos;COMPRA&apos;;&#013;&#010;ELSE&#013;&#010;NEW.STATUS = &apos;PED COMPRA&apos;;&#013;&#010;END&#013;&#010;END&#013;&#010;IF (NEW.TIPO = 2) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;OS ABERTA&apos;;&#013;&#010;/* VERIFICO SE O TECNICO JÁ INICIOU */&#013;&#010;SELECT FIRST 1&#013;&#010;DATAINI,&#013;&#010;DATAFIM&#013;&#010;FROM&#013;&#010;OS_VENDER&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = NEW.CODIGO&#013;&#010;INTO&#013;&#010;:TDATAINI,&#013;&#010;:TDATAFIM;&#013;&#010;IF (TDATAINI IS NOT NULL) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;OS INICIADA&apos;;&#013;&#010;IF (NEW.DATA_AUTORIZADO IS NOT NULL) THEN&#013;&#010;BEGIN&#013;&#010;IF (NEW.AUTORIZADO = &apos;N&apos;) THEN&#013;&#010;NEW.STATUS = &apos;OS NAO AUTO&apos;;&#013;&#010;ELSE&#013;&#010;IF (TDATAFIM IS NULL) THEN&#013;&#010;NEW.STATUS = &apos;OS AUTORIZADA&apos;;&#013;&#010;ELSE&#013;&#010;NEW.STATUS = &apos;OS CONCLUIDA&apos;;&#013;&#010;END&#013;&#010;IF (NEW.DATA_ENTREGA IS NOT NULL) THEN&#013;&#010;NEW.STATUS = &apos;OS ENTREGUE&apos;;&#013;&#010;END&#013;&#010;END&#013;&#010;IF (NEW.TIPO = 3) THEN NEW.STATUS = &apos;OS FECHADA&apos;;&#013;&#010;IF (NEW.TIPO = 4) THEN NEW.STATUS = &apos;PRE ASSITENCIA&apos;;&#013;&#010;IF (NEW.TIPO = 5) THEN NEW.STATUS = &apos;VENDA ABERTA&apos;;&#013;&#010;IF (NEW.TIPO = 6) THEN NEW.STATUS = &apos;VENDA FECHADA&apos;;&#013;&#010;IF (NEW.TIPO = 7) THEN NEW.STATUS = &apos;N/F&apos;;&#013;&#010;IF (NEW.TIPO = 8) THEN NEW.STATUS = &apos;REMESSA&apos;;&#013;&#010;IF (NEW.TIPO = 9) THEN NEW.STATUS = &apos;ESTORNO&apos;;&#013;&#010;/* VERIFICO O NUMERADOR */&#013;&#010;EXECUTE PROCEDURE VALIDA_NUMERADOR(NEW.NUMERADOR, NEW.CODCLIENTE,&#013;&#010;NEW.CODMARCA, NEW.CODMODELO, NEW.SERIE);&#013;&#010;/* calcular impostos */&#013;&#010;IF ((NEW.ES = 2)                  AND&#013;&#010;(NEW.TIPO IN (3, 6))          AND&#013;&#010;(OLD.TIPO IN (2, 5)))         THEN&#013;&#010;BEGIN&#013;&#010;/* TOTAL ICMS */&#013;&#010;EXECUTE PROCEDURE CALC_ICMS(NEW.CODIGO)&#013;&#010;RETURNING_VALUES NEW.VALOR_ICMS, NEW.VALOR_IPI_PRODUTOS;&#013;&#010;IF (NEW.NO_ICMS = &apos;N&apos;) THEN&#013;&#010;NEW.VALOR_ICMS = 0;&#013;&#010;IF (NEW.NO_IPI = &apos;N&apos;) THEN&#013;&#010;NEW.VALOR_IPI_PRODUTOS = 0;&#013;&#010;END&#013;&#010;/* FECHOU A VENDA */&#013;&#010;IF ((OLD.TIPO IN (2, 5)) AND (NEW.TIPO IN (3, 6))) THEN&#013;&#010;BEGIN&#013;&#010;/* USUÁRIO, DATA E HORA DO FECHAMENTO */&#013;&#010;NEW.DATAFECHAMENTO = &apos;NOW&apos;;&#013;&#010;NEW.FECHADO = &apos;S&apos;;&#013;&#010;IF ((UDF_TRIM(NEW.USUARIOFECHAMENTO) = &apos;&apos;) OR (NEW.USUARIOFECHAMENTO IS NULL)) THEN&#013;&#010;NEW.USUARIOFECHAMENTO = USER;&#013;&#010;/* VINCULAR SERIAL NA VENDA FECHADA */&#013;&#010;IF (NEW.TIPO = 6) THEN&#013;&#010;EXECUTE PROCEDURE VINCULO_SERIE NEW.CODIGO&#013;&#010;RETURNING_VALUES NEW.SERIE;&#013;&#010;/* TEMPOS DE ATENDIMENTO, SE FOR OS */&#013;&#010;IF (NEW.TIPO = 3) THEN&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;MIN(DATAINI),&#013;&#010;MAX(DATAFIM),&#013;&#010;SUM(THORAS)&#013;&#010;FROM&#013;&#010;OS_VENDER&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = NEW.CODIGO&#013;&#010;INTO&#013;&#010;:PRIMEIRO,&#013;&#010;:ULTIMO,&#013;&#010;:TOTAL;&#013;&#010;NEW.TEMPO_CHEGADA    = CAST(&#013;&#010;UDF_MINUTESBETWEEN(NEW.DATA, PRIMEIRO)&#013;&#010;AS DOUBLE PRECISION) / 60;&#013;&#010;NEW.TEMPO_CONCLUSAO  = CAST(&#013;&#010;UDF_MINUTESBETWEEN(NEW.DATA, ULTIMO)&#013;&#010;AS DOUBLE PRECISION) / 60;&#013;&#010;NEW.TEMPO_LANCAMENTO = CAST(&#013;&#010;UDF_MINUTESBETWEEN(ULTIMO, NEW.DATAFECHAMENTO)&#013;&#010;AS DOUBLE PRECISION) / 60;&#013;&#010;NEW.TEMPO_TECNICOS = TOTAL;&#013;&#010;NEW.DATAINICIO  = PRIMEIRO;&#013;&#010;NEW.DATATERMINO = ULTIMO;&#013;&#010;IF (PRIMEIRO &gt; NEW.DATAPREVISAO) THEN&#013;&#010;NEW.TEMPO_FORADOPRAZO = CAST(&#013;&#010;UDF_MINUTESBETWEEN(NEW.DATAPREVISAO, PRIMEIRO)&#013;&#010;AS DOUBLE PRECISION) / 60;&#013;&#010;ELSE&#013;&#010;NEW.TEMPO_FORADOPRAZO = 0;&#013;&#010;END&#013;&#010;NEW.TEMPO_CICLO = CAST(&#013;&#010;UDF_MINUTESBETWEEN(NEW.DATA, NEW.DATAFECHAMENTO)&#013;&#010;AS DOUBLE PRECISION) / 60;&#013;&#010;END&#013;&#010;/* RATEIO DOS CUSTOS DE COMPRA */&#013;&#010;IF ((NEW.ES = 1) AND (NEW.TIPO = 1)) THEN&#013;&#010;EXECUTE PROCEDURE RATEIO_CUSTOS (&#013;&#010;NEW.CODIGO,&#013;&#010;NEW.VALOR_PRODUTOS,&#013;&#010;NEW.VALOR_RATEIO_CUSTO);&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (280, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="281" SQL="/*&#013;&#010;** PRODUÇÃO - CADASTRO DE MATERIA PRIMA E COMPOSICAO DE PRODUTO&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER VERIFICA_BARRA_UPD&#013;&#010;INACTIVE BEFORE UPDATE POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TEMP_EAN VARCHAR(13);&#013;&#010;BEGIN&#013;&#010;IF (NEW.INDIVIDUAL = &apos;N&apos;) THEN&#013;&#010;BEGIN&#013;&#010;EXECUTE PROCEDURE CALC_EAN13(NEW.BARRA)&#013;&#010;RETURNING_VALUES :TEMP_EAN;&#013;&#010;IF (NEW.BARRA &lt;&gt; TEMP_EAN) THEN&#013;&#010;EXCEPTION PRODUTO_BARRA;&#013;&#010;END&#013;&#010;IF ((NEW.PRECOCUSTO &lt; 0) OR (NEW.PRECOVENDA &lt; 0)) THEN&#013;&#010;EXCEPTION VALOR_ZERO;&#013;&#010;IF (NEW.PRECOCUSTO &gt; NEW.PRECOVENDA) THEN&#013;&#010;EXCEPTION PRECOCUSTO_MAIOR;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER PRODUTOS_MARGEM_UPD&#013;&#010;INACTIVE BEFORE UPDATE POSITION 200&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;IF ((NEW.PRECOCUSTO = 0) AND (NEW.PRECOVENDA = 0)) THEN&#013;&#010;BEGIN&#013;&#010;NEW.MARGEM = 0;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF ((NEW.PRECOCUSTO = 0) AND (NEW.PRECOVENDA &gt; 0)) THEN&#013;&#010;BEGIN&#013;&#010;NEW.MARGEM = NEW.PRECOVENDA * 100;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;NEW.MARGEM = (100 - ((NEW.PRECOVENDA * 100) / NEW.PRECOCUSTO)) * -1;&#013;&#010;END&#013;&#010;END&#013;&#010;IF (NEW.CODSERVICO IS NULL) THEN&#013;&#010;BEGIN&#013;&#010;NEW.PRECOSERVICO = 0;&#013;&#010;NEW.PRECOTOTAL   = NEW.PRECOVENDA;&#013;&#010;END ELSE NEW.PRECOTOTAL = NEW.PRECOSERVICO + NEW.PRECOVENDA;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;ALTER TABLE PRODUTOS ADD MATPRIMA SIMNAO;&#013;&#010;UPDATE PRODUTOS SET MATPRIMA = &apos;N&apos;;&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER PRODUTOS_MARGEM_UPD&#013;&#010;ACTIVE BEFORE UPDATE POSITION 200&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;IF ((NEW.PRECOCUSTO = 0) AND (NEW.PRECOVENDA = 0)) THEN&#013;&#010;BEGIN&#013;&#010;NEW.MARGEM = 0;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF ((NEW.PRECOCUSTO = 0) AND (NEW.PRECOVENDA &gt; 0)) THEN&#013;&#010;BEGIN&#013;&#010;NEW.MARGEM = NEW.PRECOVENDA * 100;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;NEW.MARGEM = (100 - ((NEW.PRECOVENDA * 100) / NEW.PRECOCUSTO)) * -1;&#013;&#010;END&#013;&#010;END&#013;&#010;IF (NEW.CODSERVICO IS NULL) THEN&#013;&#010;BEGIN&#013;&#010;NEW.PRECOSERVICO = 0;&#013;&#010;NEW.PRECOTOTAL   = NEW.PRECOVENDA;&#013;&#010;END ELSE NEW.PRECOTOTAL = NEW.PRECOSERVICO + NEW.PRECOVENDA;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER VERIFICA_BARRA_UPD&#013;&#010;ACTIVE BEFORE UPDATE POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TEMP_EAN VARCHAR(13);&#013;&#010;BEGIN&#013;&#010;IF (NEW.INDIVIDUAL = &apos;N&apos;) THEN&#013;&#010;BEGIN&#013;&#010;EXECUTE PROCEDURE CALC_EAN13(NEW.BARRA)&#013;&#010;RETURNING_VALUES :TEMP_EAN;&#013;&#010;IF (NEW.BARRA &lt;&gt; TEMP_EAN) THEN&#013;&#010;EXCEPTION PRODUTO_BARRA;&#013;&#010;END&#013;&#010;IF ((NEW.PRECOCUSTO &lt; 0) OR (NEW.PRECOVENDA &lt; 0)) THEN&#013;&#010;EXCEPTION VALOR_ZERO;&#013;&#010;IF (NEW.PRECOCUSTO &gt; NEW.PRECOVENDA) THEN&#013;&#010;EXCEPTION PRECOCUSTO_MAIOR;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (281, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="282" SQL="/*&#013;&#010;** ANALISE ESTATISTICA DOS PRODUTOS VENDIDOS&#013;&#010;*/&#013;&#010;ALTER TABLE INDIVIDUAIS ADD DATAENTRADA DATA;&#013;&#010;ALTER TABLE INDIVIDUAIS ADD DATASAIDA DATA;&#013;&#010;ALTER TABLE INDIVIDUAIS ADD TEMPOESTOQUE DOUBLEPRES;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE TRIGGER INDIVIDUAIS_BUESTOQUE FOR INDIVIDUAIS&#013;&#010;ACTIVE BEFORE UPDATE POSITION 1000&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;/* ESTATISTICA DE GIRO DE ESTOQUE */&#013;&#010;IF ((NEW.VENDIDO = &apos;S&apos;) AND (OLD.VENDIDO = &apos;N&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;/* DATA DA COMPRA */&#013;&#010;SELECT&#013;&#010;MO.DATA&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;WHERE&#013;&#010;MO.CODIGO = NEW.CODMOVENTRADA&#013;&#010;INTO&#013;&#010;NEW.DATAENTRADA;&#013;&#010;/* DATA DA VENDA */&#013;&#010;SELECT&#013;&#010;MO.DATA&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;WHERE&#013;&#010;MO.CODIGO = NEW.CODMOVSAIDA&#013;&#010;INTO&#013;&#010;NEW.DATASAIDA;&#013;&#010;/* TEMPO NO ESTOQUE */&#013;&#010;NEW.TEMPOESTOQUE = CAST((NEW.DATASAIDA - NEW.DATAENTRADA) AS DOUBLE PRECISION);&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (282, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="283" SQL="/*&#013;&#010;** SUPORTE A MATERIA PRIMA&#013;&#010;*/&#013;&#010;CREATE DOMAIN PSM_REQDEF AS&#013;&#010;CHAR(1) CHARACTER SET NONE&#013;&#010;DEFAULT &apos;P&apos;&#013;&#010;CHECK (VALUE IN (&apos;P&apos;, &apos;S&apos;, &apos;M&apos;))&#013;&#010;COLLATE NONE;&#013;&#010;update RDB$RELATION_FIELDS set&#013;&#010;RDB$FIELD_SOURCE = &apos;PSM_REQDEF&apos;&#013;&#010;where (RDB$FIELD_NAME = &apos;PS&apos;) and&#013;&#010;(RDB$RELATION_NAME = &apos;INDIVIDUAIS&apos;);&#013;&#010;update RDB$RELATION_FIELDS set&#013;&#010;RDB$FIELD_SOURCE = &apos;PSM_REQDEF&apos;&#013;&#010;where (RDB$FIELD_NAME = &apos;PS&apos;) and&#013;&#010;(RDB$RELATION_NAME = &apos;PRODUTOS&apos;);&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (283, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="284" SQL="/*&#013;&#010;** CLIENTE PROTESTADO - NÃO RECEBER NA LOJA&#013;&#010;*/&#013;&#010;CREATE EXCEPTION PROTESTO_CARTORIO &apos;CLIENTE PROTESTADO. PAGAMENTO EM CARTÓRIO.&apos;;&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE BAIXA (&#013;&#010;CODIGO INTEGER,&#013;&#010;MULTA_JUROS NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;TIPO CHAR(1),&#013;&#010;CONTA INTEGER,&#013;&#010;CODDOCUMENTO INTEGER,&#013;&#010;INFODOC VARCHAR(50))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODMOVIMENTO INTEGER;&#013;&#010;DECLARE VARIABLE NUMERO INTEGER;&#013;&#010;DECLARE VARIABLE DESCRICAO VARCHAR(40);&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE VALOR NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE DATAVENCIMENTO TIMESTAMP;&#013;&#010;DECLARE VARIABLE NOVONUM NUMERIC(15,2);&#013;&#010;DECLARE VARIABLE CODEMPRESA INTEGER;&#013;&#010;DECLARE VARIABLE CODCLIENTE INTEGER;&#013;&#010;DECLARE VARIABLE CODCENTRO INTEGER;&#013;&#010;DECLARE VARIABLE CODPLANO INTEGER;&#013;&#010;DECLARE VARIABLE PERCCOMIS_CALCULO CHAR(1);&#013;&#010;DECLARE VARIABLE PERCCOMIS_PROD NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE PERCCOMIS_PECA NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE PERCCOMIS_SERV NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE CODVENDEDOR INTEGER;&#013;&#010;DECLARE VARIABLE CODTECNICO INTEGER;&#013;&#010;DECLARE VARIABLE PERC_TECNICO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TIPOP CHAR(1);&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE CLIENTE ESTÁ PROTESTADO EM CARTÓRIO */&#013;&#010;SELECT&#013;&#010;CL.TIPO_IMPEDIMENTO&#013;&#010;FROM&#013;&#010;CLIENTES CL&#013;&#010;JOIN PAGAMENTOS PA ON&#013;&#010;(PA.CODCLIENTE = CL.CODIGO)&#013;&#010;WHERE&#013;&#010;PA.CODIGO = :CODIGO&#013;&#010;INTO&#013;&#010;:TIPOP;&#013;&#010;/* NÃO RECEBER */&#013;&#010;IF (TIPOP = &apos;P&apos;) THEN&#013;&#010;EXCEPTION PROTESTO_CARTORIO;&#013;&#010;/* FAÇO A BAIXA */&#013;&#010;UPDATE&#013;&#010;PAGAMENTOS&#013;&#010;SET&#013;&#010;PAGO = 1,&#013;&#010;MULTA_JUROS = :MULTA_JUROS,&#013;&#010;DESCONTO = :DESCONTO,&#013;&#010;CODCONTA = :CONTA,&#013;&#010;CODDOCUMENTO = :CODDOCUMENTO,&#013;&#010;INFODOC = :INFODOC&#013;&#010;WHERE&#013;&#010;CODIGO = :CODIGO;&#013;&#010;/* COMISSIONAMENTO NO RECEBIMENTO ?? */&#013;&#010;SELECT&#013;&#010;PA.CODMOVIMENTO,&#013;&#010;PA.TOTAL_PAGO,&#013;&#010;MO.PERCCOMIS_CALCULO,&#013;&#010;MO.PERCCOMIS_PROD,&#013;&#010;MO.PERCCOMIS_PECA,&#013;&#010;MO.PERCCOMIS_SERV,&#013;&#010;MO.CODVENDEDOR&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;JOIN MOVIMENTOS MO ON&#013;&#010;(MO.CODIGO = PA.CODMOVIMENTO)&#013;&#010;WHERE&#013;&#010;PA.CODIGO = :CODIGO&#013;&#010;INTO&#013;&#010;:CODMOVIMENTO,&#013;&#010;:VALOR,&#013;&#010;:PERCCOMIS_CALCULO,&#013;&#010;:PERCCOMIS_PROD,&#013;&#010;:PERCCOMIS_PECA,&#013;&#010;:PERCCOMIS_SERV,&#013;&#010;:CODVENDEDOR;&#013;&#010;IF (PERCCOMIS_CALCULO = &apos;R&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/* LANÇAMENTO DE COMISSÃO PARA VENDEDOR */&#013;&#010;INSERT INTO&#013;&#010;COMISSOES (&#013;&#010;CODMOVIMENTO,&#013;&#010;CODVENDEDOR,&#013;&#010;DATA,&#013;&#010;CODPAGAMENTO,&#013;&#010;DESCRICAO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;VALOR,&#013;&#010;TIPOPRODUTO,&#013;&#010;PERCENTUAL)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODVENDEDOR,&#013;&#010;&apos;NOW&apos;,&#013;&#010;:CODIGO,&#013;&#010;&apos;VENDEDOR PRODUTOS RECEBIMENTO&apos;,&#013;&#010;:PERCCOMIS_CALCULO,&#013;&#010;((:VALOR * :PERCCOMIS_PROD) / 100),&#013;&#010;&apos;F&apos;,&#013;&#010;0);&#013;&#010;/* LANÇAMENTO DE COMISSÃO PARA TÉCNICOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;OS.CODVENDEDOR,&#013;&#010;OS.PORCENTAGEM&#013;&#010;FROM&#013;&#010;OS_VENDER OS&#013;&#010;WHERE&#013;&#010;OS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODTECNICO,&#013;&#010;:PERC_TECNICO&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* LANÇAMENTO SERVIÇOS PARA UM TECNICO */&#013;&#010;INSERT INTO&#013;&#010;COMISSOES (&#013;&#010;CODMOVIMENTO,&#013;&#010;CODVENDEDOR,&#013;&#010;DATA,&#013;&#010;CODPAGAMENTO,&#013;&#010;DESCRICAO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;VALOR,&#013;&#010;TIPOPRODUTO,&#013;&#010;PERCENTUAL)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODTECNICO,&#013;&#010;&apos;NOW&apos;,&#013;&#010;:CODIGO,&#013;&#010;&apos;TECNICO SERVICOS RECEBIMENTO&apos;,&#013;&#010;:PERCCOMIS_CALCULO,&#013;&#010;((:VALOR * :PERCCOMIS_SERV) / 100) * (:PERC_TECNICO / 100),&#013;&#010;&apos;S&apos;,&#013;&#010;0);&#013;&#010;/* LANÇAMENTO PEÇAS PARA UM TECNICO */&#013;&#010;INSERT INTO&#013;&#010;COMISSOES (&#013;&#010;CODMOVIMENTO,&#013;&#010;CODVENDEDOR,&#013;&#010;DATA,&#013;&#010;CODPAGAMENTO,&#013;&#010;DESCRICAO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;VALOR,&#013;&#010;TIPOPRODUTO,&#013;&#010;PERCENTUAL)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODTECNICO,&#013;&#010;&apos;NOW&apos;,&#013;&#010;:CODIGO,&#013;&#010;&apos;TECNICO PECAS RECEBIMENTO&apos;,&#013;&#010;:PERCCOMIS_CALCULO,&#013;&#010;((:VALOR * :PERCCOMIS_PECA) / 100) * (:PERC_TECNICO / 100),&#013;&#010;&apos;C&apos;,&#013;&#010;0);&#013;&#010;END&#013;&#010;END&#013;&#010;/* É UMA BAIXA PARCIAL */&#013;&#010;IF ((TIPO = &apos;P&apos;) AND (DESCONTO &gt; 0)) THEN&#013;&#010;BEGIN&#013;&#010;/* LEIO OS DADOS DO PAGAMENTO */&#013;&#010;SELECT&#013;&#010;CODMOVIMENTO,&#013;&#010;UDF_LEFT(DESCRICAO, 35),&#013;&#010;ES,&#013;&#010;DESCONTO,&#013;&#010;DATAVENCIMENTO,&#013;&#010;CODEMPRESA,&#013;&#010;CODCLIENTE,&#013;&#010;CODCENTRO,&#013;&#010;CODPLANO&#013;&#010;FROM&#013;&#010;PAGAMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODIGO&#013;&#010;INTO&#013;&#010;:CODMOVIMENTO,&#013;&#010;:DESCRICAO,&#013;&#010;:ES,&#013;&#010;:VALOR,&#013;&#010;:DATAVENCIMENTO,&#013;&#010;:CODEMPRESA,&#013;&#010;:CODCLIENTE,&#013;&#010;:CODCENTRO,&#013;&#010;:CODPLANO;&#013;&#010;/* PEGO O PROXIMO CODIGO */&#013;&#010;SELECT&#013;&#010;SEQUENCIA&#013;&#010;FROM&#013;&#010;SEQ_OBTER(&apos;PAGAMENTOS&apos;)&#013;&#010;INTO&#013;&#010;:CODIGO;&#013;&#010;/* ACERTO A DESCRICAO */&#013;&#010;DESCRICAO = &apos;ADIC &apos; || DESCRICAO;&#013;&#010;/* PEGO O NUMERO NOVO */&#013;&#010;SELECT&#013;&#010;MAX(NUMERO) + 1&#013;&#010;FROM&#013;&#010;PAGAMENTOS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:NOVONUM;&#013;&#010;/* INSIRO O PAGAMENTO RESTANTE */&#013;&#010;INSERT INTO&#013;&#010;PAGAMENTOS (&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;NUMERO,&#013;&#010;DESCRICAO,&#013;&#010;ES,&#013;&#010;DATACADAST,&#013;&#010;VALOR,&#013;&#010;EXTERNO,&#013;&#010;PAGO,&#013;&#010;DESCONTO,&#013;&#010;MULTA_JUROS,&#013;&#010;DATAVENCIMENTO,&#013;&#010;SALDOANT,&#013;&#010;SALDOATU,&#013;&#010;CODCONTA,&#013;&#010;CODDOCUMENTO,&#013;&#010;CODEMPRESA,&#013;&#010;CODCLIENTE,&#013;&#010;CODCENTRO,&#013;&#010;CODPLANO)&#013;&#010;VALUES (&#013;&#010;:CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;:NOVONUM,&#013;&#010;:DESCRICAO,&#013;&#010;:ES,&#013;&#010;&apos;NOW&apos;,&#013;&#010;:VALOR,&#013;&#010;&apos;S&apos;,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;:DATAVENCIMENTO,&#013;&#010;0,&#013;&#010;0,&#013;&#010;:CONTA,&#013;&#010;:CODDOCUMENTO,&#013;&#010;:CODEMPRESA,&#013;&#010;:CODCLIENTE,&#013;&#010;:CODCENTRO,&#013;&#010;:CODPLANO);&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE AUTOBAIXA(&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODDOC_AVISTA INTEGER;&#013;&#010;DECLARE VARIABLE CODIGO INTEGER;&#013;&#010;DECLARE VARIABLE CODDOCUMENTO INTEGER;&#013;&#010;DECLARE VARIABLE DATAVENCIMENTO TIMESTAMP;&#013;&#010;DECLARE VARIABLE PAGO INTEGER;&#013;&#010;DECLARE VARIABLE PARCELA_TOTAL DOUBLE PRECISION;&#013;&#010;DECLARE VARIABLE MOVIMENTO_TOTAL DOUBLE PRECISION;&#013;&#010;DECLARE VARIABLE XPARC INTEGER;&#013;&#010;DECLARE VARIABLE CODEMPRESA INTEGER;&#013;&#010;DECLARE VARIABLE CODCONTA INTEGER;&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE OS VALORES SAO CORRESPONDENTES */&#013;&#010;SELECT&#013;&#010;COUNT(PA.CODIGO),&#013;&#010;SUM(PA.VALOR)&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;WHERE&#013;&#010;PA.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:XPARC,&#013;&#010;:PARCELA_TOTAL;&#013;&#010;IF (XPARC IS NULL) THEN&#013;&#010;XPARC = 0;&#013;&#010;/* COMISSIONAMENTO DE VENDEDORES */&#013;&#010;SELECT&#013;&#010;NOTA_VALOR_TOTAL,&#013;&#010;CODEMPRESA&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:MOVIMENTO_TOTAL,&#013;&#010;:CODEMPRESA;&#013;&#010;/* VALOR DAS PARCELAS DEVE SER IGUAL OU SUPERIOR AO VALOR DO FATURAMENTO */&#013;&#010;IF (MOVIMENTO_TOTAL &gt; PARCELA_TOTAL) THEN&#013;&#010;EXCEPTION VALOR_PARCELA;&#013;&#010;/* APOS FECHADO, MOSTRO AS PARCELAS */&#013;&#010;UPDATE&#013;&#010;PAGAMENTOS&#013;&#010;SET&#013;&#010;ES = 2&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO;&#013;&#010;/* QUAL É O DOCUMENTO A VISTA? */&#013;&#010;SELECT&#013;&#010;CODDOC_AVISTA&#013;&#010;FROM&#013;&#010;SISCONFIG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:CODDOC_AVISTA;&#013;&#010;/* PROCURO OS PAGAMENTOS, ALGUM É A VISTA? */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;CODDOCUMENTO,&#013;&#010;DATAVENCIMENTO,&#013;&#010;PAGO,&#013;&#010;CODCONTA&#013;&#010;FROM&#013;&#010;PAGAMENTOS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:CODDOCUMENTO,&#013;&#010;:DATAVENCIMENTO,&#013;&#010;:PAGO,&#013;&#010;:CODCONTA&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* O DOCUMENTO É A VISTA? */&#013;&#010;IF ((CODDOCUMENTO = CODDOC_AVISTA) AND (PAGO = 0)) THEN&#013;&#010;BEGIN&#013;&#010;/* FAÇO O LANÇAMENTO */&#013;&#010;EXECUTE PROCEDURE BAIXA(&#013;&#010;:CODIGO,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;T&apos;,&#013;&#010;:CODCONTA,&#013;&#010;:CODDOCUMENTO,&#013;&#010;&apos;&apos;);&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER MOVIMENTOS_AFTUPD&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODORIGEM INTEGER;&#013;&#010;DECLARE VARIABLE CODUSUARIO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODIGO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODPRODUTO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_SERIE VARCHAR(20);&#013;&#010;DECLARE VARIABLE TEMP_SERIE2 VARCHAR(20);&#013;&#010;DECLARE VARIABLE TEMP_VALOR_VENDA NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_DESCONTO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_BARRA VARCHAR(20);&#013;&#010;DECLARE VARIABLE TEMP_ICMSVENDA NUMERIC(9,4);&#013;&#010;DECLARE VARIABLE TEMP_QUANTIDADE NUMERIC(9,2);&#013;&#010;BEGIN&#013;&#010;IF (NEW.ES IN (0, 1, 2)) THEN&#013;&#010;BEGIN&#013;&#010;IF (((NEW.VALOR_TOTAL &lt;&gt; OLD.VALOR_TOTAL) OR&#013;&#010;(NEW.CONDICAO &lt;&gt; OLD.CONDICAO)) AND&#013;&#010;(NEW.TIPO IN (0, 1, 2, 5))) THEN&#013;&#010;EXECUTE PROCEDURE GERAPARCELAS(NEW.CODIGO);&#013;&#010;IF ((NEW.TIPO IN (3, 6)) AND (OLD.TIPO IN (2, 5))) THEN&#013;&#010;BEGIN&#013;&#010;EXECUTE PROCEDURE COMISSAO_CALC(NEW.CODIGO);&#013;&#010;EXECUTE PROCEDURE AUTOBAIXA(NEW.CODIGO);&#013;&#010;EXECUTE PROCEDURE CADASTRA_EQUIPAMENTO(NEW.CODIGO);&#013;&#010;END&#013;&#010;END&#013;&#010;/* ESTORNO */&#013;&#010;IF ((NEW.TIPO = 9) AND (OLD.TIPO &lt;&gt; 9)) THEN&#013;&#010;BEGIN&#013;&#010;/* GUARDO OS ITENS ESTORNADOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODPRODUTO,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;VALOR_VENDA,&#013;&#010;DESCONTO,&#013;&#010;BARRA,&#013;&#010;ICMSVENDA,&#013;&#010;SUM(QUANTIDADE)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = NEW.CODIGO&#013;&#010;GROUP BY&#013;&#010;CODPRODUTO,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;VALOR_VENDA,&#013;&#010;DESCONTO,&#013;&#010;BARRA,&#013;&#010;ICMSVENDA&#013;&#010;INTO&#013;&#010;TEMP_CODPRODUTO,&#013;&#010;TEMP_SERIE,&#013;&#010;TEMP_SERIE2,&#013;&#010;TEMP_VALOR_VENDA,&#013;&#010;TEMP_DESCONTO,&#013;&#010;TEMP_BARRA,&#013;&#010;TEMP_ICMSVENDA,&#013;&#010;TEMP_QUANTIDADE&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* CODIGO UNICO DO TEMPITENS */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES TEMP_CODIGO;&#013;&#010;/* GUARDO ITEM UM A UM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS (&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;BARRA)&#013;&#010;VALUES (&#013;&#010;:TEMP_CODIGO,&#013;&#010;NEW.CODIGO,&#013;&#010;:TEMP_CODPRODUTO,&#013;&#010;:TEMP_QUANTIDADE,&#013;&#010;:TEMP_VALOR_VENDA,&#013;&#010;:TEMP_DESCONTO,&#013;&#010;&apos;0.0&apos;,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;(:TEMP_VALOR_VENDA - :TEMP_DESCONTO),&#013;&#010;:TEMP_ICMSVENDA,&#013;&#010;:TEMP_ICMSVENDA,&#013;&#010;0,&#013;&#010;:TEMP_SERIE,&#013;&#010;:TEMP_SERIE2,&#013;&#010;:TEMP_BARRA);&#013;&#010;END&#013;&#010;/* VERIFICO SE POSSUI MOVIMENTAÇÃO DE ESTOQUE */&#013;&#010;IF (NEW.NO_ESTOQUE = &apos;S&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/* DEVOLVO OS PRODUTOS */&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = NEW.CODIGO;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* DEVOLVO OS PRODUTOS */&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = NEW.CODIGO;&#013;&#010;/* SIMPLESMENTE EXCLUO OS ITENS */&#013;&#010;DELETE FROM&#013;&#010;INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = NEW.CODIGO;&#013;&#010;END&#013;&#010;/* VERIFICO SE EXISTE MOVIMENTACAO FINANCEIRA */&#013;&#010;IF (NEW.NO_VENDA = &apos;S&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO USUARIO */&#013;&#010;SELECT&#013;&#010;CODIGO&#013;&#010;FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;NOMEUSER = NEW.USUARIOESTORNO&#013;&#010;INTO&#013;&#010;:CODUSUARIO;&#013;&#010;/* VERIFICO OS PAGAMENTOS E ESTORNO 1 A 1 */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO&#013;&#010;FROM&#013;&#010;PAGAMENTOS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = NEW.CODIGO&#013;&#010;INTO&#013;&#010;:CODORIGEM&#013;&#010;DO&#013;&#010;EXECUTE PROCEDURE FINANC_ESTORNO(:CODORIGEM, :CODUSUARIO);&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (284, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="285" SQL="/*&#013;&#010;** CADASTRO DE LINHA DE COMPRAS&#013;&#010;*/&#013;&#010;CREATE TABLE LINHA (&#013;&#010;CODIGO INTEIRO_VALIDO NOT NULL,&#013;&#010;LINHA STR40_VALIDO);&#013;&#010;ALTER TABLE LINHA&#013;&#010;ADD CONSTRAINT PK_LINHA&#013;&#010;PRIMARY KEY (CODIGO);&#013;&#010;GRANT ALL ON LINHA TO PUBLIC;&#013;&#010;ALTER TABLE MOVIMENTOS ADD CODLINHA INTEIRO;&#013;&#010;ALTER TABLE MOVIMENTOS&#013;&#010;ADD CONSTRAINT MOVIMENTOS_FK13&#013;&#010;FOREIGN KEY (CODLINHA)&#013;&#010;REFERENCES LINHA(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE CLIENTES ADD CODLINHA INTEIRO;&#013;&#010;ALTER TABLE CLIENTES&#013;&#010;ADD CONSTRAINT CLIENTES_FK03&#013;&#010;FOREIGN KEY (CODLINHA)&#013;&#010;REFERENCES LINHA(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;INSERT INTO&#013;&#010;SEQUENCIA(&#013;&#010;CODIGO,&#013;&#010;TABELA,&#013;&#010;SEQUENCIA)&#013;&#010;VALUES(&#013;&#010;51,&#013;&#010;&apos;LINHA&apos;,&#013;&#010;1);  &#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER MOVIMENTOS_VENDEDOR_UPD&#013;&#010;ACTIVE BEFORE UPDATE POSITION 0&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;/* NOME DO VENDEDOR */&#013;&#010;SELECT&#013;&#010;NOME&#013;&#010;FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODVENDEDOR&#013;&#010;INTO&#013;&#010;NEW.NOME_VENDEDOR;&#013;&#010;/* LINHA DO CLIENTE */&#013;&#010;SELECT&#013;&#010;CL.CODLINHA&#013;&#010;FROM&#013;&#010;CLIENTES CL&#013;&#010;WHERE&#013;&#010;CL.CODIGO = NEW.CODCLIENTE&#013;&#010;INTO&#013;&#010;NEW.CODLINHA;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (285, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="286" SQL="/*&#013;&#010;** COMPOSICAO DE PRODUTO ACABADO&#013;&#010;*/&#013;&#010;CREATE TABLE COMPOSICAO (&#013;&#010;CODPRODUTO INTEIRO_VALIDO NOT NULL,&#013;&#010;CODMATPRIMA INTEIRO_VALIDO NOT NULL,&#013;&#010;QUANTIDADE DINHEIRO);&#013;&#010;ALTER TABLE COMPOSICAO&#013;&#010;ADD CONSTRAINT PK_COMPOSICAO&#013;&#010;PRIMARY KEY (CODPRODUTO,CODMATPRIMA);&#013;&#010;GRANT ALL ON COMPOSICAO TO PUBLIC;&#013;&#010;ALTER TABLE COMPOSICAO&#013;&#010;ADD CONSTRAINT COMPOSICAO_FK01&#013;&#010;FOREIGN KEY (CODPRODUTO)&#013;&#010;REFERENCES PRODUTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE COMPOSICAO&#013;&#010;ADD CONSTRAINT COMPOSICAO_FK02&#013;&#010;FOREIGN KEY (CODMATPRIMA)&#013;&#010;REFERENCES PRODUTOS(CODIGO)&#013;&#010;ON UPDATE CASCADE;&#013;&#010;ALTER TABLE COMPOSICAO ADD CONVERTIDO DINHEIRO;&#013;&#010;CREATE EXCEPTION MATPRIMA_ERRADA &apos;PRODUTO ACABADO NÃO PODE SER MATÉRIA PRIMA.&apos;;&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE TRIGGER COMPOSICAO_BI0 FOR COMPOSICAO&#013;&#010;ACTIVE BEFORE INSERT POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE PSM CHAR(1);&#013;&#010;BEGIN&#013;&#010;/* NÃO PODE SER O MESMO */&#013;&#010;IF (NEW.CODPRODUTO = NEW.CODMATPRIMA) THEN&#013;&#010;EXCEPTION MATPRIMA_ERRADA;&#013;&#010;/* PRODUTO TEM QUE SER PRODUTO ACABADO */&#013;&#010;SELECT&#013;&#010;PO.PS&#013;&#010;FROM&#013;&#010;PRODUTOS PO&#013;&#010;WHERE&#013;&#010;PO.CODIGO = NEW.CODPRODUTO&#013;&#010;INTO&#013;&#010;:PSM;&#013;&#010;IF (PSM &lt;&gt; &apos;P&apos;) THEN&#013;&#010;EXCEPTION MATPRIMA_ERRADA;&#013;&#010;/* MATPRIMA TEM QUE SER MATERIA PRIMA */&#013;&#010;SELECT&#013;&#010;PO.PS&#013;&#010;FROM&#013;&#010;PRODUTOS PO&#013;&#010;WHERE&#013;&#010;PO.CODIGO = NEW.CODMATPRIMA&#013;&#010;INTO&#013;&#010;:PSM;&#013;&#010;IF (PSM &lt;&gt; &apos;M&apos;) THEN&#013;&#010;EXCEPTION MATPRIMA_ERRADA;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE TRIGGER COMPOSICAO_BU0 FOR COMPOSICAO&#013;&#010;ACTIVE BEFORE UPDATE POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE PSM CHAR(1);&#013;&#010;BEGIN&#013;&#010;/* NÃO PODE SER O MESMO */&#013;&#010;IF (NEW.CODPRODUTO = NEW.CODMATPRIMA) THEN&#013;&#010;EXCEPTION MATPRIMA_ERRADA;&#013;&#010;/* PRODUTO TEM QUE SER PRODUTO ACABADO */&#013;&#010;SELECT&#013;&#010;PO.PS&#013;&#010;FROM&#013;&#010;PRODUTOS PO&#013;&#010;WHERE&#013;&#010;PO.CODIGO = NEW.CODPRODUTO&#013;&#010;INTO&#013;&#010;:PSM;&#013;&#010;IF (PSM &lt;&gt; &apos;P&apos;) THEN&#013;&#010;EXCEPTION MATPRIMA_ERRADA;&#013;&#010;/* MATPRIMA TEM QUE SER MATERIA PRIMA */&#013;&#010;SELECT&#013;&#010;PO.PS&#013;&#010;FROM&#013;&#010;PRODUTOS PO&#013;&#010;WHERE&#013;&#010;PO.CODIGO = NEW.CODMATPRIMA&#013;&#010;INTO&#013;&#010;:PSM;&#013;&#010;IF (PSM &lt;&gt; &apos;M&apos;) THEN&#013;&#010;EXCEPTION MATPRIMA_ERRADA;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (286, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="287" SQL="/*&#013;&#010;** SUPORTE A COMPRA DE MATERIA PRIMA&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER ORSOMA_INS&#013;&#010;ACTIVE AFTER INSERT POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE SOMA NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE CODIGO INTEGER;&#013;&#010;DECLARE VARIABLE ES CHAR(1);&#013;&#010;DECLARE VARIABLE TIPO CHAR(1);&#013;&#010;DECLARE VARIABLE ETIQUETA CHAR(1);&#013;&#010;DECLARE VARIABLE NUMETIQ INTEGER;&#013;&#010;DECLARE VARIABLE INDIVIDUAL CHAR(1);&#013;&#010;DECLARE VARIABLE SEQUENCIA INTEGER;&#013;&#010;DECLARE VARIABLE SEQUENSTR CHAR(4);&#013;&#010;DECLARE VARIABLE N INTEGER;&#013;&#010;DECLARE VARIABLE C INTEGER;&#013;&#010;DECLARE VARIABLE BARRA CHAR(14);&#013;&#010;DECLARE VARIABLE BARRA_TEMP CHAR(14);&#013;&#010;DECLARE VARIABLE PS CHAR(1);&#013;&#010;DECLARE VARIABLE EMPRESA INTEGER;&#013;&#010;DECLARE VARIABLE CUSTO_PRODUTO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE CUSTO_IPI NUMERIC(9,2);&#013;&#010;BEGIN&#013;&#010;/* VERIFICO O TIPO DO MOVIMENTO */&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODMOVIMENTO&#013;&#010;INTO&#013;&#010;ES,&#013;&#010;TIPO;&#013;&#010;IF ((ES IN (0, 1)) AND (TIPO &lt;&gt; 9)) THEN&#013;&#010;BEGIN&#013;&#010;/* RECUPERO O CODIGO DE BARRAS E O TIPO (PRODUTO, SERVIÇO */&#013;&#010;SELECT&#013;&#010;BARRA,&#013;&#010;PS&#013;&#010;FROM&#013;&#010;PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODPRODUTO&#013;&#010;INTO&#013;&#010;:BARRA,&#013;&#010;:PS;&#013;&#010;/* SE NAO TIVER CODIGO DE BARRAS GERO ERRO */&#013;&#010;IF (BARRA = &apos;0000000000000&apos;) THEN&#013;&#010;EXCEPTION BARRA_NECESSARIA;&#013;&#010;/* VERIFICO SE EH PRODUTO OU SERVIÇO */&#013;&#010;IF ((PS = &apos;P&apos;) OR (PS = &apos;M&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;/* PRODUTO */&#013;&#010;/* GUARDO O CODIGO DO MOVIMENTO */&#013;&#010;CODIGO = NEW.CODMOVIMENTO;&#013;&#010;/* RECUPERO O TIPO E A EMPRESA */&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO,&#013;&#010;CODEMPRESA&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODIGO&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:TIPO,&#013;&#010;:EMPRESA;&#013;&#010;/* SE FOR COMPRA */&#013;&#010;IF ((ES = 1) AND (TIPO = 1)) THEN&#013;&#010;BEGIN&#013;&#010;/* ATUALIZO O PREÇO DE CUSTO */&#013;&#010;UPDATE&#013;&#010;PRODUTOS&#013;&#010;SET&#013;&#010;PRECOCUSTO = NEW.VALOR_UNITARIO&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODPRODUTO;&#013;&#010;/* VERIFICO SE PRECISO REAJUSTAR O PREÇO DE VENDA */&#013;&#010;IF (NEW.REAJUSTAR = &apos;S&apos;) THEN&#013;&#010;/* REAJUSTO O PREÇO DE VENDA */&#013;&#010;UPDATE&#013;&#010;PRODUTOS&#013;&#010;SET&#013;&#010;PRECOVENDA = NEW.VALOR_VENDA,&#013;&#010;ICMS = NEW.ICMSVENDA&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODPRODUTO;&#013;&#010;/* RECUPERO DADOS DO PRODUTO PARA GERAÇAO */&#013;&#010;SELECT&#013;&#010;ETIQUETA,&#013;&#010;INDIVIDUAL,&#013;&#010;SEQUENCIA,&#013;&#010;BARRA&#013;&#010;FROM&#013;&#010;PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODPRODUTO&#013;&#010;INTO&#013;&#010;:ETIQUETA,&#013;&#010;:INDIVIDUAL,&#013;&#010;:SEQUENCIA,&#013;&#010;:BARRA;&#013;&#010;/* ZERO O CONTADOR */&#013;&#010;N = 0;&#013;&#010;/* CALCULO O CUSTO DO PRODUTO, IPI */&#013;&#010;CUSTO_PRODUTO = (NEW.VALOR_UNITARIO - NEW.DESCONTO);&#013;&#010;CUSTO_IPI = (CUSTO_PRODUTO * (NEW.IPI / 100));&#013;&#010;/* SE O PRODUTO FOR INDIVIDUAL */&#013;&#010;IF (INDIVIDUAL = &apos;S&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/* EXECUTO A MESMA SEQUENCIA PARA CADA ITEM */&#013;&#010;WHILE (N &lt; NEW.QUANTIDADE) DO&#013;&#010;BEGIN&#013;&#010;/* INCREMENTO O CONTADOR */&#013;&#010;N = N + 1;&#013;&#010;/* INCREMENTO O CODIGO SEQUENCIAL DO PRODUTO */&#013;&#010;SEQUENCIA = SEQUENCIA + 1;&#013;&#010;/* GERO A SEQUENCIA EM FORMATO STRING, ALINHADO A DIREITA */&#013;&#010;IF (SEQUENCIA &gt; 999) THEN&#013;&#010;SEQUENSTR = SEQUENCIA;&#013;&#010;ELSE&#013;&#010;IF (SEQUENCIA &gt; 99) THEN SEQUENSTR = (&apos;0&apos; || SEQUENCIA);&#013;&#010;ELSE IF (SEQUENCIA &gt; 9) THEN SEQUENSTR = (&apos;00&apos; || SEQUENCIA);&#013;&#010;ELSE IF (SEQUENCIA &gt; 0) THEN SEQUENSTR = (&apos;000&apos; || SEQUENCIA);&#013;&#010;ELSE SEQUENSTR = &apos;0000&apos;;&#013;&#010;/* GERO O CODIGO DE BARRAS INDIVIDUAL */&#013;&#010;BARRA_TEMP = &apos;999&apos; || NEW.CODPRODUTO || SEQUENSTR || &apos;0&apos;;&#013;&#010;EXECUTE PROCEDURE CALC_EAN13(:BARRA_TEMP)&#013;&#010;RETURNING_VALUES :BARRA;&#013;&#010;/* RECUPERO A SEQUENCIA DE GRAVAÇAO DA TABELA */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER &apos;INDIVIDUAIS&apos;&#013;&#010;RETURNING_VALUES C;&#013;&#010;/* GRAVO O ITEM NA TABELA */&#013;&#010;INSERT INTO&#013;&#010;INDIVIDUAIS (&#013;&#010;CODIGO,&#013;&#010;CODITEM,&#013;&#010;CODPRODUTO,&#013;&#010;CODMOVENTRADA,&#013;&#010;SEQUENCIA,&#013;&#010;ICMSVENDA,&#013;&#010;VALOR_VENDA,&#013;&#010;IMPETIQ,&#013;&#010;QUANTIDADE,&#013;&#010;UNICO,&#013;&#010;BARRA,&#013;&#010;CODEMPRESA,&#013;&#010;CUSTO_PRODUTO,&#013;&#010;CUSTO_IPI)&#013;&#010;VALUES (&#013;&#010;:C,&#013;&#010;NEW.CODIGO,&#013;&#010;NEW.CODPRODUTO,&#013;&#010;NEW.CODMOVIMENTO,&#013;&#010;:SEQUENSTR,&#013;&#010;NEW.ICMSVENDA,&#013;&#010;NEW.VALOR_VENDA,&#013;&#010;:ETIQUETA,&#013;&#010;1,&#013;&#010;1,&#013;&#010;:BARRA,&#013;&#010;:EMPRESA,&#013;&#010;:CUSTO_PRODUTO,&#013;&#010;:CUSTO_IPI);&#013;&#010;END /* WHILE */&#013;&#010;/* ATUALIZO A SEQUENCIA DO PRODUTO UTILIZADA */&#013;&#010;UPDATE&#013;&#010;PRODUTOS&#013;&#010;SET&#013;&#010;SEQUENCIA = (SEQUENCIA + NEW.QUANTIDADE)&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODPRODUTO;&#013;&#010;END ELSE&#013;&#010;/* PRODUTO COMUM - NAO INDIVIDUAL */&#013;&#010;BEGIN&#013;&#010;/* RECUPERO A SEQUENCIA DA TABELA */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER &apos;INDIVIDUAIS&apos;&#013;&#010;RETURNING_VALUES C;&#013;&#010;/* GRAVO OS DADOS NA TABELA */&#013;&#010;INSERT INTO&#013;&#010;INDIVIDUAIS (&#013;&#010;CODIGO,&#013;&#010;CODITEM,&#013;&#010;CODPRODUTO,&#013;&#010;CODMOVENTRADA,&#013;&#010;SEQUENCIA,&#013;&#010;ICMSVENDA,&#013;&#010;VALOR_VENDA,&#013;&#010;IMPETIQ,&#013;&#010;QUANTIDADE,&#013;&#010;UNICO,&#013;&#010;BARRA,&#013;&#010;CODEMPRESA,&#013;&#010;CUSTO_PRODUTO,&#013;&#010;CUSTO_IPI)&#013;&#010;VALUES (&#013;&#010;:C,&#013;&#010;NEW.CODIGO,&#013;&#010;NEW.CODPRODUTO,&#013;&#010;NEW.CODMOVIMENTO,&#013;&#010;&apos;0000&apos;,&#013;&#010;NEW.ICMSVENDA,&#013;&#010;NEW.VALOR_VENDA,&#013;&#010;:ETIQUETA,&#013;&#010;NEW.QUANTIDADE,&#013;&#010;0,&#013;&#010;:BARRA,&#013;&#010;:EMPRESA,&#013;&#010;:CUSTO_PRODUTO,&#013;&#010;:CUSTO_IPI);&#013;&#010;END&#013;&#010;END&#013;&#010;IF (ES IN (0, 1)) THEN&#013;&#010;/* ATUALIZO O VALOR DOS ITENS E DO IPI */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_ITENS = VALOR_ITENS + NEW.VALOR_TOTAL,&#013;&#010;VALOR_IPI_PRODUTOS = VALOR_IPI_PRODUTOS + NEW.VALOR_IPI&#013;&#010;WHERE&#013;&#010;CODIGO = :CODIGO;&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (287, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="288" SQL="/*&#013;&#010;** SUPORTE A PRODUÇÃO&#013;&#010;*/&#013;&#010;DROP PROCEDURE CONTRATO_FATURAR;&#013;&#010;DROP PROCEDURE ORCAMENTO_OS;&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ITVENDA_GRAVA (&#013;&#010;BARRA CHAR(14),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;ICMS NUMERIC(9,2),&#013;&#010;CODMOVSAIDA INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE XCODIGO INTEGER;&#013;&#010;DECLARE VARIABLE XCODITEM INTEGER;&#013;&#010;DECLARE VARIABLE XCODPRODUTO INTEGER;&#013;&#010;DECLARE VARIABLE XCODMOVENTRADA INTEGER;&#013;&#010;DECLARE VARIABLE XSEQUENCIA CHAR(4);&#013;&#010;DECLARE VARIABLE XSERIE CHAR(20);&#013;&#010;DECLARE VARIABLE XVENDIDO CHAR(1);&#013;&#010;DECLARE VARIABLE XCODMOVSAIDA INTEGER;&#013;&#010;DECLARE VARIABLE XVALOR_VENDA NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE XICMSVENDA NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE XDESCONTO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE XIMPETIQ CHAR(1);&#013;&#010;DECLARE VARIABLE XBARRA CHAR(14);&#013;&#010;DECLARE VARIABLE XQUANTIDADE NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE XUNICO INTEGER;&#013;&#010;DECLARE VARIABLE BAIXA NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE SOBRA NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE NSEQ INTEGER;&#013;&#010;DECLARE VARIABLE PS CHAR(1);&#013;&#010;DECLARE VARIABLE XPRECOCUSTO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE CODEMPRESA INTEGER;&#013;&#010;DECLARE VARIABLE COMISSAO_CLIENTE CHAR(1);&#013;&#010;DECLARE VARIABLE COMISSAO_PRODUTO CHAR(1);&#013;&#010;DECLARE VARIABLE PERCCOMISSAO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE CODCLIENTE INTEGER;&#013;&#010;DECLARE VARIABLE CODVENDEDOR INTEGER;&#013;&#010;DECLARE VARIABLE COMISSAO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE ALIQUOTA_ICMSPRODUTO NUMERIC(9,4);&#013;&#010;DECLARE VARIABLE ECF CHAR(1);&#013;&#010;DECLARE VARIABLE ICMSSIMPLES CHAR(1);&#013;&#010;DECLARE VARIABLE ALIQUOTA_ICMSSIMPLES NUMERIC(9,4);&#013;&#010;DECLARE VARIABLE XCUSTO_PRODUTO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE XCUSTO_IPI NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE XCUSTO_RATEIO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE XCUSTO_ICMS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE XCUSTO_ISS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE ESTOQUE CHAR(1);&#013;&#010;DECLARE VARIABLE TMP_ICMS CHAR(1);&#013;&#010;DECLARE VARIABLE TMP_IPI CHAR(1);&#013;&#010;DECLARE VARIABLE CODNATUOPER VARCHAR(5);&#013;&#010;DECLARE VARIABLE CODCOMPRA INTEGER;&#013;&#010;BEGIN&#013;&#010;/* verifico a quantidade */&#013;&#010;if (quantidade &lt;= 0) then&#013;&#010;exception quantidade_positiva;&#013;&#010;/* informações do produto */&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;PRECOCUSTO,&#013;&#010;PS,&#013;&#010;COMISSIONADO,&#013;&#010;ICMS&#013;&#010;FROM&#013;&#010;PRODUTOS&#013;&#010;WHERE&#013;&#010;BARRA = :BARRA&#013;&#010;INTO&#013;&#010;:XCODPRODUTO,&#013;&#010;:XPRECOCUSTO,&#013;&#010;:PS,&#013;&#010;:COMISSAO_PRODUTO,&#013;&#010;:ALIQUOTA_ICMSPRODUTO;&#013;&#010;/* informações do movimento */&#013;&#010;SELECT&#013;&#010;CODCLIENTE,&#013;&#010;CODVENDEDOR,&#013;&#010;CODEMPRESA,&#013;&#010;ECF,&#013;&#010;NOTA_CODNATUOPER&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVSAIDA&#013;&#010;INTO&#013;&#010;:CODCLIENTE,&#013;&#010;:CODVENDEDOR,&#013;&#010;:CODEMPRESA,&#013;&#010;:ECF,&#013;&#010;:CODNATUOPER;&#013;&#010;/* INFORMACOES DA NATUREZA DE OPERACAO */&#013;&#010;SELECT&#013;&#010;ESTOQUE,&#013;&#010;ICMS,&#013;&#010;IPI&#013;&#010;FROM&#013;&#010;NATUOPER&#013;&#010;WHERE&#013;&#010;CODIGO = :CODNATUOPER&#013;&#010;INTO&#013;&#010;:ESTOQUE,&#013;&#010;:TMP_ICMS,&#013;&#010;:TMP_IPI;&#013;&#010;/* informações do cliente */&#013;&#010;SELECT&#013;&#010;COMISSIONADO&#013;&#010;FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCLIENTE&#013;&#010;INTO&#013;&#010;:COMISSAO_CLIENTE;&#013;&#010;/* informações do vendedor */&#013;&#010;SELECT&#013;&#010;COMISSAO&#013;&#010;FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;CODIGO = :CODVENDEDOR&#013;&#010;INTO&#013;&#010;:PERCCOMISSAO;&#013;&#010;/* NAO POSSUI MOVIMENTACAO DE ESTOQUE */&#013;&#010;IF (((PS = &apos;P&apos;) OR (PS = &apos;M&apos;)) AND (ESTOQUE = &apos;N&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO PRODUTO */&#013;&#010;SELECT&#013;&#010;PO.CODIGO&#013;&#010;FROM&#013;&#010;PRODUTOS PO&#013;&#010;WHERE&#013;&#010;PO.BARRA = :BARRA&#013;&#010;INTO&#013;&#010;:XCODPRODUTO;&#013;&#010;IF (XCODPRODUTO IS NULL) THEN&#013;&#010;EXCEPTION INDIVIDUO_ESTOQUE;&#013;&#010;/* CODIGO DA ULTIMA COMPRA */&#013;&#010;SELECT&#013;&#010;MAX(TM.CODIGO)&#013;&#010;FROM&#013;&#010;TEMPITENS TM&#013;&#010;JOIN MOVIMENTOS MO ON&#013;&#010;(MO.CODIGO = TM.CODMOVIMENTO)&#013;&#010;WHERE&#013;&#010;TM.CODPRODUTO = :XCODPRODUTO AND&#013;&#010;MO.ES         = 1            AND&#013;&#010;MO.TIPO       = 1&#013;&#010;INTO&#013;&#010;:CODCOMPRA;&#013;&#010;IF (CODCOMPRA IS NULL) THEN&#013;&#010;EXCEPTION MOV_PREVIA;&#013;&#010;SELECT&#013;&#010;CODMOVIMENTO,&#013;&#010;ICMSCOMPRA,&#013;&#010;CAST((VALOR_TOTAL / QUANTIDADE) AS NUMERIC(9, 2))&#013;&#010;FROM&#013;&#010;TEMPITENS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCOMPRA&#013;&#010;INTO&#013;&#010;:XCODMOVENTRADA,&#013;&#010;:XICMSVENDA,&#013;&#010;:XPRECOCUSTO;&#013;&#010;/* pego a sequencia dos itens de estoque */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER &apos;INDIVIDUAIS&apos;&#013;&#010;RETURNING_VALUES NSEQ;&#013;&#010;/* insiro um item de serviço na quantidade exata */&#013;&#010;INSERT INTO&#013;&#010;INDIVIDUAIS (&#013;&#010;CODIGO,&#013;&#010;CODITEM,&#013;&#010;CODPRODUTO,&#013;&#010;CODMOVENTRADA,&#013;&#010;CODMOVSAIDA,&#013;&#010;SEQUENCIA,&#013;&#010;SERIE,&#013;&#010;VENDIDO,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSVENDA,&#013;&#010;DESCONTO,&#013;&#010;IMPETIQ,&#013;&#010;BARRA,&#013;&#010;QUANTIDADE,&#013;&#010;UNICO,&#013;&#010;FRACIONADO,&#013;&#010;PS,&#013;&#010;CODEMPRESA,&#013;&#010;CUSTO_PRODUTO)&#013;&#010;VALUES (&#013;&#010;:NSEQ,&#013;&#010;:CODCOMPRA,&#013;&#010;:XCODPRODUTO,&#013;&#010;:XCODMOVENTRADA,&#013;&#010;:CODMOVSAIDA,&#013;&#010;&apos;0000&apos;,&#013;&#010;&apos;&apos;,&#013;&#010;&apos;S&apos;,&#013;&#010;:VALOR,&#013;&#010;:XICMSVENDA,&#013;&#010;:DESCONTO,&#013;&#010;&apos;N&apos;,&#013;&#010;:BARRA,&#013;&#010;:QUANTIDADE,&#013;&#010;0,&#013;&#010;&apos;S&apos;,&#013;&#010;&apos;P&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;:XPRECOCUSTO);&#013;&#010;END ELSE&#013;&#010;/* verifico se é PRODUTO e não serviço */&#013;&#010;IF ((PS = &apos;P&apos;) or (PS = &apos;M&apos;) or (PS IS NULL)) THEN&#013;&#010;BEGIN&#013;&#010;/* verifico se já foi vendido nesse movimento */&#013;&#010;SELECT&#013;&#010;SUM(QUANTIDADE)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;BARRA = :BARRA AND&#013;&#010;VENDIDO = &apos;S&apos; AND&#013;&#010;CODMOVSAIDA = :CODMOVSAIDA AND&#013;&#010;CODEMPRESA = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:XQUANTIDADE;&#013;&#010;IF (XQUANTIDADE IS NULL) THEN&#013;&#010;XQUANTIDADE = 0;&#013;&#010;/* se já foi vendido, erro, só um lançamento para cada produto diferente */&#013;&#010;IF (XQUANTIDADE &gt; 0) THEN&#013;&#010;EXCEPTION ITEM_REPETIDO;&#013;&#010;/* verifico se existe estoque */&#013;&#010;SELECT&#013;&#010;SUM(QUANTIDADE)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;BARRA = :BARRA AND&#013;&#010;VENDIDO = &apos;N&apos;  AND&#013;&#010;CODEMPRESA = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:XQUANTIDADE;&#013;&#010;/* se tiver estoque, faço a venda */&#013;&#010;IF (QUANTIDADE &lt;= XQUANTIDADE) THEN&#013;&#010;BEGIN&#013;&#010;/* faço uma varredura dos itens no estoque */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;ID.CODIGO,&#013;&#010;ID.CODITEM,&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.CODMOVENTRADA,&#013;&#010;ID.SEQUENCIA,&#013;&#010;ID.SERIE,&#013;&#010;ID.VENDIDO,&#013;&#010;ID.CODMOVSAIDA,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;ID.IMPETIQ,&#013;&#010;ID.BARRA,&#013;&#010;ID.QUANTIDADE,&#013;&#010;ID.UNICO,&#013;&#010;ID.CUSTO_PRODUTO,&#013;&#010;ID.CUSTO_IPI,&#013;&#010;ID.CUSTO_RATEIO,&#013;&#010;ID.CUSTO_ICMS,&#013;&#010;ID.CUSTO_ISS&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;LEFT JOIN MOVIMENTOS MO ON&#013;&#010;(MO.CODIGO = ID.CODMOVENTRADA)&#013;&#010;WHERE&#013;&#010;ID.BARRA = :BARRA AND&#013;&#010;ID.VENDIDO = &apos;N&apos; AND&#013;&#010;ID.CODEMPRESA = :CODEMPRESA&#013;&#010;ORDER BY&#013;&#010;MO.DATA&#013;&#010;INTO&#013;&#010;:XCODIGO,&#013;&#010;:XCODITEM,&#013;&#010;:XCODPRODUTO,&#013;&#010;:XCODMOVENTRADA,&#013;&#010;:XSEQUENCIA,&#013;&#010;:XSERIE,&#013;&#010;:XVENDIDO,&#013;&#010;:XCODMOVSAIDA,&#013;&#010;:XVALOR_VENDA,&#013;&#010;:XICMSVENDA,&#013;&#010;:XDESCONTO,&#013;&#010;:XIMPETIQ,&#013;&#010;:XBARRA,&#013;&#010;:XQUANTIDADE,&#013;&#010;:XUNICO,&#013;&#010;:XCUSTO_PRODUTO,&#013;&#010;:XCUSTO_IPI,&#013;&#010;:XCUSTO_RATEIO,&#013;&#010;:XCUSTO_ICMS,&#013;&#010;:XCUSTO_ISS&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* tenho estoque nesse registro */&#013;&#010;IF (QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* se a quantidade é suficiente ou maior */&#013;&#010;SOBRA = 0;&#013;&#010;IF (QUANTIDADE &gt;= XQUANTIDADE) THEN&#013;&#010;BEGIN&#013;&#010;BAIXA = XQUANTIDADE;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;BAIXA = QUANTIDADE;&#013;&#010;SOBRA = XQUANTIDADE - BAIXA;&#013;&#010;END&#013;&#010;/* se faltou, calculo para a próxima iteração */&#013;&#010;QUANTIDADE = QUANTIDADE - BAIXA;&#013;&#010;/* calculo a comissao desse item */&#013;&#010;IF ((COMISSAO_PRODUTO = &apos;S&apos;) AND (COMISSAO_CLIENTE = &apos;S&apos;)) THEN&#013;&#010;COMISSAO = ((VALOR - DESCONTO) * BAIXA) * (PERCCOMISSAO / 100);&#013;&#010;ELSE&#013;&#010;COMISSAO = 0.0;&#013;&#010;IF (COMISSAO IS NULL) THEN&#013;&#010;COMISSAO = 0.0;&#013;&#010;/* se for ecf, aliquota do cadastro de produtos */&#013;&#010;IF (ECF = &apos;S&apos;) THEN&#013;&#010;XICMSVENDA = ALIQUOTA_ICMSPRODUTO;&#013;&#010;/* verifico o icms correto */&#013;&#010;SELECT&#013;&#010;ICMSSIMPLES,&#013;&#010;ALIQUOTA_ICMSSIMPLES&#013;&#010;FROM&#013;&#010;SISCONFIG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODEMPRESA&#013;&#010;INTO&#013;&#010;:ICMSSIMPLES,&#013;&#010;:ALIQUOTA_ICMSSIMPLES;&#013;&#010;/* se for simples, aliquota simples */&#013;&#010;IF (ICMSSIMPLES = &apos;S&apos;) THEN&#013;&#010;XICMSVENDA = ALIQUOTA_ICMSSIMPLES;&#013;&#010;/* vendo o que for preciso */&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;QUANTIDADE = :BAIXA,&#013;&#010;CODMOVSAIDA = :CODMOVSAIDA,&#013;&#010;VALOR_VENDA = :VALOR,&#013;&#010;DESCONTO = :DESCONTO,&#013;&#010;VENDIDO = &apos;S&apos;,&#013;&#010;ICMSVENDA = :XICMSVENDA,&#013;&#010;VALOR_COMISSAO = :COMISSAO&#013;&#010;WHERE&#013;&#010;CODIGO = :XCODIGO;&#013;&#010;/* se sobrou, insiro um novo item de estoque com a sobre */&#013;&#010;IF (SOBRA &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* pego a sequencia dos itens de estoque */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER &apos;INDIVIDUAIS&apos;&#013;&#010;RETURNING_VALUES NSEQ;&#013;&#010;XVENDIDO = &apos;N&apos;;&#013;&#010;/* insiro o registro no estoque */&#013;&#010;INSERT INTO&#013;&#010;INDIVIDUAIS (&#013;&#010;CODIGO,&#013;&#010;CODITEM,&#013;&#010;CODPRODUTO,&#013;&#010;CODMOVENTRADA,&#013;&#010;SEQUENCIA,&#013;&#010;SERIE,&#013;&#010;VENDIDO,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSVENDA,&#013;&#010;DESCONTO,&#013;&#010;IMPETIQ,&#013;&#010;BARRA,&#013;&#010;QUANTIDADE,&#013;&#010;UNICO,&#013;&#010;FRACIONADO,&#013;&#010;CODEMPRESA,&#013;&#010;CUSTO_PRODUTO,&#013;&#010;CUSTO_IPI,&#013;&#010;CUSTO_RATEIO,&#013;&#010;CUSTO_ICMS,&#013;&#010;CUSTO_ISS)&#013;&#010;VALUES (&#013;&#010;:NSEQ,&#013;&#010;:XCODITEM,&#013;&#010;:XCODPRODUTO,&#013;&#010;:XCODMOVENTRADA,&#013;&#010;:XSEQUENCIA,&#013;&#010;:XSERIE,&#013;&#010;:XVENDIDO,&#013;&#010;:XVALOR_VENDA,&#013;&#010;:XICMSVENDA,&#013;&#010;:XDESCONTO,&#013;&#010;:XIMPETIQ,&#013;&#010;:XBARRA,&#013;&#010;:SOBRA,&#013;&#010;:XUNICO,&#013;&#010;&apos;S&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;:XCUSTO_PRODUTO,&#013;&#010;:XCUSTO_IPI,&#013;&#010;:XCUSTO_RATEIO,&#013;&#010;:XCUSTO_ICMS,&#013;&#010;:XCUSTO_ISS);&#013;&#010;END&#013;&#010;END ELSE EXIT;&#013;&#010;END&#013;&#010;/* se não houver estoque, gero erro */&#013;&#010;END ELSE EXCEPTION ITEM_ESGOTADO;&#013;&#010;/* se não for produto, é SERVIÇO */&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* pego a sequencia dos itens temporários */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER &apos;TEMPITENS&apos;&#013;&#010;RETURNING_VALUES XCODITEM;&#013;&#010;/* insiro um item de serviço na quantidade exata */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS (&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA)&#013;&#010;VALUES (&#013;&#010;:XCODITEM,&#013;&#010;:CODMOVSAIDA,&#013;&#010;:XCODPRODUTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:XPRECOCUSTO,&#013;&#010;0,&#013;&#010;&apos;0.0&apos;,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;:VALOR,&#013;&#010;0,&#013;&#010;0);&#013;&#010;/* pego a sequencia dos itens de estoque */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER &apos;INDIVIDUAIS&apos;&#013;&#010;RETURNING_VALUES NSEQ;&#013;&#010;/* insiro um item de serviço na quantidade exata */&#013;&#010;INSERT INTO&#013;&#010;INDIVIDUAIS (&#013;&#010;CODIGO,&#013;&#010;CODITEM,&#013;&#010;CODPRODUTO,&#013;&#010;CODMOVENTRADA,&#013;&#010;CODMOVSAIDA,&#013;&#010;SEQUENCIA,&#013;&#010;SERIE,&#013;&#010;VENDIDO,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSVENDA,&#013;&#010;DESCONTO,&#013;&#010;IMPETIQ,&#013;&#010;BARRA,&#013;&#010;QUANTIDADE,&#013;&#010;UNICO,&#013;&#010;FRACIONADO,&#013;&#010;PS,&#013;&#010;CODEMPRESA,&#013;&#010;CUSTO_PRODUTO)&#013;&#010;VALUES (&#013;&#010;:NSEQ,&#013;&#010;:XCODITEM,&#013;&#010;:XCODPRODUTO,&#013;&#010;:CODMOVSAIDA,&#013;&#010;:CODMOVSAIDA,&#013;&#010;&apos;0000&apos;,&#013;&#010;&apos;&apos;,&#013;&#010;&apos;S&apos;,&#013;&#010;:VALOR,&#013;&#010;0,&#013;&#010;:DESCONTO,&#013;&#010;&apos;N&apos;,&#013;&#010;:BARRA,&#013;&#010;:QUANTIDADE,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;&apos;S&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;:XPRECOCUSTO);&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (288, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="289" SQL="/*&#013;&#010;** SUPORTE A PRODUÇÃO II&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_ABRE(&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;CODEMPRESA INTEGER,&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODRESPONSAVEL INTEGER,&#013;&#010;CODVENDEDOR INTEGER,&#013;&#010;CODCONDPAG INTEGER,&#013;&#010;CODNATUOPER VARCHAR(5),&#013;&#010;PROCESSO CHAR(3),&#013;&#010;PASSAGEM INTEGER,&#013;&#010;I01_CODBARRA VARCHAR(14),&#013;&#010;I01_QUANTIDADE NUMERIC(9,2),&#013;&#010;I01_VALOR NUMERIC(9,2),&#013;&#010;I01_DESCONTO NUMERIC(9,2),&#013;&#010;I01_ICMS NUMERIC(9,2),&#013;&#010;I01_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I01_IPI NUMERIC(9,2),&#013;&#010;I01_SITTRIBU CHAR(3),&#013;&#010;I02_CODBARRA VARCHAR(14),&#013;&#010;I02_QUANTIDADE NUMERIC(9,2),&#013;&#010;I02_VALOR NUMERIC(9,2),&#013;&#010;I02_DESCONTO NUMERIC(9,2),&#013;&#010;I02_ICMS NUMERIC(9,2),&#013;&#010;I02_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I02_IPI NUMERIC(9,2),&#013;&#010;I02_SITTRIBU CHAR(3),&#013;&#010;I03_CODBARRA VARCHAR(14),&#013;&#010;I03_QUANTIDADE NUMERIC(9,2),&#013;&#010;I03_VALOR NUMERIC(9,2),&#013;&#010;I03_DESCONTO NUMERIC(9,2),&#013;&#010;I03_ICMS NUMERIC(9,2),&#013;&#010;I03_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I03_IPI NUMERIC(9,2),&#013;&#010;I03_SITTRIBU CHAR(3))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER,&#013;&#010;RE_01 INTEGER,&#013;&#010;RE_02 INTEGER,&#013;&#010;RE_03 INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TESTE INTEGER;&#013;&#010;DECLARE VARIABLE CONDICAO VARCHAR(40);&#013;&#010;DECLARE VARIABLE TEMP_SERVICOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_PRODUTOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE MOV_ES INTEGER;&#013;&#010;DECLARE VARIABLE MOV_TIPO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODIGO INTEGER;&#013;&#010;BEGIN&#013;&#010;/* SE FOR NULO, É VENDA */&#013;&#010;if (PROCESSO IS NULL) then&#013;&#010;PROCESSO = &apos;VEN&apos;;&#013;&#010;/* ZERAMENTO DOS RETORNOS */&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;RE_01 = 0;&#013;&#010;RE_02 = 0;&#013;&#010;RE_03 = 0;&#013;&#010;IF (I01_QUANTIDADE IS NULL) THEN&#013;&#010;I01_QUANTIDADE = 0;&#013;&#010;IF (I02_QUANTIDADE IS NULL) THEN&#013;&#010;I02_QUANTIDADE = 0;&#013;&#010;IF (I03_QUANTIDADE IS NULL) THEN&#013;&#010;I03_QUANTIDADE = 0;&#013;&#010;IF (I01_SITTRIBU IS NULL) THEN&#013;&#010;I01_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I02_SITTRIBU IS NULL) THEN&#013;&#010;I02_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I03_SITTRIBU IS NULL) THEN&#013;&#010;I03_SITTRIBU = &apos;0.0&apos;;&#013;&#010;/* ABRO O MOVIMENTO - PRIMEIRA PASSAGEM */&#013;&#010;IF ((CODMOVIMENTO &gt; 0) AND (PASSAGEM = 1)) THEN&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE A VENDA JÁ EXISTE */&#013;&#010;SELECT&#013;&#010;COUNT(*)&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TESTE;&#013;&#010;IF (TESTE IS NULL) THEN&#013;&#010;TESTE = 0;&#013;&#010;/* PEGO A CONDICAO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;CONDICAO&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCONDPAG&#013;&#010;INTO&#013;&#010;CONDICAO;&#013;&#010;/* SE JÁ EXISTIR ATUALIZO A VENDA */&#013;&#010;IF (TESTE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* EXCLUSÃO DOS ITENS DA VENDA */&#013;&#010;IF (PROCESSO = &apos;VEN&apos;) THEN&#013;&#010;BEGIN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* APAGO OS ITENS DO ORÇAMENTO */&#013;&#010;IF ((PROCESSO = &apos;ORC&apos;) OR (PROCESSO = &apos;COM&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* ATUALIZO OS DADOS DO CABEÇALHO DO MOVIMENTO */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;CODCLIENTE        = :CODCLIENTE,&#013;&#010;CODRESPONSAVEL    = :CODRESPONSAVEL,&#013;&#010;CODVENDEDOR       = :CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER  = :CODNATUOPER,&#013;&#010;CONDICAO          = :CONDICAO,&#013;&#010;CODCONDPAG        = :CODCONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 2;&#013;&#010;MOV_TIPO = 5;&#013;&#010;END&#013;&#010;/* ORÇAMENTO */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 0;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* COMPRA */&#013;&#010;if (PROCESSO = &apos;COM&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* INICIO O MOVIMENTO */&#013;&#010;INSERT INTO&#013;&#010;MOVIMENTOS (&#013;&#010;CODIGO,&#013;&#010;ES,&#013;&#010;TIPO,&#013;&#010;CODCLIENTE,&#013;&#010;DATA,&#013;&#010;VALOR_SERVICOS,&#013;&#010;VALOR_ITENS,&#013;&#010;DESCONTO,&#013;&#010;VALOR_ICMS,&#013;&#010;NOTA_FRETE,&#013;&#010;NOTA_VALOR_FRETE,&#013;&#010;NOTA_VALOR_SEGURO,&#013;&#010;NOTA_VALOR_OUTROS,&#013;&#010;NOTA_QUANTIDADE,&#013;&#010;NOTA_PESOBRUTO,&#013;&#010;NOTA_PESOLIQUIDO,&#013;&#010;STATUS,&#013;&#010;CONDICAO,&#013;&#010;ICMSSIMPLES,&#013;&#010;ICMSSIMPALIQ,&#013;&#010;ISSALIQ,&#013;&#010;NOTA_DATASAIDA,&#013;&#010;NOTA_BASEICMSSUBST,&#013;&#010;NOTA_VALORICMSSUBST,&#013;&#010;VALOR_IPI,&#013;&#010;GARANTIA,&#013;&#010;EMPRESTIMO,&#013;&#010;CODEMPRESA,&#013;&#010;VALOR_COMISSAO,&#013;&#010;ECF,&#013;&#010;OSTIPO,&#013;&#010;VALOR_IPI_PRODUTOS,&#013;&#010;AUTORIZADO,&#013;&#010;CODRESPONSAVEL,&#013;&#010;CODVENDEDOR_ABRE,&#013;&#010;CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER,&#013;&#010;PRIORIDADE,&#013;&#010;CONDICAO,&#013;&#010;CODCENTRO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;PERCCOMIS_PROD,&#013;&#010;PERCCOMIS_PECA,&#013;&#010;PERCCOMIS_SERV,&#013;&#010;CODCONDPAG)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:MOV_ES,&#013;&#010;:MOV_TIPO,&#013;&#010;:CODCLIENTE,&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;&apos;,&#013;&#010;&apos;&apos;,                    /* CONDICAO        */&#013;&#010;&apos;N&apos;,                   /* ICMSSIMPLES     */&#013;&#010;0,                     /* ICMSSIMPLESALIQ */&#013;&#010;0,                     /* ISSALIQ         */&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;0,&#013;&#010;&apos;N&apos;,                   /* ECF             */&#013;&#010;99,                    /* OSTIPO          */&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODVENDEDOR,&#013;&#010;:CODNATUOPER,&#013;&#010;1,&#013;&#010;:CONDICAO,&#013;&#010;1,                     /* CODCENTRO       */&#013;&#010;&apos;F&apos;,                   /* COMIS CALCULO   */&#013;&#010;0,                     /* COMIS PROD      */&#013;&#010;0,                     /* COMIS PECA      */&#013;&#010;0,                     /* COMIS SERV      */&#013;&#010;:CODCONDPAG);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;/* SE NÃO HOUVER MOVIMENTO, ABORTO */&#013;&#010;IF (CODMOVIMENTO = 0) THEN&#013;&#010;EXIT;&#013;&#010;/* SE DEU ERRO PASSO AOS ITENS */&#013;&#010;IF (RE_MOVIMENTO = 0) THEN&#013;&#010;BEGIN&#013;&#010;/*   V E N D A   */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I01_CODBARRA,&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I02_CODBARRA,&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I03_CODBARRA,&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;S&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_SERVICOS;&#013;&#010;IF (TEMP_SERVICOS IS NULL) THEN&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;P&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* VENDA */&#013;&#010;/*   O R C A M E N T O   */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* ORÇAMENTO */&#013;&#010;/*   C O M P R A   */&#013;&#010;if (PROCESSO = &apos;COM&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* COMPRA */&#013;&#010;/* ATUALIZO OS TOTAIS */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_SERVICOS = :TEMP_SERVICOS,&#013;&#010;VALOR_ITENS    = :TEMP_PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (289, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="290" SQL="/*&#013;&#010;** SUPORTE A PRODUÇÃO III&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER ORSOMA_INS&#013;&#010;ACTIVE AFTER INSERT POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE SOMA NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE CODIGO INTEGER;&#013;&#010;DECLARE VARIABLE ES CHAR(1);&#013;&#010;DECLARE VARIABLE TIPO CHAR(1);&#013;&#010;DECLARE VARIABLE ETIQUETA CHAR(1);&#013;&#010;DECLARE VARIABLE NUMETIQ INTEGER;&#013;&#010;DECLARE VARIABLE INDIVIDUAL CHAR(1);&#013;&#010;DECLARE VARIABLE SEQUENCIA INTEGER;&#013;&#010;DECLARE VARIABLE SEQUENSTR CHAR(4);&#013;&#010;DECLARE VARIABLE N INTEGER;&#013;&#010;DECLARE VARIABLE C INTEGER;&#013;&#010;DECLARE VARIABLE BARRA CHAR(14);&#013;&#010;DECLARE VARIABLE BARRA_TEMP CHAR(14);&#013;&#010;DECLARE VARIABLE PS CHAR(1);&#013;&#010;DECLARE VARIABLE EMPRESA INTEGER;&#013;&#010;DECLARE VARIABLE CUSTO_PRODUTO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE CUSTO_IPI NUMERIC(9,2);&#013;&#010;declare variable MAT_BARRA CHAR(14);&#013;&#010;declare variable MAT_VALOR NUMERIC(9,2);&#013;&#010;BEGIN&#013;&#010;/* VERIFICO O TIPO DO MOVIMENTO */&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODMOVIMENTO&#013;&#010;INTO&#013;&#010;ES,&#013;&#010;TIPO;&#013;&#010;IF ((ES IN (0, 1)) AND (TIPO &lt;&gt; 9)) THEN&#013;&#010;BEGIN&#013;&#010;/* RECUPERO O CODIGO DE BARRAS E O TIPO (PRODUTO, SERVIÇO */&#013;&#010;SELECT&#013;&#010;BARRA,&#013;&#010;PS&#013;&#010;FROM&#013;&#010;PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODPRODUTO&#013;&#010;INTO&#013;&#010;:BARRA,&#013;&#010;:PS;&#013;&#010;/* SE NAO TIVER CODIGO DE BARRAS GERO ERRO */&#013;&#010;IF (BARRA = &apos;0000000000000&apos;) THEN&#013;&#010;EXCEPTION BARRA_NECESSARIA;&#013;&#010;/* VERIFICO SE EH PRODUTO OU SERVIÇO */&#013;&#010;IF ((PS = &apos;P&apos;) OR (PS = &apos;M&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;/* PRODUTO */&#013;&#010;/* GUARDO O CODIGO DO MOVIMENTO */&#013;&#010;CODIGO = NEW.CODMOVIMENTO;&#013;&#010;/* RECUPERO O TIPO E A EMPRESA */&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO,&#013;&#010;CODEMPRESA&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODIGO&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:TIPO,&#013;&#010;:EMPRESA;&#013;&#010;/* SE FOR COMPRA OU PRODUÇÃO */&#013;&#010;IF ((ES = 1) AND ((TIPO = 1) OR (TIPO = 3))) THEN&#013;&#010;BEGIN&#013;&#010;/* ATUALIZO O PREÇO DE CUSTO */&#013;&#010;UPDATE&#013;&#010;PRODUTOS&#013;&#010;SET&#013;&#010;PRECOCUSTO = NEW.VALOR_UNITARIO&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODPRODUTO;&#013;&#010;/* VERIFICO SE PRECISO REAJUSTAR O PREÇO DE VENDA */&#013;&#010;IF (NEW.REAJUSTAR = &apos;S&apos;) THEN&#013;&#010;/* REAJUSTO O PREÇO DE VENDA */&#013;&#010;UPDATE&#013;&#010;PRODUTOS&#013;&#010;SET&#013;&#010;PRECOVENDA = NEW.VALOR_VENDA,&#013;&#010;ICMS = NEW.ICMSVENDA&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODPRODUTO;&#013;&#010;/* RECUPERO DADOS DO PRODUTO PARA GERAÇAO */&#013;&#010;SELECT&#013;&#010;ETIQUETA,&#013;&#010;INDIVIDUAL,&#013;&#010;SEQUENCIA,&#013;&#010;BARRA&#013;&#010;FROM&#013;&#010;PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODPRODUTO&#013;&#010;INTO&#013;&#010;:ETIQUETA,&#013;&#010;:INDIVIDUAL,&#013;&#010;:SEQUENCIA,&#013;&#010;:BARRA;&#013;&#010;/* ZERO O CONTADOR */&#013;&#010;N = 0;&#013;&#010;/* CALCULO O CUSTO DO PRODUTO, IPI */&#013;&#010;CUSTO_PRODUTO = (NEW.VALOR_UNITARIO - NEW.DESCONTO);&#013;&#010;CUSTO_IPI = (CUSTO_PRODUTO * (NEW.IPI / 100));&#013;&#010;/* SE O PRODUTO FOR INDIVIDUAL */&#013;&#010;IF (INDIVIDUAL = &apos;S&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/* EXECUTO A MESMA SEQUENCIA PARA CADA ITEM */&#013;&#010;WHILE (N &lt; NEW.QUANTIDADE) DO&#013;&#010;BEGIN&#013;&#010;/* INCREMENTO O CONTADOR */&#013;&#010;N = N + 1;&#013;&#010;/* INCREMENTO O CODIGO SEQUENCIAL DO PRODUTO */&#013;&#010;SEQUENCIA = SEQUENCIA + 1;&#013;&#010;/* GERO A SEQUENCIA EM FORMATO STRING, ALINHADO A DIREITA */&#013;&#010;IF (SEQUENCIA &gt; 999) THEN&#013;&#010;SEQUENSTR = SEQUENCIA;&#013;&#010;ELSE&#013;&#010;IF (SEQUENCIA &gt; 99) THEN SEQUENSTR = (&apos;0&apos; || SEQUENCIA);&#013;&#010;ELSE IF (SEQUENCIA &gt; 9) THEN SEQUENSTR = (&apos;00&apos; || SEQUENCIA);&#013;&#010;ELSE IF (SEQUENCIA &gt; 0) THEN SEQUENSTR = (&apos;000&apos; || SEQUENCIA);&#013;&#010;ELSE SEQUENSTR = &apos;0000&apos;;&#013;&#010;/* GERO O CODIGO DE BARRAS INDIVIDUAL */&#013;&#010;BARRA_TEMP = &apos;999&apos; || NEW.CODPRODUTO || SEQUENSTR || &apos;0&apos;;&#013;&#010;EXECUTE PROCEDURE CALC_EAN13(:BARRA_TEMP)&#013;&#010;RETURNING_VALUES :BARRA;&#013;&#010;/* RECUPERO A SEQUENCIA DE GRAVAÇAO DA TABELA */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER &apos;INDIVIDUAIS&apos;&#013;&#010;RETURNING_VALUES C;&#013;&#010;/* GRAVO O ITEM NA TABELA */&#013;&#010;INSERT INTO&#013;&#010;INDIVIDUAIS (&#013;&#010;CODIGO,&#013;&#010;CODITEM,&#013;&#010;CODPRODUTO,&#013;&#010;CODMOVENTRADA,&#013;&#010;SEQUENCIA,&#013;&#010;ICMSVENDA,&#013;&#010;VALOR_VENDA,&#013;&#010;IMPETIQ,&#013;&#010;QUANTIDADE,&#013;&#010;UNICO,&#013;&#010;BARRA,&#013;&#010;CODEMPRESA,&#013;&#010;CUSTO_PRODUTO,&#013;&#010;CUSTO_IPI)&#013;&#010;VALUES (&#013;&#010;:C,&#013;&#010;NEW.CODIGO,&#013;&#010;NEW.CODPRODUTO,&#013;&#010;NEW.CODMOVIMENTO,&#013;&#010;:SEQUENSTR,&#013;&#010;NEW.ICMSVENDA,&#013;&#010;NEW.VALOR_VENDA,&#013;&#010;:ETIQUETA,&#013;&#010;1,&#013;&#010;1,&#013;&#010;:BARRA,&#013;&#010;:EMPRESA,&#013;&#010;:CUSTO_PRODUTO,&#013;&#010;:CUSTO_IPI);&#013;&#010;END /* WHILE */&#013;&#010;/* ATUALIZO A SEQUENCIA DO PRODUTO UTILIZADA */&#013;&#010;UPDATE&#013;&#010;PRODUTOS&#013;&#010;SET&#013;&#010;SEQUENCIA = (SEQUENCIA + NEW.QUANTIDADE)&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODPRODUTO;&#013;&#010;END ELSE&#013;&#010;/* PRODUTO COMUM - NAO INDIVIDUAL */&#013;&#010;BEGIN&#013;&#010;/* RECUPERO A SEQUENCIA DA TABELA */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER &apos;INDIVIDUAIS&apos;&#013;&#010;RETURNING_VALUES C;&#013;&#010;/* GRAVO OS DADOS NA TABELA */&#013;&#010;INSERT INTO&#013;&#010;INDIVIDUAIS (&#013;&#010;CODIGO,&#013;&#010;CODITEM,&#013;&#010;CODPRODUTO,&#013;&#010;CODMOVENTRADA,&#013;&#010;SEQUENCIA,&#013;&#010;ICMSVENDA,&#013;&#010;VALOR_VENDA,&#013;&#010;IMPETIQ,&#013;&#010;QUANTIDADE,&#013;&#010;UNICO,&#013;&#010;BARRA,&#013;&#010;CODEMPRESA,&#013;&#010;CUSTO_PRODUTO,&#013;&#010;CUSTO_IPI)&#013;&#010;VALUES (&#013;&#010;:C,&#013;&#010;NEW.CODIGO,&#013;&#010;NEW.CODPRODUTO,&#013;&#010;NEW.CODMOVIMENTO,&#013;&#010;&apos;0000&apos;,&#013;&#010;NEW.ICMSVENDA,&#013;&#010;NEW.VALOR_VENDA,&#013;&#010;:ETIQUETA,&#013;&#010;NEW.QUANTIDADE,&#013;&#010;0,&#013;&#010;:BARRA,&#013;&#010;:EMPRESA,&#013;&#010;:CUSTO_PRODUTO,&#013;&#010;:CUSTO_IPI);&#013;&#010;END&#013;&#010;/* SE FOR PRODUÇÃO */&#013;&#010;IF (TIPO = 3) THEN&#013;&#010;BEGIN&#013;&#010;/* BAIXA NA COMPOSICAO DO PRODUTO */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;MA.BARRA,&#013;&#010;MA.PRECOCUSTO&#013;&#010;FROM&#013;&#010;PRODUTOS MA&#013;&#010;JOIN COMPOSICAO CO ON&#013;&#010;(CO.CODMATPRIMA = MA.CODIGO)&#013;&#010;WHERE&#013;&#010;CO.CODPRODUTO = NEW.CODPRODUTO&#013;&#010;INTO&#013;&#010;:MAT_BARRA,&#013;&#010;:MAT_VALOR&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* EXECUTO A BAIXA */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA (&#013;&#010;:MAT_BARRA,&#013;&#010;NEW.QUANTIDADE,&#013;&#010;:MAT_VALOR,&#013;&#010;0,&#013;&#010;0,&#013;&#010;NEW.CODMOVIMENTO);&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;IF (ES IN (0, 1)) THEN&#013;&#010;/* ATUALIZO O VALOR DOS ITENS E DO IPI */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_ITENS = VALOR_ITENS + NEW.VALOR_TOTAL,&#013;&#010;VALOR_IPI_PRODUTOS = VALOR_IPI_PRODUTOS + NEW.VALOR_IPI&#013;&#010;WHERE&#013;&#010;CODIGO = :CODIGO;&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER ORSOMA_DEL&#013;&#010;ACTIVE BEFORE DELETE POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE PS CHAR(1);&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE TIPO INTEGER;&#013;&#010;BEGIN&#013;&#010;/* VERIFICO O TIPO DO MOVIMENTO */&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = OLD.CODMOVIMENTO&#013;&#010;INTO&#013;&#010;ES,&#013;&#010;TIPO;&#013;&#010;IF ((ES IN (0, 1)) AND (TIPO &lt;&gt; 9)) THEN&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;PS&#013;&#010;FROM&#013;&#010;PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = OLD.CODPRODUTO&#013;&#010;INTO&#013;&#010;:PS;&#013;&#010;/* ATUALIZO O VALOR DOS PRODUTOS E DO IPI */&#013;&#010;IF (PS = &apos;P&apos;) THEN&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_ITENS = VALOR_ITENS - OLD.VALOR_TOTAL,&#013;&#010;VALOR_IPI_PRODUTOS = VALOR_IPI_PRODUTOS - OLD.VALOR_IPI&#013;&#010;WHERE&#013;&#010;CODIGO = OLD.CODMOVIMENTO;&#013;&#010;/* SE FOR PRODUÇÃO, DEVOLVO AS MATÉRIAS PRIMAS */&#013;&#010;if ((ES = 1) AND (TIPO = 3)) then&#013;&#010;BEGIN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS ID&#013;&#010;SET&#013;&#010;ID.VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = OLD.CODMOVIMENTO;&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (290, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="291" SQL="/*&#013;&#010;** SUPORTE A PRODUÇÃO IV&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_ABRE (&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;CODEMPRESA INTEGER,&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODRESPONSAVEL INTEGER,&#013;&#010;CODVENDEDOR INTEGER,&#013;&#010;CODCONDPAG INTEGER,&#013;&#010;CODNATUOPER VARCHAR(5),&#013;&#010;PROCESSO CHAR(3),&#013;&#010;PASSAGEM INTEGER,&#013;&#010;I01_CODBARRA VARCHAR(14),&#013;&#010;I01_QUANTIDADE NUMERIC(9,2),&#013;&#010;I01_VALOR NUMERIC(9,2),&#013;&#010;I01_DESCONTO NUMERIC(9,2),&#013;&#010;I01_ICMS NUMERIC(9,2),&#013;&#010;I01_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I01_IPI NUMERIC(9,2),&#013;&#010;I01_SITTRIBU CHAR(3),&#013;&#010;I02_CODBARRA VARCHAR(14),&#013;&#010;I02_QUANTIDADE NUMERIC(9,2),&#013;&#010;I02_VALOR NUMERIC(9,2),&#013;&#010;I02_DESCONTO NUMERIC(9,2),&#013;&#010;I02_ICMS NUMERIC(9,2),&#013;&#010;I02_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I02_IPI NUMERIC(9,2),&#013;&#010;I02_SITTRIBU CHAR(3),&#013;&#010;I03_CODBARRA VARCHAR(14),&#013;&#010;I03_QUANTIDADE NUMERIC(9,2),&#013;&#010;I03_VALOR NUMERIC(9,2),&#013;&#010;I03_DESCONTO NUMERIC(9,2),&#013;&#010;I03_ICMS NUMERIC(9,2),&#013;&#010;I03_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I03_IPI NUMERIC(9,2),&#013;&#010;I03_SITTRIBU CHAR(3))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER,&#013;&#010;RE_01 INTEGER,&#013;&#010;RE_02 INTEGER,&#013;&#010;RE_03 INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TESTE INTEGER;&#013;&#010;DECLARE VARIABLE CONDICAO VARCHAR(40);&#013;&#010;DECLARE VARIABLE TEMP_SERVICOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_PRODUTOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE MOV_ES INTEGER;&#013;&#010;DECLARE VARIABLE MOV_TIPO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODIGO INTEGER;&#013;&#010;BEGIN&#013;&#010;/* SE FOR NULO, É VENDA */&#013;&#010;if (PROCESSO IS NULL) then&#013;&#010;PROCESSO = &apos;VEN&apos;;&#013;&#010;/* ZERAMENTO DOS RETORNOS */&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;RE_01 = 0;&#013;&#010;RE_02 = 0;&#013;&#010;RE_03 = 0;&#013;&#010;IF (I01_QUANTIDADE IS NULL) THEN&#013;&#010;I01_QUANTIDADE = 0;&#013;&#010;IF (I02_QUANTIDADE IS NULL) THEN&#013;&#010;I02_QUANTIDADE = 0;&#013;&#010;IF (I03_QUANTIDADE IS NULL) THEN&#013;&#010;I03_QUANTIDADE = 0;&#013;&#010;IF (I01_SITTRIBU IS NULL) THEN&#013;&#010;I01_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I02_SITTRIBU IS NULL) THEN&#013;&#010;I02_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I03_SITTRIBU IS NULL) THEN&#013;&#010;I03_SITTRIBU = &apos;0.0&apos;;&#013;&#010;/* ABRO O MOVIMENTO - PRIMEIRA PASSAGEM */&#013;&#010;IF ((CODMOVIMENTO &gt; 0) AND (PASSAGEM = 1)) THEN&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE A VENDA JÁ EXISTE */&#013;&#010;SELECT&#013;&#010;COUNT(*)&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TESTE;&#013;&#010;IF (TESTE IS NULL) THEN&#013;&#010;TESTE = 0;&#013;&#010;/* PEGO A CONDICAO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;CONDICAO&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCONDPAG&#013;&#010;INTO&#013;&#010;CONDICAO;&#013;&#010;/* SE JÁ EXISTIR ATUALIZO A VENDA */&#013;&#010;IF (TESTE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* EXCLUSÃO DOS ITENS DA VENDA */&#013;&#010;IF (PROCESSO = &apos;VEN&apos;) THEN&#013;&#010;BEGIN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* APAGO OS ITENS DO ORÇAMENTO */&#013;&#010;IF ((PROCESSO = &apos;ORC&apos;) OR (PROCESSO = &apos;COM&apos;) or (PROCESSO = &apos;PRO&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* ATUALIZO OS DADOS DO CABEÇALHO DO MOVIMENTO */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;CODCLIENTE        = :CODCLIENTE,&#013;&#010;CODRESPONSAVEL    = :CODRESPONSAVEL,&#013;&#010;CODVENDEDOR       = :CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER  = :CODNATUOPER,&#013;&#010;CONDICAO          = :CONDICAO,&#013;&#010;CODCONDPAG        = :CODCONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 2;&#013;&#010;MOV_TIPO = 5;&#013;&#010;END&#013;&#010;/* ORÇAMENTO */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 0;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* COMPRA */&#013;&#010;if (PROCESSO = &apos;COM&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* PRODUÇÃO */&#013;&#010;if (PROCESSO = &apos;PRO&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 3;&#013;&#010;END&#013;&#010;/* INICIO O MOVIMENTO */&#013;&#010;INSERT INTO&#013;&#010;MOVIMENTOS (&#013;&#010;CODIGO,&#013;&#010;ES,&#013;&#010;TIPO,&#013;&#010;CODCLIENTE,&#013;&#010;DATA,&#013;&#010;VALOR_SERVICOS,&#013;&#010;VALOR_ITENS,&#013;&#010;DESCONTO,&#013;&#010;VALOR_ICMS,&#013;&#010;NOTA_FRETE,&#013;&#010;NOTA_VALOR_FRETE,&#013;&#010;NOTA_VALOR_SEGURO,&#013;&#010;NOTA_VALOR_OUTROS,&#013;&#010;NOTA_QUANTIDADE,&#013;&#010;NOTA_PESOBRUTO,&#013;&#010;NOTA_PESOLIQUIDO,&#013;&#010;STATUS,&#013;&#010;CONDICAO,&#013;&#010;ICMSSIMPLES,&#013;&#010;ICMSSIMPALIQ,&#013;&#010;ISSALIQ,&#013;&#010;NOTA_DATASAIDA,&#013;&#010;NOTA_BASEICMSSUBST,&#013;&#010;NOTA_VALORICMSSUBST,&#013;&#010;VALOR_IPI,&#013;&#010;GARANTIA,&#013;&#010;EMPRESTIMO,&#013;&#010;CODEMPRESA,&#013;&#010;VALOR_COMISSAO,&#013;&#010;ECF,&#013;&#010;OSTIPO,&#013;&#010;VALOR_IPI_PRODUTOS,&#013;&#010;AUTORIZADO,&#013;&#010;CODRESPONSAVEL,&#013;&#010;CODVENDEDOR_ABRE,&#013;&#010;CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER,&#013;&#010;PRIORIDADE,&#013;&#010;CONDICAO,&#013;&#010;CODCENTRO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;PERCCOMIS_PROD,&#013;&#010;PERCCOMIS_PECA,&#013;&#010;PERCCOMIS_SERV,&#013;&#010;CODCONDPAG)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:MOV_ES,&#013;&#010;:MOV_TIPO,&#013;&#010;:CODCLIENTE,&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;&apos;,&#013;&#010;&apos;&apos;,                    /* CONDICAO        */&#013;&#010;&apos;N&apos;,                   /* ICMSSIMPLES     */&#013;&#010;0,                     /* ICMSSIMPLESALIQ */&#013;&#010;0,                     /* ISSALIQ         */&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;0,&#013;&#010;&apos;N&apos;,                   /* ECF             */&#013;&#010;99,                    /* OSTIPO          */&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODVENDEDOR,&#013;&#010;:CODNATUOPER,&#013;&#010;1,&#013;&#010;:CONDICAO,&#013;&#010;1,                     /* CODCENTRO       */&#013;&#010;&apos;F&apos;,                   /* COMIS CALCULO   */&#013;&#010;0,                     /* COMIS PROD      */&#013;&#010;0,                     /* COMIS PECA      */&#013;&#010;0,                     /* COMIS SERV      */&#013;&#010;:CODCONDPAG);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;/* SE NÃO HOUVER MOVIMENTO, ABORTO */&#013;&#010;IF (CODMOVIMENTO = 0) THEN&#013;&#010;EXIT;&#013;&#010;/* SE DEU ERRO PASSO AOS ITENS */&#013;&#010;IF (RE_MOVIMENTO = 0) THEN&#013;&#010;BEGIN&#013;&#010;/*   V E N D A   */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I01_CODBARRA,&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I02_CODBARRA,&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I03_CODBARRA,&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;S&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_SERVICOS;&#013;&#010;IF (TEMP_SERVICOS IS NULL) THEN&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;P&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* VENDA */&#013;&#010;/*   O R C A M E N T O   */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* ORÇAMENTO */&#013;&#010;/*   C O M P R A    O U    P R O D U Ç Ã O  */&#013;&#010;if ((PROCESSO = &apos;COM&apos;) or (PROCESSO = &apos;PRO&apos;)) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* COMPRA OU PRODUÇÃO */&#013;&#010;/* ATUALIZO OS TOTAIS */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_SERVICOS = :TEMP_SERVICOS,&#013;&#010;VALOR_ITENS    = :TEMP_PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (291, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="292" SQL="/*&#013;&#010;** SUPORTE A PRODUÇÃO V&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_ABRE (&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;CODEMPRESA INTEGER,&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODRESPONSAVEL INTEGER,&#013;&#010;CODVENDEDOR INTEGER,&#013;&#010;CODCONDPAG INTEGER,&#013;&#010;CODNATUOPER VARCHAR(5),&#013;&#010;PROCESSO CHAR(3),&#013;&#010;PASSAGEM INTEGER,&#013;&#010;I01_CODBARRA VARCHAR(14),&#013;&#010;I01_QUANTIDADE NUMERIC(9,2),&#013;&#010;I01_VALOR NUMERIC(9,2),&#013;&#010;I01_DESCONTO NUMERIC(9,2),&#013;&#010;I01_ICMS NUMERIC(9,2),&#013;&#010;I01_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I01_IPI NUMERIC(9,2),&#013;&#010;I01_SITTRIBU CHAR(3),&#013;&#010;I02_CODBARRA VARCHAR(14),&#013;&#010;I02_QUANTIDADE NUMERIC(9,2),&#013;&#010;I02_VALOR NUMERIC(9,2),&#013;&#010;I02_DESCONTO NUMERIC(9,2),&#013;&#010;I02_ICMS NUMERIC(9,2),&#013;&#010;I02_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I02_IPI NUMERIC(9,2),&#013;&#010;I02_SITTRIBU CHAR(3),&#013;&#010;I03_CODBARRA VARCHAR(14),&#013;&#010;I03_QUANTIDADE NUMERIC(9,2),&#013;&#010;I03_VALOR NUMERIC(9,2),&#013;&#010;I03_DESCONTO NUMERIC(9,2),&#013;&#010;I03_ICMS NUMERIC(9,2),&#013;&#010;I03_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I03_IPI NUMERIC(9,2),&#013;&#010;I03_SITTRIBU CHAR(3))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER,&#013;&#010;RE_01 INTEGER,&#013;&#010;RE_02 INTEGER,&#013;&#010;RE_03 INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TESTE INTEGER;&#013;&#010;DECLARE VARIABLE CONDICAO VARCHAR(40);&#013;&#010;DECLARE VARIABLE TEMP_SERVICOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_PRODUTOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE MOV_ES INTEGER;&#013;&#010;DECLARE VARIABLE MOV_TIPO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODIGO INTEGER;&#013;&#010;BEGIN&#013;&#010;/* SE FOR NULO, É VENDA */&#013;&#010;if (PROCESSO IS NULL) then&#013;&#010;PROCESSO = &apos;VEN&apos;;&#013;&#010;/* ZERAMENTO DOS RETORNOS */&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;RE_01 = 0;&#013;&#010;RE_02 = 0;&#013;&#010;RE_03 = 0;&#013;&#010;IF (I01_QUANTIDADE IS NULL) THEN&#013;&#010;I01_QUANTIDADE = 0;&#013;&#010;IF (I02_QUANTIDADE IS NULL) THEN&#013;&#010;I02_QUANTIDADE = 0;&#013;&#010;IF (I03_QUANTIDADE IS NULL) THEN&#013;&#010;I03_QUANTIDADE = 0;&#013;&#010;IF (I01_SITTRIBU IS NULL) THEN&#013;&#010;I01_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I02_SITTRIBU IS NULL) THEN&#013;&#010;I02_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I03_SITTRIBU IS NULL) THEN&#013;&#010;I03_SITTRIBU = &apos;0.0&apos;;&#013;&#010;/* ABRO O MOVIMENTO - PRIMEIRA PASSAGEM */&#013;&#010;IF ((CODMOVIMENTO &gt; 0) AND (PASSAGEM = 1)) THEN&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE A VENDA JÁ EXISTE */&#013;&#010;SELECT&#013;&#010;COUNT(*)&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TESTE;&#013;&#010;IF (TESTE IS NULL) THEN&#013;&#010;TESTE = 0;&#013;&#010;/* PEGO A CONDICAO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;CONDICAO&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCONDPAG&#013;&#010;INTO&#013;&#010;CONDICAO;&#013;&#010;if (CONDICAO IS NULL) then&#013;&#010;BEGIN&#013;&#010;CONDICAO = &apos;1/&apos;;&#013;&#010;CODCONDPAG = NULL;&#013;&#010;END&#013;&#010;/* SE JÁ EXISTIR ATUALIZO A VENDA */&#013;&#010;IF (TESTE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* EXCLUSÃO DOS ITENS DA VENDA */&#013;&#010;IF (PROCESSO = &apos;VEN&apos;) THEN&#013;&#010;BEGIN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* APAGO OS ITENS DO ORÇAMENTO */&#013;&#010;IF ((PROCESSO = &apos;ORC&apos;) OR (PROCESSO = &apos;COM&apos;) or (PROCESSO = &apos;PRO&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* ATUALIZO OS DADOS DO CABEÇALHO DO MOVIMENTO */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;CODCLIENTE        = :CODCLIENTE,&#013;&#010;CODRESPONSAVEL    = :CODRESPONSAVEL,&#013;&#010;CODVENDEDOR       = :CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER  = :CODNATUOPER,&#013;&#010;CONDICAO          = :CONDICAO,&#013;&#010;CODCONDPAG        = :CODCONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 2;&#013;&#010;MOV_TIPO = 5;&#013;&#010;END&#013;&#010;/* ORÇAMENTO */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 0;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* COMPRA */&#013;&#010;if (PROCESSO = &apos;COM&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* PRODUÇÃO */&#013;&#010;if (PROCESSO = &apos;PRO&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 3;&#013;&#010;END&#013;&#010;/* INICIO O MOVIMENTO */&#013;&#010;INSERT INTO&#013;&#010;MOVIMENTOS (&#013;&#010;CODIGO,&#013;&#010;ES,&#013;&#010;TIPO,&#013;&#010;CODCLIENTE,&#013;&#010;DATA,&#013;&#010;VALOR_SERVICOS,&#013;&#010;VALOR_ITENS,&#013;&#010;DESCONTO,&#013;&#010;VALOR_ICMS,&#013;&#010;NOTA_FRETE,&#013;&#010;NOTA_VALOR_FRETE,&#013;&#010;NOTA_VALOR_SEGURO,&#013;&#010;NOTA_VALOR_OUTROS,&#013;&#010;NOTA_QUANTIDADE,&#013;&#010;NOTA_PESOBRUTO,&#013;&#010;NOTA_PESOLIQUIDO,&#013;&#010;STATUS,&#013;&#010;CONDICAO,&#013;&#010;ICMSSIMPLES,&#013;&#010;ICMSSIMPALIQ,&#013;&#010;ISSALIQ,&#013;&#010;NOTA_DATASAIDA,&#013;&#010;NOTA_BASEICMSSUBST,&#013;&#010;NOTA_VALORICMSSUBST,&#013;&#010;VALOR_IPI,&#013;&#010;GARANTIA,&#013;&#010;EMPRESTIMO,&#013;&#010;CODEMPRESA,&#013;&#010;VALOR_COMISSAO,&#013;&#010;ECF,&#013;&#010;OSTIPO,&#013;&#010;VALOR_IPI_PRODUTOS,&#013;&#010;AUTORIZADO,&#013;&#010;CODRESPONSAVEL,&#013;&#010;CODVENDEDOR_ABRE,&#013;&#010;CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER,&#013;&#010;PRIORIDADE,&#013;&#010;CONDICAO,&#013;&#010;CODCENTRO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;PERCCOMIS_PROD,&#013;&#010;PERCCOMIS_PECA,&#013;&#010;PERCCOMIS_SERV,&#013;&#010;CODCONDPAG)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:MOV_ES,&#013;&#010;:MOV_TIPO,&#013;&#010;:CODCLIENTE,&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;&apos;,&#013;&#010;&apos;&apos;,                    /* CONDICAO        */&#013;&#010;&apos;N&apos;,                   /* ICMSSIMPLES     */&#013;&#010;0,                     /* ICMSSIMPLESALIQ */&#013;&#010;0,                     /* ISSALIQ         */&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;0,&#013;&#010;&apos;N&apos;,                   /* ECF             */&#013;&#010;99,                    /* OSTIPO          */&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODVENDEDOR,&#013;&#010;:CODNATUOPER,&#013;&#010;1,&#013;&#010;:CONDICAO,&#013;&#010;1,                     /* CODCENTRO       */&#013;&#010;&apos;F&apos;,                   /* COMIS CALCULO   */&#013;&#010;0,                     /* COMIS PROD      */&#013;&#010;0,                     /* COMIS PECA      */&#013;&#010;0,                     /* COMIS SERV      */&#013;&#010;:CODCONDPAG);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;/* SE NÃO HOUVER MOVIMENTO, ABORTO */&#013;&#010;IF (CODMOVIMENTO = 0) THEN&#013;&#010;EXIT;&#013;&#010;/* SE DEU ERRO PASSO AOS ITENS */&#013;&#010;IF (RE_MOVIMENTO = 0) THEN&#013;&#010;BEGIN&#013;&#010;/*   V E N D A   */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I01_CODBARRA,&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I02_CODBARRA,&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I03_CODBARRA,&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;S&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_SERVICOS;&#013;&#010;IF (TEMP_SERVICOS IS NULL) THEN&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;P&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* VENDA */&#013;&#010;/*   O R C A M E N T O   */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* ORÇAMENTO */&#013;&#010;/*   C O M P R A    O U    P R O D U Ç Ã O  */&#013;&#010;if ((PROCESSO = &apos;COM&apos;) or (PROCESSO = &apos;PRO&apos;)) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* COMPRA OU PRODUÇÃO */&#013;&#010;/* ATUALIZO OS TOTAIS */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_SERVICOS = :TEMP_SERVICOS,&#013;&#010;VALOR_ITENS    = :TEMP_PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (292, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="293" SQL="/*&#013;&#010;** AUTODESTRUICAO&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REINICIAR (&#013;&#010;ROTINA INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODCLIENTE1 INTEGER;&#013;&#010;DECLARE VARIABLE CODCLIENTE2 INTEGER;&#013;&#010;begin&#013;&#010;/* DETERMINO A ROTINA */&#013;&#010;IF (ROTINA IS NULL) THEN&#013;&#010;ROTINA = 0;&#013;&#010;/* LIMPAR TUDO */&#013;&#010;IF (ROTINA = 0) THEN&#013;&#010;BEGIN&#013;&#010;/* SEQUENCIA */&#013;&#010;DELETE FROM&#013;&#010;ITSEQUENCIA;&#013;&#010;/* PAGAMENTOS */&#013;&#010;UPDATE&#013;&#010;PAGAMENTOS&#013;&#010;SET PAGO = 0;&#013;&#010;DELETE FROM&#013;&#010;COMISSOES;&#013;&#010;DELETE FROM&#013;&#010;PAGAMENTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;PAGAMENTOS&apos;;&#013;&#010;/* ESTOQUE */&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;;&#013;&#010;DELETE FROM&#013;&#010;INDIVIDUAIS;&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;INDIVIDUAIS&apos;;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;TEMPITENS&apos;;&#013;&#010;/* PRODUTOS */&#013;&#010;DELETE FROM&#013;&#010;VARIACAO_VALOR;&#013;&#010;DELETE FROM&#013;&#010;MENSAGENS;&#013;&#010;DELETE FROM&#013;&#010;CONTRATOS;&#013;&#010;DELETE FROM&#013;&#010;COMPOSICAO;&#013;&#010;DELETE FROM&#013;&#010;PRODUTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 10000&#013;&#010;WHERE&#013;&#010;TABELA = &apos;PRODUTOS&apos;;&#013;&#010;/* MOVIMENTOS */&#013;&#010;DELETE FROM&#013;&#010;OS_VENDER;&#013;&#010;DELETE FROM&#013;&#010;MOVIMENTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 10000&#013;&#010;WHERE&#013;&#010;TABELA = &apos;MOVIMENTOS&apos;;&#013;&#010;/* EMPRESAS */&#013;&#010;DELETE FROM&#013;&#010;TRANSFERENCIAS;&#013;&#010;DELETE FROM&#013;&#010;SISCONFIG&#013;&#010;WHERE&#013;&#010;CODIGO &gt; 1;&#013;&#010;/* CLIENTES */&#013;&#010;SELECT&#013;&#010;SI.CODCLIENTE,&#013;&#010;SI.CODCLIENTE_PADRAO&#013;&#010;FROM&#013;&#010;SISCONFIG SI&#013;&#010;WHERE&#013;&#010;SI.CODIGO = 1&#013;&#010;INTO&#013;&#010;:CODCLIENTE1,&#013;&#010;:CODCLIENTE2;&#013;&#010;DELETE FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;CODIGO NOT IN (:CODCLIENTE1, :CODCLIENTE2);&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = UDF_MAX(:CODCLIENTE1, :CODCLIENTE2) + 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;CLIENTES&apos;;&#013;&#010;UPDATE&#013;&#010;CLIENTES&#013;&#010;SET&#013;&#010;NOMEUSER = &apos;SYSDBA&apos;&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCLIENTE1;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (293, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="294" SQL="/*&#013;&#010;** OPERADOR NA O.S.&#013;&#010;*/&#013;&#010;ALTER TABLE MOVIMENTOS ADD OPERADORA STR40;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (294, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="295" SQL="/*&#013;&#010;** PRODMOV - 1 FORNECEDOR - VARIOS PRODUTOS&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE PRODMOV (&#013;&#010;CODEMPRESA INTEGER,&#013;&#010;CODPRODUTO INTEGER,&#013;&#010;CODRESPONSAVEL INTEGER,&#013;&#010;CODVENDEDOR INTEGER,&#013;&#010;CODCONDPAG INTEGER,&#013;&#010;CODNATUOPER VARCHAR(5),&#013;&#010;I01_CODCLIENTE INTEGER,&#013;&#010;I01_QUANTIDADE NUMERIC(9,2),&#013;&#010;I01_VALOR NUMERIC(9,2),&#013;&#010;I01_DESCONTO NUMERIC(9,2),&#013;&#010;I01_ICMS NUMERIC(9,2),&#013;&#010;I01_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I01_IPI NUMERIC(9,2),&#013;&#010;I01_SITTRIBU CHAR(3),&#013;&#010;I02_CODCLIENTE INTEGER,&#013;&#010;I02_QUANTIDADE NUMERIC(9,2),&#013;&#010;I02_VALOR NUMERIC(9,2),&#013;&#010;I02_DESCONTO NUMERIC(9,2),&#013;&#010;I02_ICMS NUMERIC(9,2),&#013;&#010;I02_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I02_IPI NUMERIC(9,2),&#013;&#010;I02_SITTRIBU CHAR(3),&#013;&#010;I03_CODCLIENTE INTEGER,&#013;&#010;I03_QUANTIDADE NUMERIC(9,2),&#013;&#010;I03_VALOR NUMERIC(9,2),&#013;&#010;I03_DESCONTO NUMERIC(9,2),&#013;&#010;I03_ICMS NUMERIC(9,2),&#013;&#010;I03_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I03_IPI NUMERIC(9,2),&#013;&#010;I03_SITTRIBU CHAR(3))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER,&#013;&#010;RE_01 INTEGER,&#013;&#010;RE_02 INTEGER,&#013;&#010;RE_03 INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE N INTEGER;&#013;&#010;DECLARE VARIABLE CONDICAO VARCHAR(40);&#013;&#010;DECLARE VARIABLE TEMP_PRODUTOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE MOV_ES INTEGER;&#013;&#010;DECLARE VARIABLE MOV_TIPO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODIGO INTEGER;&#013;&#010;DECLARE VARIABLE CODMOVIMENTO INTEGER;&#013;&#010;DECLARE VARIABLE CODCLIENTE INTEGER;&#013;&#010;DECLARE VARIABLE CODBARRA VARCHAR(14);&#013;&#010;BEGIN&#013;&#010;/* ZERAMENTO DOS RETORNOS */&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;RE_01 = 0;&#013;&#010;RE_02 = 0;&#013;&#010;RE_03 = 0;&#013;&#010;IF (I01_QUANTIDADE IS NULL) THEN&#013;&#010;I01_QUANTIDADE = 0;&#013;&#010;IF (I02_QUANTIDADE IS NULL) THEN&#013;&#010;I02_QUANTIDADE = 0;&#013;&#010;IF (I03_QUANTIDADE IS NULL) THEN&#013;&#010;I03_QUANTIDADE = 0;&#013;&#010;IF (I01_SITTRIBU IS NULL) THEN&#013;&#010;I01_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I02_SITTRIBU IS NULL) THEN&#013;&#010;I02_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I03_SITTRIBU IS NULL) THEN&#013;&#010;I03_SITTRIBU = &apos;0.0&apos;;&#013;&#010;/* CODIGO DE BARRAS */&#013;&#010;SELECT&#013;&#010;PO.BARRA&#013;&#010;FROM&#013;&#010;PRODUTOS PO&#013;&#010;WHERE&#013;&#010;PO.CODIGO = :CODPRODUTO&#013;&#010;INTO&#013;&#010;:CODBARRA;&#013;&#010;/* PEGO A CONDICAO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;CONDICAO&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCONDPAG&#013;&#010;INTO&#013;&#010;CONDICAO;&#013;&#010;IF (CONDICAO IS NULL) THEN&#013;&#010;BEGIN&#013;&#010;CONDICAO = &apos;1/&apos;;&#013;&#010;CODCONDPAG = NULL;&#013;&#010;END&#013;&#010;/* COMPRA */&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 1;&#013;&#010;N = 1;&#013;&#010;WHILE (N &lt; 4) DO&#013;&#010;BEGIN&#013;&#010;IF (N = 1) THEN&#013;&#010;IF (I01_QUANTIDADE = 0) THEN&#013;&#010;EXIT;&#013;&#010;IF (N = 2) THEN&#013;&#010;IF (I02_QUANTIDADE = 0) THEN&#013;&#010;EXIT;&#013;&#010;IF (N = 3) THEN&#013;&#010;IF (I03_QUANTIDADE = 0) THEN&#013;&#010;EXIT;&#013;&#010;IF (N = 1) THEN&#013;&#010;CODCLIENTE = I01_CODCLIENTE;&#013;&#010;IF (N = 2) THEN&#013;&#010;CODCLIENTE = I02_CODCLIENTE;&#013;&#010;IF (N = 3) THEN&#013;&#010;CODCLIENTE = I03_CODCLIENTE;&#013;&#010;/* CODIGO DO MOVIMENTO */&#013;&#010;EXECUTE PROCEDURE SEQ_OBTER(&apos;MOVIMENTOS&apos;)&#013;&#010;RETURNING_VALUES :CODMOVIMENTO;&#013;&#010;/* INICIO O MOVIMENTO */&#013;&#010;INSERT INTO&#013;&#010;MOVIMENTOS (&#013;&#010;CODIGO,&#013;&#010;ES,&#013;&#010;TIPO,&#013;&#010;CODCLIENTE,&#013;&#010;DATA,&#013;&#010;VALOR_SERVICOS,&#013;&#010;VALOR_ITENS,&#013;&#010;DESCONTO,&#013;&#010;VALOR_ICMS,&#013;&#010;NOTA_FRETE,&#013;&#010;NOTA_VALOR_FRETE,&#013;&#010;NOTA_VALOR_SEGURO,&#013;&#010;NOTA_VALOR_OUTROS,&#013;&#010;NOTA_QUANTIDADE,&#013;&#010;NOTA_PESOBRUTO,&#013;&#010;NOTA_PESOLIQUIDO,&#013;&#010;STATUS,&#013;&#010;CONDICAO,&#013;&#010;ICMSSIMPLES,&#013;&#010;ICMSSIMPALIQ,&#013;&#010;ISSALIQ,&#013;&#010;NOTA_DATASAIDA,&#013;&#010;NOTA_BASEICMSSUBST,&#013;&#010;NOTA_VALORICMSSUBST,&#013;&#010;VALOR_IPI,&#013;&#010;GARANTIA,&#013;&#010;EMPRESTIMO,&#013;&#010;CODEMPRESA,&#013;&#010;VALOR_COMISSAO,&#013;&#010;ECF,&#013;&#010;OSTIPO,&#013;&#010;VALOR_IPI_PRODUTOS,&#013;&#010;AUTORIZADO,&#013;&#010;CODRESPONSAVEL,&#013;&#010;CODVENDEDOR_ABRE,&#013;&#010;CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER,&#013;&#010;PRIORIDADE,&#013;&#010;CONDICAO,&#013;&#010;CODCENTRO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;PERCCOMIS_PROD,&#013;&#010;PERCCOMIS_PECA,&#013;&#010;PERCCOMIS_SERV,&#013;&#010;CODCONDPAG)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:MOV_ES,&#013;&#010;:MOV_TIPO,&#013;&#010;:CODCLIENTE,&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;&apos;,&#013;&#010;&apos;&apos;,                    /* CONDICAO        */&#013;&#010;&apos;N&apos;,                   /* ICMSSIMPLES     */&#013;&#010;0,                     /* ICMSSIMPLESALIQ */&#013;&#010;0,                     /* ISSALIQ         */&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;0,&#013;&#010;&apos;N&apos;,                   /* ECF             */&#013;&#010;99,                    /* OSTIPO          */&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODVENDEDOR,&#013;&#010;:CODNATUOPER,&#013;&#010;1,&#013;&#010;:CONDICAO,&#013;&#010;1,                     /* CODCENTRO       */&#013;&#010;&apos;F&apos;,                   /* COMIS CALCULO   */&#013;&#010;0,                     /* COMIS PROD      */&#013;&#010;0,                     /* COMIS PECA      */&#013;&#010;0,                     /* COMIS SERV      */&#013;&#010;:CODCONDPAG);&#013;&#010;IF (N = 1) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODPRODUTO,&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;IF (N = 2) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODPRODUTO,&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;IF (N = 3) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODPRODUTO,&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;/* ATUALIZO OS TOTAIS */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_ITENS    = :TEMP_PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;N = N + 1;&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;GRANT EXECUTE ON PROCEDURE PRODMOV TO PUBLIC;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (295, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="296" SQL="/*&#013;&#010;** PRODMOV - 1 FORNECEDOR - VARIOS PRODUTOS&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;CREATE PROCEDURE REL_CAIXAVENDEDORDIA &#013;&#010;RETURNS (&#013;&#010;VENDEDOR VARCHAR(40),&#013;&#010;DOCUMENTO VARCHAR(40),&#013;&#010;VALOR NUMERIC(9,2))&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;/* MOVIMENTOS COM VENDA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;MO.NOME_VENDEDOR,&#013;&#010;DC.DOCUMENTO,&#013;&#010;SUM(PA.TOTAL_PAGO)&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;JOIN PAGAMENTOS PA ON&#013;&#010;(PA.CODMOVIMENTO = MO.CODIGO)&#013;&#010;JOIN DOCUMENTOS DC ON&#013;&#010;(DC.CODIGO = PA.CODDOCUMENTO)&#013;&#010;WHERE&#013;&#010;MO.ES = 2 AND&#013;&#010;MO.TIPO = 6 AND&#013;&#010;CAST(MO.DATAFECHAMENTO AS DATE) = CURRENT_DATE&#013;&#010;GROUP BY&#013;&#010;MO.NOME_VENDEDOR,&#013;&#010;DC.DOCUMENTO&#013;&#010;INTO&#013;&#010;:VENDEDOR,&#013;&#010;:DOCUMENTO,&#013;&#010;:VALOR&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;/* MOVIMENTOS SEM VENDA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;PA.NOMEUSUARIO,&#013;&#010;DC.DOCUMENTO,&#013;&#010;SUM(PA.TOTAL_PAGO)&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;JOIN DOCUMENTOS DC ON&#013;&#010;(DC.CODIGO = PA.CODDOCUMENTO)&#013;&#010;JOIN MOVIMENTOS MO ON&#013;&#010;(MO.CODIGO = PA.CODMOVIMENTO)&#013;&#010;WHERE&#013;&#010;PA.PAGO = 1 AND&#013;&#010;CAST(PA.DATAPAGO AS DATE) = CURRENT_DATE AND&#013;&#010;CAST(MO.DATAFECHAMENTO AS DATE) &lt;&gt; CURRENT_DATE&#013;&#010;GROUP BY&#013;&#010;PA.NOMEUSUARIO,&#013;&#010;DC.DOCUMENTO&#013;&#010;INTO&#013;&#010;:VENDEDOR,&#013;&#010;:DOCUMENTO,&#013;&#010;:VALOR&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;DESCRIBE PROCEDURE REL_CAIXAVENDEDORDIA &apos;&apos;;&#013;&#010;GRANT EXECUTE ON PROCEDURE REL_CAIXAVENDEDORDIA TO PUBLIC;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (296, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="297" SQL="/*&#013;&#010;** CHAVE ESTRANGEIRA DA VARIACAO VALOR&#013;&#010;*/&#013;&#010;ALTER TABLE VARIACAO_VALOR DROP CONSTRAINT VARIACAO_VALOR_FK01;&#013;&#010;ALTER TABLE VARIACAO_VALOR&#013;&#010;ADD CONSTRAINT VARIACAO_VALOR_FK01&#013;&#010;FOREIGN KEY (CODPRODUTO)&#013;&#010;REFERENCES PRODUTOS(CODIGO)&#013;&#010;ON DELETE CASCADE&#013;&#010;ON UPDATE CASCADE;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (297, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="298" SQL="/*&#013;&#010;** FLAG DE FECHADO NOS MOVIMENTOS&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_FECHA (&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;USUARIOFECHAMENTO VARCHAR(30),&#013;&#010;OBSERVACOES VARCHAR(2048))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TIPO INTEGER;&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;BEGIN&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;/* LEIO O TIPO ATUAL */&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:TIPO;&#013;&#010;IF (TIPO IN (1, 2, 5)) THEN&#013;&#010;BEGIN&#013;&#010;IF (ES = 2) THEN&#013;&#010;BEGIN&#013;&#010;IF (TIPO = 2) THEN&#013;&#010;TIPO = 3;&#013;&#010;ELSE&#013;&#010;TIPO = 6;&#013;&#010;END&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;TIPO = :TIPO,&#013;&#010;USUARIOFECHAMENTO = :USUARIOFECHAMENTO,&#013;&#010;OBSERVACOES = :OBSERVACOES,&#013;&#010;FECHADO = &apos;S&apos;&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (298, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="299" SQL="/*&#013;&#010;** DATA DO FECHAMENTO NOS MOVIMENTOS &#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_FECHA (&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;USUARIOFECHAMENTO VARCHAR(30),&#013;&#010;OBSERVACOES VARCHAR(2048))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TIPO INTEGER;&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;BEGIN&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;/* LEIO O TIPO ATUAL */&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:TIPO;&#013;&#010;IF (TIPO IN (1, 2, 5)) THEN&#013;&#010;BEGIN&#013;&#010;IF (ES = 2) THEN&#013;&#010;BEGIN&#013;&#010;IF (TIPO = 2) THEN&#013;&#010;TIPO = 3;&#013;&#010;ELSE&#013;&#010;TIPO = 6;&#013;&#010;END&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;TIPO = :TIPO,&#013;&#010;USUARIOFECHAMENTO = :USUARIOFECHAMENTO,&#013;&#010;DATAFECHAMENTO = CURRENT_TIMESTAMP,&#013;&#010;OBSERVACOES = :OBSERVACOES,&#013;&#010;FECHADO = &apos;S&apos;&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (299, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="300" SQL="/*&#013;&#010;** TABELA DE ALOCAÇÃO DE MATÉRIA PRIMA (PRÉ-PRODUÇÃO) &#013;&#010;*/&#013;&#010;CREATE TABLE ITPRODUCAO (&#013;&#010;CODMOVIMENTO INTEIRO_VALIDO NOT NULL,&#013;&#010;CODMATPRIMA INTEIRO_VALIDO NOT NULL,&#013;&#010;QUANTIDADE DINHEIRO,&#013;&#010;VALOR_UNITARIO DINHEIRO,&#013;&#010;VALOR_TOTAL DINHEIRO);&#013;&#010;ALTER TABLE ITPRODUCAO&#013;&#010;ADD CONSTRAINT PK_ITPRODUCAO&#013;&#010;PRIMARY KEY (CODMOVIMENTO,CODMATPRIMA);&#013;&#010;GRANT ALL ON ITPRODUCAO TO PUBLIC;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (300, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="301" SQL="/*&#013;&#010;** APRIMORAMENTOS EM REINICIAR &#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REINICIAR (&#013;&#010;ROTINA INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODCLIENTE1 INTEGER;&#013;&#010;DECLARE VARIABLE CODCLIENTE2 INTEGER;&#013;&#010;begin&#013;&#010;/* DETERMINO A ROTINA */&#013;&#010;IF (ROTINA IS NULL) THEN&#013;&#010;ROTINA = 0;&#013;&#010;/* LIMPAR TUDO */&#013;&#010;IF (ROTINA = 0) THEN&#013;&#010;BEGIN&#013;&#010;/* SEQUENCIA */&#013;&#010;DELETE FROM&#013;&#010;ITSEQUENCIA;&#013;&#010;/* PAGAMENTOS */&#013;&#010;UPDATE&#013;&#010;PAGAMENTOS&#013;&#010;SET PAGO = 0;&#013;&#010;DELETE FROM&#013;&#010;COMISSOES;&#013;&#010;DELETE FROM&#013;&#010;PAGAMENTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;PAGAMENTOS&apos;;&#013;&#010;/* ESTOQUE */&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;;&#013;&#010;DELETE FROM&#013;&#010;INDIVIDUAIS;&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;INDIVIDUAIS&apos;;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;TEMPITENS&apos;;&#013;&#010;/* PRODUTOS */&#013;&#010;DELETE FROM&#013;&#010;VARIACAO_VALOR;&#013;&#010;DELETE FROM&#013;&#010;MENSAGENS;&#013;&#010;DELETE FROM&#013;&#010;CONTRATOS;&#013;&#010;DELETE FROM&#013;&#010;COMPOSICAO;&#013;&#010;DELETE FROM&#013;&#010;PRODUTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 10000&#013;&#010;WHERE&#013;&#010;TABELA = &apos;PRODUTOS&apos;;&#013;&#010;/* MOVIMENTOS */&#013;&#010;DELETE FROM&#013;&#010;OS_VENDER;&#013;&#010;DELETE FROM&#013;&#010;MOVIMENTOS;&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = 10000&#013;&#010;WHERE&#013;&#010;TABELA = &apos;MOVIMENTOS&apos;;&#013;&#010;/* EMPRESAS */&#013;&#010;DELETE FROM&#013;&#010;TRANSFERENCIAS;&#013;&#010;DELETE FROM&#013;&#010;SISCONFIG&#013;&#010;WHERE&#013;&#010;CODIGO &gt; 1;&#013;&#010;/* CLIENTES */&#013;&#010;SELECT&#013;&#010;SI.CODCLIENTE,&#013;&#010;SI.CODCLIENTE_PADRAO&#013;&#010;FROM&#013;&#010;SISCONFIG SI&#013;&#010;WHERE&#013;&#010;SI.CODIGO = 1&#013;&#010;INTO&#013;&#010;:CODCLIENTE1,&#013;&#010;:CODCLIENTE2;&#013;&#010;DELETE FROM&#013;&#010;CLIENTES&#013;&#010;WHERE&#013;&#010;CODIGO NOT IN (:CODCLIENTE1, :CODCLIENTE2);&#013;&#010;UPDATE&#013;&#010;SEQUENCIA&#013;&#010;SET&#013;&#010;SEQUENCIA = UDF_MAX(:CODCLIENTE1, :CODCLIENTE2) + 1&#013;&#010;WHERE&#013;&#010;TABELA = &apos;CLIENTES&apos;;&#013;&#010;UPDATE&#013;&#010;CLIENTES&#013;&#010;SET&#013;&#010;NOMEUSER = &apos;SYSDBA&apos;,&#013;&#010;SENHAWEB = &apos;morais77&apos;,&#013;&#010;DESCONTO = 0,&#013;&#010;FINANCEIRO = &apos;S&apos;,&#013;&#010;ESTORNO = &apos;S&apos;,&#013;&#010;TROCAVENDEDOR = &apos;S&apos;,&#013;&#010;INTERNET = &apos;S&apos;,&#013;&#010;MUDAEMPRESA = &apos;S&apos;,&#013;&#010;COMISSAO = 0,&#013;&#010;TIPO = &apos;A&apos;,&#013;&#010;RECEBIMENTO = &apos;S&apos;,&#013;&#010;CUSTO = &apos;S&apos;,&#013;&#010;SEQUENCIAS = &apos;S&apos;,&#013;&#010;RECALCULO = &apos;S&apos;,&#013;&#010;COMPRAS = &apos;S&apos;,&#013;&#010;TRANSFERENCIA = &apos;S&apos;,&#013;&#010;RELATORIOS = &apos;S&apos;,&#013;&#010;VENDADIRETA = &apos;S&apos;,&#013;&#010;TECNICOLOGIN = &apos;N&apos;,&#013;&#010;FECHAMENTO = &apos;S&apos;&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCLIENTE1;&#013;&#010;END&#013;&#010;end&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (301, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="302" SQL="/*&#013;&#010;** RESOLUÇÃO DO PROBLEMA DA BAIXA PARCIAL &#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE BAIXA (&#013;&#010;CODIGO INTEGER,&#013;&#010;MULTA_JUROS NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;TIPO CHAR(1),&#013;&#010;CONTA INTEGER,&#013;&#010;CODDOCUMENTO INTEGER,&#013;&#010;INFODOC VARCHAR(50))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE CODMOVIMENTO INTEGER;&#013;&#010;DECLARE VARIABLE NUMERO INTEGER;&#013;&#010;DECLARE VARIABLE DESCRICAO VARCHAR(40);&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE VALOR NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE DATAVENCIMENTO TIMESTAMP;&#013;&#010;DECLARE VARIABLE NOVONUM NUMERIC(15,2);&#013;&#010;DECLARE VARIABLE CODEMPRESA INTEGER;&#013;&#010;DECLARE VARIABLE CODCLIENTE INTEGER;&#013;&#010;DECLARE VARIABLE CODCENTRO INTEGER;&#013;&#010;DECLARE VARIABLE CODPLANO INTEGER;&#013;&#010;DECLARE VARIABLE PERCCOMIS_CALCULO CHAR(1);&#013;&#010;DECLARE VARIABLE PERCCOMIS_PROD NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE PERCCOMIS_PECA NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE PERCCOMIS_SERV NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE CODVENDEDOR INTEGER;&#013;&#010;DECLARE VARIABLE CODTECNICO INTEGER;&#013;&#010;DECLARE VARIABLE PERC_TECNICO NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TIPOP CHAR(1);&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE CLIENTE ESTÁ PROTESTADO EM CARTÓRIO */&#013;&#010;SELECT&#013;&#010;CL.TIPO_IMPEDIMENTO&#013;&#010;FROM&#013;&#010;CLIENTES CL&#013;&#010;JOIN pagamentos PA ON&#013;&#010;(PA.codcliente = CL.CODIGO)&#013;&#010;WHERE&#013;&#010;PA.codigo = :CODIGO&#013;&#010;INTO&#013;&#010;:TIPOP;&#013;&#010;/* NÃO RECEBER */&#013;&#010;if (TIPOP = &apos;P&apos;) then&#013;&#010;EXCEPTION PROTESTO_CARTORIO;&#013;&#010;/* FAÇO A BAIXA */&#013;&#010;UPDATE&#013;&#010;PAGAMENTOS&#013;&#010;SET&#013;&#010;PAGO = 1,&#013;&#010;MULTA_JUROS = :MULTA_JUROS,&#013;&#010;DESCONTO = :DESCONTO,&#013;&#010;CODCONTA = :CONTA,&#013;&#010;CODDOCUMENTO = :CODDOCUMENTO,&#013;&#010;INFODOC = :INFODOC&#013;&#010;WHERE&#013;&#010;CODIGO = :CODIGO;&#013;&#010;/* COMISSIONAMENTO NO RECEBIMENTO ?? */&#013;&#010;SELECT&#013;&#010;PA.CODMOVIMENTO,&#013;&#010;PA.TOTAL_PAGO,&#013;&#010;MO.PERCCOMIS_CALCULO,&#013;&#010;MO.PERCCOMIS_PROD,&#013;&#010;MO.PERCCOMIS_PECA,&#013;&#010;MO.PERCCOMIS_SERV,&#013;&#010;MO.CODVENDEDOR&#013;&#010;FROM&#013;&#010;PAGAMENTOS PA&#013;&#010;JOIN MOVIMENTOS MO ON&#013;&#010;(MO.CODIGO = PA.CODMOVIMENTO)&#013;&#010;WHERE&#013;&#010;PA.CODIGO = :CODIGO&#013;&#010;INTO&#013;&#010;:CODMOVIMENTO,&#013;&#010;:VALOR,&#013;&#010;:PERCCOMIS_CALCULO,&#013;&#010;:PERCCOMIS_PROD,&#013;&#010;:PERCCOMIS_PECA,&#013;&#010;:PERCCOMIS_SERV,&#013;&#010;:CODVENDEDOR;&#013;&#010;IF (PERCCOMIS_CALCULO = &apos;R&apos;) THEN&#013;&#010;BEGIN&#013;&#010;/* LANÇAMENTO DE COMISSÃO PARA VENDEDOR */&#013;&#010;INSERT INTO&#013;&#010;COMISSOES (&#013;&#010;CODMOVIMENTO,&#013;&#010;CODVENDEDOR,&#013;&#010;DATA,&#013;&#010;CODPAGAMENTO,&#013;&#010;DESCRICAO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;VALOR,&#013;&#010;TIPOPRODUTO,&#013;&#010;PERCENTUAL)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODVENDEDOR,&#013;&#010;&apos;NOW&apos;,&#013;&#010;:CODIGO,&#013;&#010;&apos;VENDEDOR PRODUTOS RECEBIMENTO&apos;,&#013;&#010;:PERCCOMIS_CALCULO,&#013;&#010;((:VALOR * :PERCCOMIS_PROD) / 100),&#013;&#010;&apos;F&apos;,&#013;&#010;0);&#013;&#010;/* LANÇAMENTO DE COMISSÃO PARA TÉCNICOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;OS.CODVENDEDOR,&#013;&#010;OS.PORCENTAGEM&#013;&#010;FROM&#013;&#010;OS_VENDER OS&#013;&#010;WHERE&#013;&#010;OS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODTECNICO,&#013;&#010;:PERC_TECNICO&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* LANÇAMENTO SERVIÇOS PARA UM TECNICO */&#013;&#010;INSERT INTO&#013;&#010;COMISSOES (&#013;&#010;CODMOVIMENTO,&#013;&#010;CODVENDEDOR,&#013;&#010;DATA,&#013;&#010;CODPAGAMENTO,&#013;&#010;DESCRICAO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;VALOR,&#013;&#010;TIPOPRODUTO,&#013;&#010;PERCENTUAL)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODTECNICO,&#013;&#010;&apos;NOW&apos;,&#013;&#010;:CODIGO,&#013;&#010;&apos;TECNICO SERVICOS RECEBIMENTO&apos;,&#013;&#010;:PERCCOMIS_CALCULO,&#013;&#010;((:VALOR * :PERCCOMIS_SERV) / 100) * (:PERC_TECNICO / 100),&#013;&#010;&apos;S&apos;,&#013;&#010;0);&#013;&#010;/* LANÇAMENTO PEÇAS PARA UM TECNICO */&#013;&#010;INSERT INTO&#013;&#010;COMISSOES (&#013;&#010;CODMOVIMENTO,&#013;&#010;CODVENDEDOR,&#013;&#010;DATA,&#013;&#010;CODPAGAMENTO,&#013;&#010;DESCRICAO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;VALOR,&#013;&#010;TIPOPRODUTO,&#013;&#010;PERCENTUAL)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:CODTECNICO,&#013;&#010;&apos;NOW&apos;,&#013;&#010;:CODIGO,&#013;&#010;&apos;TECNICO PECAS RECEBIMENTO&apos;,&#013;&#010;:PERCCOMIS_CALCULO,&#013;&#010;((:VALOR * :PERCCOMIS_PECA) / 100) * (:PERC_TECNICO / 100),&#013;&#010;&apos;C&apos;,&#013;&#010;0);&#013;&#010;END&#013;&#010;END&#013;&#010;/* É UMA BAIXA PARCIAL */&#013;&#010;IF ((TIPO = &apos;P&apos;) AND (DESCONTO &gt; 0)) THEN&#013;&#010;BEGIN&#013;&#010;/* LEIO OS DADOS DO PAGAMENTO */&#013;&#010;SELECT&#013;&#010;CODMOVIMENTO,&#013;&#010;UDF_LEFT(DESCRICAO, 35),&#013;&#010;ES,&#013;&#010;DESCONTO,&#013;&#010;DATAVENCIMENTO,&#013;&#010;CODEMPRESA,&#013;&#010;CODCLIENTE,&#013;&#010;CODCENTRO,&#013;&#010;CODPLANO&#013;&#010;FROM&#013;&#010;PAGAMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODIGO&#013;&#010;INTO&#013;&#010;:CODMOVIMENTO,&#013;&#010;:DESCRICAO,&#013;&#010;:ES,&#013;&#010;:VALOR,&#013;&#010;:DATAVENCIMENTO,&#013;&#010;:CODEMPRESA,&#013;&#010;:CODCLIENTE,&#013;&#010;:CODCENTRO,&#013;&#010;:CODPLANO;&#013;&#010;/* PEGO O PROXIMO CODIGO */&#013;&#010;SELECT&#013;&#010;SEQUENCIA&#013;&#010;FROM&#013;&#010;SEQ_OBTER(&apos;PAGAMENTOS&apos;)&#013;&#010;INTO&#013;&#010;:CODIGO;&#013;&#010;/* ACERTO A DESCRICAO */&#013;&#010;DESCRICAO = &apos;ADIC &apos; || DESCRICAO;&#013;&#010;/* PEGO O NUMERO NOVO */&#013;&#010;SELECT&#013;&#010;MAX(NUMERO) + 1&#013;&#010;FROM&#013;&#010;PAGAMENTOS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:NOVONUM;&#013;&#010;/* NUMERO */&#013;&#010;if (NOVONUM IS NULL) then&#013;&#010;NOVONUM = 1;&#013;&#010;/* INSIRO O PAGAMENTO RESTANTE */&#013;&#010;INSERT INTO&#013;&#010;PAGAMENTOS (&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;NUMERO,&#013;&#010;DESCRICAO,&#013;&#010;ES,&#013;&#010;DATACADAST,&#013;&#010;VALOR,&#013;&#010;EXTERNO,&#013;&#010;PAGO,&#013;&#010;DESCONTO,&#013;&#010;MULTA_JUROS,&#013;&#010;DATAVENCIMENTO,&#013;&#010;SALDOANT,&#013;&#010;SALDOATU,&#013;&#010;CODCONTA,&#013;&#010;CODDOCUMENTO,&#013;&#010;CODEMPRESA,&#013;&#010;CODCLIENTE,&#013;&#010;CODCENTRO,&#013;&#010;CODPLANO)&#013;&#010;VALUES (&#013;&#010;:CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;:NOVONUM,&#013;&#010;:DESCRICAO,&#013;&#010;:ES,&#013;&#010;&apos;NOW&apos;,&#013;&#010;:VALOR,&#013;&#010;&apos;S&apos;,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;:DATAVENCIMENTO,&#013;&#010;0,&#013;&#010;0,&#013;&#010;:CONTA,&#013;&#010;:CODDOCUMENTO,&#013;&#010;:CODEMPRESA,&#013;&#010;:CODCLIENTE,&#013;&#010;:CODCENTRO,&#013;&#010;:CODPLANO);&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (302, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="303" SQL="/*&#013;&#010;** MELHORIAS NA ATIVAÇÃO &#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ATIVACAO_LER (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODATIVACAO INTEGER,&#013;&#010;CODAPARELHO INTEGER,&#013;&#010;APARELHO VARCHAR(60),&#013;&#010;SERIE VARCHAR(30),&#013;&#010;SERIE2 VARCHAR(30),&#013;&#010;NUMERO VARCHAR(20),&#013;&#010;CODOPERADORA INTEGER,&#013;&#010;CODPLANO INTEGER,&#013;&#010;VALOR1 NUMERIC(9,2),&#013;&#010;VALOR2 NUMERIC(9,2),&#013;&#010;REBATE CHAR(1))&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;/* APARELHO */&#013;&#010;SELECT FIRST 1&#013;&#010;ID.CODIGO,&#013;&#010;PO.CODIGO,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.PRECOVENDA,&#013;&#010;ID.VALOR_PAGO,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.NUMERO_FONE,&#013;&#010;ID.CODOPERADORA,&#013;&#010;ID.CODPLANO&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = ID.CODPRODUTO)&#013;&#010;JOIN PRODUTOS SE ON&#013;&#010;(SE.CODIGO = PO.CODSERVICO)&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.PS = &apos;P&apos; AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.UNICO = 1 AND&#013;&#010;SE.ATIVACAO = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:CODATIVACAO,&#013;&#010;:CODAPARELHO,&#013;&#010;:APARELHO,&#013;&#010;:VALOR1,&#013;&#010;:VALOR2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:NUMERO,&#013;&#010;:CODOPERADORA,&#013;&#010;:CODPLANO;&#013;&#010;IF (VALOR1 &lt;&gt; VALOR2) THEN&#013;&#010;REBATE = &apos;S&apos;;&#013;&#010;ELSE&#013;&#010;REBATE = &apos;N&apos;;&#013;&#010;IF (CODATIVACAO IS NOT NULL) THEN&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ATIVACAO_GRAVAR (&#013;&#010;CODATIVACAO INTEGER,&#013;&#010;CODAPARELHO INTEGER,&#013;&#010;APARELHO VARCHAR(60),&#013;&#010;SERIE VARCHAR(30),&#013;&#010;SERIE2 VARCHAR(30),&#013;&#010;NUMERO VARCHAR(20),&#013;&#010;CODOPERADORA INTEGER,&#013;&#010;CODPLANO INTEGER,&#013;&#010;VALOR1 NUMERIC(9,2),&#013;&#010;VALOR2 NUMERIC(9,2),&#013;&#010;REBATE CHAR(1))&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;IF (CODATIVACAO IS NOT NULL) THEN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS ID&#013;&#010;SET&#013;&#010;ID.CODINDIVIDUO = :CODAPARELHO,&#013;&#010;ID.APARELO      = :APARELHO,&#013;&#010;ID.SERIE        = :SERIE,&#013;&#010;ID.SERIE2       = :SERIE2,&#013;&#010;ID.NUMERO_FONE  = :NUMERO,&#013;&#010;ID.CODOPERADORA = :CODOPERADORA,&#013;&#010;ID.CODPLANO     = :CODPLANO,&#013;&#010;ID.REBATE       = :REBATE,&#013;&#010;ID.ATIVACAO     = &apos;S&apos;&#013;&#010;WHERE&#013;&#010;ID.CODIGO       = :CODATIVACAO;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (303, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="304" SQL="/*&#013;&#010;** COMPRA ANEXADA AO MOVIMENTO DE SAIDA - PRODUÇÃO E TROCA&#013;&#010;*/&#013;&#010;ALTER TABLE MOVIMENTOS ADD CODCOMPRA INTEIRO;&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_ABRE (&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;CODEMPRESA INTEGER,&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODRESPONSAVEL INTEGER,&#013;&#010;CODVENDEDOR INTEGER,&#013;&#010;CODCONDPAG INTEGER,&#013;&#010;CODNATUOPER VARCHAR(5),&#013;&#010;PROCESSO CHAR(3),&#013;&#010;PASSAGEM INTEGER,&#013;&#010;NOTA_NUMERO INTEGER,&#013;&#010;CODCOMPRA INTEGER,&#013;&#010;I01_CODBARRA VARCHAR(14),&#013;&#010;I01_QUANTIDADE NUMERIC(9,2),&#013;&#010;I01_VALOR NUMERIC(9,2),&#013;&#010;I01_DESCONTO NUMERIC(9,2),&#013;&#010;I01_ICMS NUMERIC(9,2),&#013;&#010;I01_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I01_IPI NUMERIC(9,2),&#013;&#010;I01_SITTRIBU CHAR(3),&#013;&#010;I02_CODBARRA VARCHAR(14),&#013;&#010;I02_QUANTIDADE NUMERIC(9,2),&#013;&#010;I02_VALOR NUMERIC(9,2),&#013;&#010;I02_DESCONTO NUMERIC(9,2),&#013;&#010;I02_ICMS NUMERIC(9,2),&#013;&#010;I02_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I02_IPI NUMERIC(9,2),&#013;&#010;I02_SITTRIBU CHAR(3),&#013;&#010;I03_CODBARRA VARCHAR(14),&#013;&#010;I03_QUANTIDADE NUMERIC(9,2),&#013;&#010;I03_VALOR NUMERIC(9,2),&#013;&#010;I03_DESCONTO NUMERIC(9,2),&#013;&#010;I03_ICMS NUMERIC(9,2),&#013;&#010;I03_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I03_IPI NUMERIC(9,2),&#013;&#010;I03_SITTRIBU CHAR(3))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER,&#013;&#010;RE_01 INTEGER,&#013;&#010;RE_02 INTEGER,&#013;&#010;RE_03 INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TESTE INTEGER;&#013;&#010;DECLARE VARIABLE CONDICAO VARCHAR(40);&#013;&#010;DECLARE VARIABLE TEMP_SERVICOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_PRODUTOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE MOV_ES INTEGER;&#013;&#010;DECLARE VARIABLE MOV_TIPO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODIGO INTEGER;&#013;&#010;BEGIN&#013;&#010;/* SE FOR NULO, É VENDA */&#013;&#010;if (PROCESSO IS NULL) then&#013;&#010;PROCESSO = &apos;VEN&apos;;&#013;&#010;/* ZERAMENTO DOS RETORNOS */&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;RE_01 = 0;&#013;&#010;RE_02 = 0;&#013;&#010;RE_03 = 0;&#013;&#010;IF (I01_QUANTIDADE IS NULL) THEN&#013;&#010;I01_QUANTIDADE = 0;&#013;&#010;IF (I02_QUANTIDADE IS NULL) THEN&#013;&#010;I02_QUANTIDADE = 0;&#013;&#010;IF (I03_QUANTIDADE IS NULL) THEN&#013;&#010;I03_QUANTIDADE = 0;&#013;&#010;IF (I01_SITTRIBU IS NULL) THEN&#013;&#010;I01_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I02_SITTRIBU IS NULL) THEN&#013;&#010;I02_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I03_SITTRIBU IS NULL) THEN&#013;&#010;I03_SITTRIBU = &apos;0.0&apos;;&#013;&#010;/* ABRO O MOVIMENTO - PRIMEIRA PASSAGEM */&#013;&#010;IF ((CODMOVIMENTO &gt; 0) AND (PASSAGEM = 1)) THEN&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE A VENDA JÁ EXISTE */&#013;&#010;SELECT&#013;&#010;COUNT(*)&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TESTE;&#013;&#010;IF (TESTE IS NULL) THEN&#013;&#010;TESTE = 0;&#013;&#010;/* PEGO A CONDICAO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;CONDICAO&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCONDPAG&#013;&#010;INTO&#013;&#010;CONDICAO;&#013;&#010;if (CONDICAO IS NULL) then&#013;&#010;BEGIN&#013;&#010;CONDICAO = &apos;1/&apos;;&#013;&#010;CODCONDPAG = NULL;&#013;&#010;END&#013;&#010;/* SE JÁ EXISTIR ATUALIZO A VENDA */&#013;&#010;IF (TESTE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* EXCLUSÃO DOS ITENS DA VENDA */&#013;&#010;IF (PROCESSO = &apos;VEN&apos;) THEN&#013;&#010;BEGIN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* APAGO OS ITENS DO ORÇAMENTO */&#013;&#010;IF ((PROCESSO = &apos;ORC&apos;) OR (PROCESSO = &apos;COM&apos;) or (PROCESSO = &apos;PRO&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* ATUALIZO OS DADOS DO CABEÇALHO DO MOVIMENTO */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;CODCLIENTE        = :CODCLIENTE,&#013;&#010;CODRESPONSAVEL    = :CODRESPONSAVEL,&#013;&#010;CODVENDEDOR       = :CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER  = :CODNATUOPER,&#013;&#010;CONDICAO          = :CONDICAO,&#013;&#010;CODCONDPAG        = :CODCONDPAG,&#013;&#010;NOTA_NUMERO       = :NOTA_NUMERO,&#013;&#010;CODCOMPRA         = :CODCOMPRA&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 2;&#013;&#010;MOV_TIPO = 5;&#013;&#010;END&#013;&#010;/* ORÇAMENTO */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 0;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* COMPRA */&#013;&#010;if (PROCESSO = &apos;COM&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* PRODUÇÃO */&#013;&#010;if (PROCESSO = &apos;PRO&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 3;&#013;&#010;END&#013;&#010;/* INICIO O MOVIMENTO */&#013;&#010;INSERT INTO&#013;&#010;MOVIMENTOS (&#013;&#010;CODIGO,&#013;&#010;ES,&#013;&#010;TIPO,&#013;&#010;CODCLIENTE,&#013;&#010;DATA,&#013;&#010;VALOR_SERVICOS,&#013;&#010;VALOR_ITENS,&#013;&#010;DESCONTO,&#013;&#010;VALOR_ICMS,&#013;&#010;NOTA_FRETE,&#013;&#010;NOTA_VALOR_FRETE,&#013;&#010;NOTA_VALOR_SEGURO,&#013;&#010;NOTA_VALOR_OUTROS,&#013;&#010;NOTA_QUANTIDADE,&#013;&#010;NOTA_PESOBRUTO,&#013;&#010;NOTA_PESOLIQUIDO,&#013;&#010;STATUS,&#013;&#010;CONDICAO,&#013;&#010;ICMSSIMPLES,&#013;&#010;ICMSSIMPALIQ,&#013;&#010;ISSALIQ,&#013;&#010;NOTA_DATASAIDA,&#013;&#010;NOTA_BASEICMSSUBST,&#013;&#010;NOTA_VALORICMSSUBST,&#013;&#010;VALOR_IPI,&#013;&#010;GARANTIA,&#013;&#010;EMPRESTIMO,&#013;&#010;CODEMPRESA,&#013;&#010;VALOR_COMISSAO,&#013;&#010;ECF,&#013;&#010;OSTIPO,&#013;&#010;VALOR_IPI_PRODUTOS,&#013;&#010;AUTORIZADO,&#013;&#010;CODRESPONSAVEL,&#013;&#010;CODVENDEDOR_ABRE,&#013;&#010;CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER,&#013;&#010;PRIORIDADE,&#013;&#010;CONDICAO,&#013;&#010;CODCENTRO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;PERCCOMIS_PROD,&#013;&#010;PERCCOMIS_PECA,&#013;&#010;PERCCOMIS_SERV,&#013;&#010;CODCONDPAG,&#013;&#010;NOTA_NUMERO,&#013;&#010;CODCOMPRA)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:MOV_ES,&#013;&#010;:MOV_TIPO,&#013;&#010;:CODCLIENTE,&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;&apos;,&#013;&#010;&apos;&apos;,                    /* CONDICAO        */&#013;&#010;&apos;N&apos;,                   /* ICMSSIMPLES     */&#013;&#010;0,                     /* ICMSSIMPLESALIQ */&#013;&#010;0,                     /* ISSALIQ         */&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;0,&#013;&#010;&apos;N&apos;,                   /* ECF             */&#013;&#010;99,                    /* OSTIPO          */&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODVENDEDOR,&#013;&#010;:CODNATUOPER,&#013;&#010;1,&#013;&#010;:CONDICAO,&#013;&#010;1,                     /* CODCENTRO       */&#013;&#010;&apos;F&apos;,                   /* COMIS CALCULO   */&#013;&#010;0,                     /* COMIS PROD      */&#013;&#010;0,                     /* COMIS PECA      */&#013;&#010;0,                     /* COMIS SERV      */&#013;&#010;:CODCONDPAG,&#013;&#010;:NOTA_NUMERO,&#013;&#010;:CODCOMPRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;/* SE NÃO HOUVER MOVIMENTO, ABORTO */&#013;&#010;IF (CODMOVIMENTO = 0) THEN&#013;&#010;EXIT;&#013;&#010;/* SE DEU ERRO PASSO AOS ITENS */&#013;&#010;IF (RE_MOVIMENTO = 0) THEN&#013;&#010;BEGIN&#013;&#010;/*   V E N D A   */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I01_CODBARRA,&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I02_CODBARRA,&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I03_CODBARRA,&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;S&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_SERVICOS;&#013;&#010;IF (TEMP_SERVICOS IS NULL) THEN&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;P&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* VENDA */&#013;&#010;/*   O R C A M E N T O   */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* ORÇAMENTO */&#013;&#010;/*   C O M P R A    O U    P R O D U Ç Ã O  */&#013;&#010;if ((PROCESSO = &apos;COM&apos;) or (PROCESSO = &apos;PRO&apos;)) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* COMPRA OU PRODUÇÃO */&#013;&#010;/* ATUALIZO OS TOTAIS */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_SERVICOS = :TEMP_SERVICOS,&#013;&#010;VALOR_ITENS    = :TEMP_PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (304, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="305" SQL="/*&#013;&#010;** CAMPOS RESTANTES NA ATIVAÇÃO&#013;&#010;*/&#013;&#010;CREATE DOMAIN VSTR10 AS VARCHAR(10) CHARACTER SET NONE COLLATE NONE ;&#013;&#010;ALTER TABLE INDIVIDUAIS ADD CONTRATO VSTR10;&#013;&#010;CREATE DOMAIN VSTR20 AS VARCHAR(10) CHARACTER SET NONE COLLATE NONE ;&#013;&#010;ALTER TABLE INDIVIDUAIS ADD VOUCHER VSTR20;&#013;&#010;ALTER TABLE INDIVIDUAIS ADD TIPOATIVACAO STR01;&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ATIVACAO_GRAVAR (&#013;&#010;CODATIVACAO INTEGER,&#013;&#010;CODAPARELHO INTEGER,&#013;&#010;APARELHO VARCHAR(60),&#013;&#010;SERIE VARCHAR(30),&#013;&#010;SERIE2 VARCHAR(30),&#013;&#010;NUMERO VARCHAR(20),&#013;&#010;CODOPERADORA INTEGER,&#013;&#010;CODPLANO INTEGER,&#013;&#010;CONTRATO VARCHAR(10),&#013;&#010;VOUCHER VARCHAR(20),&#013;&#010;TIPOATIVACAO CHAR(1),&#013;&#010;REBATE CHAR(1))&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;IF (CODATIVACAO IS NOT NULL) THEN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS ID&#013;&#010;SET&#013;&#010;ID.CODINDIVIDUO = :CODAPARELHO,&#013;&#010;ID.APARELO      = :APARELHO,&#013;&#010;ID.SERIE        = :SERIE,&#013;&#010;ID.SERIE2       = :SERIE2,&#013;&#010;ID.NUMERO_FONE  = :NUMERO,&#013;&#010;ID.CODOPERADORA = :CODOPERADORA,&#013;&#010;ID.CODPLANO     = :CODPLANO,&#013;&#010;ID.REBATE       = :REBATE,&#013;&#010;ID.CONTRATO     = :CONTRATO,&#013;&#010;ID.VOUCHER      = :VOUCHER,&#013;&#010;ID.TIPOATIVACAO = :TIPOATIVACAO,&#013;&#010;ID.ATIVACAO     = &apos;S&apos;&#013;&#010;WHERE&#013;&#010;ID.CODIGO       = :CODATIVACAO;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (305, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="306" SQL="/*&#013;&#010;** PROCESSO DE PRODUÇÃO&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_ABRE (&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;CODEMPRESA INTEGER,&#013;&#010;CODCLIENTE INTEGER,&#013;&#010;CODRESPONSAVEL INTEGER,&#013;&#010;CODVENDEDOR INTEGER,&#013;&#010;CODCONDPAG INTEGER,&#013;&#010;CODNATUOPER VARCHAR(5),&#013;&#010;PROCESSO CHAR(3),&#013;&#010;PASSAGEM INTEGER,&#013;&#010;NOTA_NUMERO INTEGER,&#013;&#010;CODCOMPRA INTEGER,&#013;&#010;I01_CODBARRA VARCHAR(14),&#013;&#010;I01_QUANTIDADE NUMERIC(9,2),&#013;&#010;I01_VALOR NUMERIC(9,2),&#013;&#010;I01_DESCONTO NUMERIC(9,2),&#013;&#010;I01_ICMS NUMERIC(9,2),&#013;&#010;I01_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I01_IPI NUMERIC(9,2),&#013;&#010;I01_SITTRIBU CHAR(3),&#013;&#010;I02_CODBARRA VARCHAR(14),&#013;&#010;I02_QUANTIDADE NUMERIC(9,2),&#013;&#010;I02_VALOR NUMERIC(9,2),&#013;&#010;I02_DESCONTO NUMERIC(9,2),&#013;&#010;I02_ICMS NUMERIC(9,2),&#013;&#010;I02_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I02_IPI NUMERIC(9,2),&#013;&#010;I02_SITTRIBU CHAR(3),&#013;&#010;I03_CODBARRA VARCHAR(14),&#013;&#010;I03_QUANTIDADE NUMERIC(9,2),&#013;&#010;I03_VALOR NUMERIC(9,2),&#013;&#010;I03_DESCONTO NUMERIC(9,2),&#013;&#010;I03_ICMS NUMERIC(9,2),&#013;&#010;I03_ICMSCOMPRA NUMERIC(9,2),&#013;&#010;I03_IPI NUMERIC(9,2),&#013;&#010;I03_SITTRIBU CHAR(3))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER,&#013;&#010;RE_01 INTEGER,&#013;&#010;RE_02 INTEGER,&#013;&#010;RE_03 INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TESTE INTEGER;&#013;&#010;DECLARE VARIABLE CONDICAO VARCHAR(40);&#013;&#010;DECLARE VARIABLE TEMP_SERVICOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE TEMP_PRODUTOS NUMERIC(9,2);&#013;&#010;DECLARE VARIABLE MOV_ES INTEGER;&#013;&#010;DECLARE VARIABLE MOV_TIPO INTEGER;&#013;&#010;DECLARE VARIABLE TEMP_CODIGO INTEGER;&#013;&#010;BEGIN&#013;&#010;/* SE FOR NULO, É VENDA */&#013;&#010;if (PROCESSO IS NULL) then&#013;&#010;PROCESSO = &apos;VEN&apos;;&#013;&#010;/* ZERAMENTO DOS RETORNOS */&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;RE_01 = 0;&#013;&#010;RE_02 = 0;&#013;&#010;RE_03 = 0;&#013;&#010;IF (I01_QUANTIDADE IS NULL) THEN&#013;&#010;I01_QUANTIDADE = 0;&#013;&#010;IF (I02_QUANTIDADE IS NULL) THEN&#013;&#010;I02_QUANTIDADE = 0;&#013;&#010;IF (I03_QUANTIDADE IS NULL) THEN&#013;&#010;I03_QUANTIDADE = 0;&#013;&#010;IF (I01_SITTRIBU IS NULL) THEN&#013;&#010;I01_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I02_SITTRIBU IS NULL) THEN&#013;&#010;I02_SITTRIBU = &apos;0.0&apos;;&#013;&#010;IF (I03_SITTRIBU IS NULL) THEN&#013;&#010;I03_SITTRIBU = &apos;0.0&apos;;&#013;&#010;/* ABRO O MOVIMENTO - PRIMEIRA PASSAGEM */&#013;&#010;IF ((CODMOVIMENTO &gt; 0) AND (PASSAGEM = 1)) THEN&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE A VENDA JÁ EXISTE */&#013;&#010;SELECT&#013;&#010;COUNT(*)&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TESTE;&#013;&#010;IF (TESTE IS NULL) THEN&#013;&#010;TESTE = 0;&#013;&#010;/* PEGO A CONDICAO DE PAGAMENTO */&#013;&#010;SELECT&#013;&#010;CONDICAO&#013;&#010;FROM&#013;&#010;CONDPAG&#013;&#010;WHERE&#013;&#010;CODIGO = :CODCONDPAG&#013;&#010;INTO&#013;&#010;CONDICAO;&#013;&#010;if (CONDICAO IS NULL) then&#013;&#010;BEGIN&#013;&#010;CONDICAO = &apos;1/&apos;;&#013;&#010;CODCONDPAG = NULL;&#013;&#010;END&#013;&#010;/* SE JÁ EXISTIR ATUALIZO A VENDA */&#013;&#010;IF (TESTE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* EXCLUSÃO DOS ITENS DA VENDA */&#013;&#010;IF (PROCESSO = &apos;VEN&apos;) THEN&#013;&#010;BEGIN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;VENDIDO = &apos;N&apos;&#013;&#010;WHERE&#013;&#010;CODMOVSAIDA = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* APAGO OS ITENS DO ORÇAMENTO */&#013;&#010;IF ((PROCESSO = &apos;ORC&apos;) OR (PROCESSO = &apos;COM&apos;) or (PROCESSO = &apos;PRO&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DELETE FROM&#013;&#010;TEMPITENS&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;/* ATUALIZO OS DADOS DO CABEÇALHO DO MOVIMENTO */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;CODCLIENTE        = :CODCLIENTE,&#013;&#010;CODRESPONSAVEL    = :CODRESPONSAVEL,&#013;&#010;CODVENDEDOR       = :CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER  = :CODNATUOPER,&#013;&#010;CONDICAO          = :CONDICAO,&#013;&#010;CODCONDPAG        = :CODCONDPAG,&#013;&#010;NOTA_NUMERO       = :NOTA_NUMERO,&#013;&#010;CODCOMPRA         = :CODCOMPRA&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;if (PROCESSO = &apos;VEN&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 2;&#013;&#010;MOV_TIPO = 5;&#013;&#010;END&#013;&#010;/* ORÇAMENTO */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 0;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* COMPRA */&#013;&#010;if (PROCESSO = &apos;COM&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 1;&#013;&#010;END&#013;&#010;/* PRODUÇÃO COMPRA */&#013;&#010;if (PROCESSO = &apos;PRC&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 1;&#013;&#010;MOV_TIPO = 4;&#013;&#010;END&#013;&#010;/* PRODUÇÃO VENDA */&#013;&#010;if (PROCESSO = &apos;PRV&apos;) then&#013;&#010;BEGIN&#013;&#010;MOV_ES = 2;&#013;&#010;MOV_TIPO = 4;&#013;&#010;END&#013;&#010;/* INICIO O MOVIMENTO */&#013;&#010;INSERT INTO&#013;&#010;MOVIMENTOS (&#013;&#010;CODIGO,&#013;&#010;ES,&#013;&#010;TIPO,&#013;&#010;CODCLIENTE,&#013;&#010;DATA,&#013;&#010;VALOR_SERVICOS,&#013;&#010;VALOR_ITENS,&#013;&#010;DESCONTO,&#013;&#010;VALOR_ICMS,&#013;&#010;NOTA_FRETE,&#013;&#010;NOTA_VALOR_FRETE,&#013;&#010;NOTA_VALOR_SEGURO,&#013;&#010;NOTA_VALOR_OUTROS,&#013;&#010;NOTA_QUANTIDADE,&#013;&#010;NOTA_PESOBRUTO,&#013;&#010;NOTA_PESOLIQUIDO,&#013;&#010;STATUS,&#013;&#010;CONDICAO,&#013;&#010;ICMSSIMPLES,&#013;&#010;ICMSSIMPALIQ,&#013;&#010;ISSALIQ,&#013;&#010;NOTA_DATASAIDA,&#013;&#010;NOTA_BASEICMSSUBST,&#013;&#010;NOTA_VALORICMSSUBST,&#013;&#010;VALOR_IPI,&#013;&#010;GARANTIA,&#013;&#010;EMPRESTIMO,&#013;&#010;CODEMPRESA,&#013;&#010;VALOR_COMISSAO,&#013;&#010;ECF,&#013;&#010;OSTIPO,&#013;&#010;VALOR_IPI_PRODUTOS,&#013;&#010;AUTORIZADO,&#013;&#010;CODRESPONSAVEL,&#013;&#010;CODVENDEDOR_ABRE,&#013;&#010;CODVENDEDOR,&#013;&#010;NOTA_CODNATUOPER,&#013;&#010;PRIORIDADE,&#013;&#010;CONDICAO,&#013;&#010;CODCENTRO,&#013;&#010;PERCCOMIS_CALCULO,&#013;&#010;PERCCOMIS_PROD,&#013;&#010;PERCCOMIS_PECA,&#013;&#010;PERCCOMIS_SERV,&#013;&#010;CODCONDPAG,&#013;&#010;NOTA_NUMERO,&#013;&#010;CODCOMPRA)&#013;&#010;VALUES (&#013;&#010;:CODMOVIMENTO,&#013;&#010;:MOV_ES,&#013;&#010;:MOV_TIPO,&#013;&#010;:CODCLIENTE,&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;&apos;,&#013;&#010;&apos;&apos;,                    /* CONDICAO        */&#013;&#010;&apos;N&apos;,                   /* ICMSSIMPLES     */&#013;&#010;0,                     /* ICMSSIMPLESALIQ */&#013;&#010;0,                     /* ISSALIQ         */&#013;&#010;CURRENT_TIMESTAMP,&#013;&#010;0,&#013;&#010;0,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODEMPRESA,&#013;&#010;0,&#013;&#010;&apos;N&apos;,                   /* ECF             */&#013;&#010;99,                    /* OSTIPO          */&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODRESPONSAVEL,&#013;&#010;:CODVENDEDOR,&#013;&#010;:CODNATUOPER,&#013;&#010;1,&#013;&#010;:CONDICAO,&#013;&#010;1,                     /* CODCENTRO       */&#013;&#010;&apos;F&apos;,                   /* COMIS CALCULO   */&#013;&#010;0,                     /* COMIS PROD      */&#013;&#010;0,                     /* COMIS PECA      */&#013;&#010;0,                     /* COMIS SERV      */&#013;&#010;:CODCONDPAG,&#013;&#010;:NOTA_NUMERO,&#013;&#010;:CODCOMPRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;/* SE NÃO HOUVER MOVIMENTO, ABORTO */&#013;&#010;IF (CODMOVIMENTO = 0) THEN&#013;&#010;EXIT;&#013;&#010;/* SE DEU ERRO PASSO AOS ITENS */&#013;&#010;IF (RE_MOVIMENTO = 0) THEN&#013;&#010;BEGIN&#013;&#010;/*   V E N D A   */&#013;&#010;if ((PROCESSO = &apos;VEN&apos;) OR (PROCESSO = &apos;PRV&apos;)) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I01_CODBARRA,&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I02_CODBARRA,&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* VENDO O ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;ITVENDA_GRAVA(&#013;&#010;:I03_CODBARRA,&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_ICMS,&#013;&#010;:CODMOVIMENTO);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;S&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_SERVICOS;&#013;&#010;IF (TEMP_SERVICOS IS NULL) THEN&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(INDIVIDUAIS.VALOR_PAGO)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS INDIVIDUAIS&#013;&#010;WHERE&#013;&#010;INDIVIDUAIS.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;INDIVIDUAIS.PS          = &apos;P&apos;           AND&#013;&#010;INDIVIDUAIS.VENDIDO     = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* VENDA */&#013;&#010;/*   O R C A M E N T O   */&#013;&#010;if (PROCESSO = &apos;ORC&apos;) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* ORÇAMENTO */&#013;&#010;/*   C O M P R A    O U    P R O D U Ç Ã O  */&#013;&#010;if ((PROCESSO = &apos;COM&apos;) or (PROCESSO = &apos;PRC&apos;)) then&#013;&#010;BEGIN&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 01                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_01 = 0;&#013;&#010;IF (I01_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I01_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I01_QUANTIDADE,&#013;&#010;:I01_VALOR,&#013;&#010;:I01_DESCONTO,&#013;&#010;:I01_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I01_ICMSCOMPRA,&#013;&#010;:I01_ICMS,&#013;&#010;:I01_IPI,&#013;&#010;:I01_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_01 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 02                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_02 = 0;&#013;&#010;IF (I02_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I02_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I02_QUANTIDADE,&#013;&#010;:I02_VALOR,&#013;&#010;:I02_DESCONTO,&#013;&#010;:I02_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I02_ICMSCOMPRA,&#013;&#010;:I02_ICMS,&#013;&#010;:I02_IPI,&#013;&#010;:I02_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_02 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* ITEM 03                                            */&#013;&#010;/******************************************************/&#013;&#010;RE_03 = 0;&#013;&#010;IF (I03_QUANTIDADE &gt; 0) THEN&#013;&#010;BEGIN&#013;&#010;/* CODIGO DO ITEM */&#013;&#010;EXECUTE PROCEDURE&#013;&#010;SEQ_OBTER(&apos;TEMPITENS&apos;)&#013;&#010;RETURNING_VALUES&#013;&#010;:TEMP_CODIGO;&#013;&#010;/* VENDO O ITEM */&#013;&#010;INSERT INTO&#013;&#010;TEMPITENS(&#013;&#010;CODIGO,&#013;&#010;CODMOVIMENTO,&#013;&#010;CODPRODUTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_UNITARIO,&#013;&#010;DESCONTO,&#013;&#010;SITTRIBU,&#013;&#010;MARGEM,&#013;&#010;REAJUSTAR,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMSCOMPRA,&#013;&#010;ICMSVENDA,&#013;&#010;IPI,&#013;&#010;BARRA)&#013;&#010;VALUES(&#013;&#010;:TEMP_CODIGO,&#013;&#010;:CODMOVIMENTO,&#013;&#010;CAST(UDF_COPY(:I03_CODBARRA, 4, 5) AS INTEGER),&#013;&#010;:I03_QUANTIDADE,&#013;&#010;:I03_VALOR,&#013;&#010;:I03_DESCONTO,&#013;&#010;:I03_SITTRIBU,&#013;&#010;0,&#013;&#010;&apos;N&apos;,&#013;&#010;0,&#013;&#010;:I03_ICMSCOMPRA,&#013;&#010;:I03_ICMS,&#013;&#010;:I03_IPI,&#013;&#010;:I03_CODBARRA);&#013;&#010;/* SE DER ERRO */&#013;&#010;WHEN ANY DO RE_03 = 1;&#013;&#010;END&#013;&#010;/******************************************************/&#013;&#010;/* TOTAIS                                             */&#013;&#010;/******************************************************/&#013;&#010;TEMP_SERVICOS = 0;&#013;&#010;SELECT&#013;&#010;SUM(TEMPITENS.VALOR_TOTAL)&#013;&#010;FROM&#013;&#010;TEMPITENS TEMPITENS&#013;&#010;WHERE&#013;&#010;TEMPITENS.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:TEMP_PRODUTOS;&#013;&#010;IF (TEMP_PRODUTOS IS NULL) THEN&#013;&#010;TEMP_PRODUTOS = 0;&#013;&#010;END /* COMPRA OU PRODUÇÃO */&#013;&#010;/* ATUALIZO OS TOTAIS */&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;VALOR_SERVICOS = :TEMP_SERVICOS,&#013;&#010;VALOR_ITENS    = :TEMP_PRODUTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;END&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (306, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="307" SQL="/*&#013;&#010;** PROCESSO DE PRODUÇÃO II&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER STATUS_INSERT&#013;&#010;ACTIVE BEFORE INSERT POSITION 0&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;IF (NEW.TIPO = 1) THEN&#013;&#010;BEGIN&#013;&#010;IF (NEW.ES = 0) THEN&#013;&#010;NEW.STATUS = &apos;ORC ABERTO&apos;;&#013;&#010;IF (NEW.ES = 1) THEN&#013;&#010;NEW.STATUS = &apos;COMPRA&apos;;&#013;&#010;END&#013;&#010;IF (NEW.TIPO = 2) THEN NEW.STATUS = &apos;OS ABERTA&apos;;&#013;&#010;IF (NEW.TIPO = 3) THEN NEW.STATUS = &apos;OS FECHADA&apos;;&#013;&#010;IF (NEW.TIPO = 4) THEN&#013;&#010;if (NEW.CODCOMPRA IS NULL) then&#013;&#010;NEW.STATUS = &apos;PRE PRODUÇÃO&apos;;&#013;&#010;ELSE&#013;&#010;NEW.STATUS = &apos;PRODUÇÃO&apos;;&#013;&#010;IF (NEW.TIPO = 5) THEN NEW.STATUS = &apos;VENDA ABERTA&apos;;&#013;&#010;IF (NEW.TIPO = 6) THEN NEW.STATUS = &apos;VENDA FECHADA&apos;;&#013;&#010;IF (NEW.TIPO = 7) THEN NEW.STATUS = &apos;N/F&apos;;&#013;&#010;IF (NEW.TIPO = 8) THEN NEW.STATUS = &apos;REMESSA&apos;;&#013;&#010;IF (NEW.TIPO = 9) THEN NEW.STATUS = &apos;ESTORNADO&apos;;&#013;&#010;/* VERIFICO O NUMERADOR */&#013;&#010;EXECUTE PROCEDURE VALIDA_NUMERADOR(NEW.NUMERADOR, NEW.CODCLIENTE,&#013;&#010;NEW.CODMARCA, NEW.CODMODELO, NEW.SERIE);&#013;&#010;/* BASES DE CALCULO DO ICMS E ISS */&#013;&#010;SELECT&#013;&#010;ALIQUOTA_ISS,&#013;&#010;ALIQUOTA_ICMSSIMPLES,&#013;&#010;ICMSSIMPLES&#013;&#010;FROM&#013;&#010;SISCONFIG&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.CODEMPRESA&#013;&#010;INTO&#013;&#010;NEW.ISSALIQ,&#013;&#010;NEW.ICMSSIMPALIQ,&#013;&#010;NEW.ICMSSIMPLES;&#013;&#010;/* CONFIGURAÇÕES DA NATUREZA DE OPERAÇÃO */&#013;&#010;SELECT&#013;&#010;VENDA,&#013;&#010;ESTOQUE,&#013;&#010;ICMS,&#013;&#010;IPI&#013;&#010;FROM&#013;&#010;NATUOPER&#013;&#010;WHERE&#013;&#010;CODIGO = NEW.NOTA_CODNATUOPER&#013;&#010;INTO&#013;&#010;NEW.NO_VENDA,&#013;&#010;NEW.NO_ESTOQUE,&#013;&#010;NEW.NO_ICMS,&#013;&#010;NEW.NO_IPI;&#013;&#010;/* INICIALIZAÇÃO DO RETORNO */&#013;&#010;NEW.RETORNO = &apos;N&apos;;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER STATUS_UPDATE&#013;&#010;ACTIVE BEFORE UPDATE POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE PRIMEIRO TIMESTAMP;&#013;&#010;DECLARE VARIABLE ULTIMO TIMESTAMP;&#013;&#010;DECLARE VARIABLE TOTAL DOUBLE PRECISION;&#013;&#010;DECLARE VARIABLE TDATAINI TIMESTAMP;&#013;&#010;DECLARE VARIABLE TDATAFIM TIMESTAMP;&#013;&#010;BEGIN&#013;&#010;/* DATA DA ENTREGA */&#013;&#010;IF ((NEW.QUEM_RECEBEU IS NOT NULL) AND (OLD.QUEM_RECEBEU IS NULL)) THEN&#013;&#010;NEW.DATA_ENTREGA = CURRENT_TIMESTAMP;&#013;&#010;/* DATA DA AUTORIZAÇÃO */&#013;&#010;IF ((NEW.QUEM_AUTORIZOU IS NOT NULL) AND (OLD.QUEM_AUTORIZOU IS NULL)) THEN&#013;&#010;NEW.DATA_AUTORIZADO = CURRENT_TIMESTAMP;&#013;&#010;IF (NEW.TIPO = 1) THEN&#013;&#010;BEGIN&#013;&#010;IF (NEW.ES = 0) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;ORC ABERTO&apos;;&#013;&#010;IF (NEW.AUTORIZADO = &apos;S&apos;) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;ORC AUTORIZADO&apos;;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF (NEW.DATA_AUTORIZADO IS NOT NULL) THEN&#013;&#010;NEW.STATUS = &apos;ORC NAO AUTO&apos;;&#013;&#010;IF ((NEW.RETORNO = &apos;S&apos;) AND (NEW.DATA_RETORNO IS NOT NULL)) THEN&#013;&#010;NEW.STATUS = &apos;ORC RETORNAR&apos;;&#013;&#010;END&#013;&#010;END&#013;&#010;IF (NEW.ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;if (NEW.FECHADO = &apos;S&apos;) then&#013;&#010;NEW.STATUS = &apos;COMPRA&apos;;&#013;&#010;ELSE&#013;&#010;NEW.STATUS = &apos;PED COMPRA&apos;;&#013;&#010;END&#013;&#010;END&#013;&#010;IF (NEW.TIPO = 2) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;OS ABERTA&apos;;&#013;&#010;/* VERIFICO SE O TECNICO JÁ INICIOU */&#013;&#010;SELECT FIRST 1&#013;&#010;DATAINI,&#013;&#010;DATAFIM&#013;&#010;FROM&#013;&#010;OS_VENDER&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = NEW.CODIGO&#013;&#010;INTO&#013;&#010;:TDATAINI,&#013;&#010;:TDATAFIM;&#013;&#010;IF (TDATAINI IS NOT NULL) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;OS INICIADA&apos;;&#013;&#010;IF (NEW.DATA_AUTORIZADO IS NOT NULL) THEN&#013;&#010;BEGIN&#013;&#010;IF (NEW.AUTORIZADO = &apos;N&apos;) THEN&#013;&#010;NEW.STATUS = &apos;OS NAO AUTO&apos;;&#013;&#010;ELSE&#013;&#010;IF (TDATAFIM IS NULL) THEN&#013;&#010;NEW.STATUS = &apos;OS AUTORIZADA&apos;;&#013;&#010;ELSE&#013;&#010;NEW.STATUS = &apos;OS CONCLUIDA&apos;;&#013;&#010;END&#013;&#010;IF (NEW.DATA_ENTREGA IS NOT NULL) THEN&#013;&#010;NEW.STATUS = &apos;OS ENTREGUE&apos;;&#013;&#010;END&#013;&#010;IF (NEW.TIPO = 3) THEN NEW.STATUS = &apos;OS FECHADA&apos;;&#013;&#010;IF (NEW.TIPO = 4) THEN&#013;&#010;if (NEW.CODCOMPRA IS NULL) then&#013;&#010;NEW.STATUS = &apos;PRE PRODUÇÃO&apos;;&#013;&#010;ELSE&#013;&#010;NEW.STATUS = &apos;PRODUÇÃO&apos;;&#013;&#010;IF (NEW.TIPO = 5) THEN NEW.STATUS = &apos;VENDA ABERTA&apos;;&#013;&#010;IF (NEW.TIPO = 6) THEN NEW.STATUS = &apos;VENDA FECHADA&apos;;&#013;&#010;IF (NEW.TIPO = 7) THEN NEW.STATUS = &apos;N/F&apos;;&#013;&#010;IF (NEW.TIPO = 8) THEN NEW.STATUS = &apos;REMESSA&apos;;&#013;&#010;IF (NEW.TIPO = 9) THEN NEW.STATUS = &apos;ESTORNO&apos;;&#013;&#010;END&#013;&#010;/* VERIFICO O NUMERADOR */&#013;&#010;EXECUTE PROCEDURE VALIDA_NUMERADOR(NEW.NUMERADOR, NEW.CODCLIENTE,&#013;&#010;NEW.CODMARCA, NEW.CODMODELO, NEW.SERIE);&#013;&#010;/* calcular impostos */&#013;&#010;IF ((NEW.ES = 2) AND&#013;&#010;(NEW.TIPO IN (3, 6)) AND&#013;&#010;(OLD.TIPO IN (2, 5))) THEN&#013;&#010;BEGIN&#013;&#010;/* TOTAL ICMS */&#013;&#010;EXECUTE PROCEDURE CALC_ICMS(NEW.CODIGO)&#013;&#010;RETURNING_VALUES NEW.VALOR_ICMS, NEW.VALOR_IPI_PRODUTOS;&#013;&#010;IF (NEW.NO_ICMS = &apos;N&apos;) THEN&#013;&#010;NEW.VALOR_ICMS = 0;&#013;&#010;IF (NEW.NO_IPI = &apos;N&apos;) THEN&#013;&#010;NEW.VALOR_IPI_PRODUTOS = 0;&#013;&#010;END&#013;&#010;/* FECHOU A VENDA */&#013;&#010;IF ((OLD.TIPO IN (2, 5)) AND (NEW.TIPO IN (3, 6))) THEN&#013;&#010;BEGIN&#013;&#010;/* USUÁRIO, DATA E HORA DO FECHAMENTO */&#013;&#010;NEW.DATAFECHAMENTO = &apos;NOW&apos;;&#013;&#010;NEW.FECHADO = &apos;S&apos;;&#013;&#010;IF ((UDF_TRIM(NEW.USUARIOFECHAMENTO) = &apos;&apos;) OR (NEW.USUARIOFECHAMENTO IS NULL)) THEN&#013;&#010;NEW.USUARIOFECHAMENTO = USER;&#013;&#010;/* VINCULAR SERIAL NA VENDA FECHADA */&#013;&#010;IF (NEW.TIPO = 6) THEN&#013;&#010;EXECUTE PROCEDURE VINCULO_SERIE NEW.CODIGO&#013;&#010;RETURNING_VALUES NEW.SERIE;&#013;&#010;/* TEMPOS DE ATENDIMENTO, SE FOR OS */&#013;&#010;IF (NEW.TIPO = 3) THEN&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;MIN(DATAINI),&#013;&#010;MAX(DATAFIM),&#013;&#010;SUM(THORAS)&#013;&#010;FROM&#013;&#010;OS_VENDER&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = NEW.CODIGO&#013;&#010;INTO&#013;&#010;:PRIMEIRO,&#013;&#010;:ULTIMO,&#013;&#010;:TOTAL;&#013;&#010;NEW.TEMPO_CHEGADA    = CAST(UDF_MINUTESBETWEEN(NEW.DATA, PRIMEIRO) AS DOUBLE PRECISION) / 60;&#013;&#010;NEW.TEMPO_CONCLUSAO  = CAST(UDF_MINUTESBETWEEN(NEW.DATA, ULTIMO) AS DOUBLE PRECISION) / 60;&#013;&#010;NEW.TEMPO_LANCAMENTO = CAST(UDF_MINUTESBETWEEN(ULTIMO, NEW.DATAFECHAMENTO) AS DOUBLE PRECISION) / 60;&#013;&#010;NEW.TEMPO_TECNICOS = TOTAL;&#013;&#010;NEW.DATAINICIO  = PRIMEIRO;&#013;&#010;NEW.DATATERMINO = ULTIMO;&#013;&#010;IF (PRIMEIRO &gt; NEW.DATAPREVISAO) THEN&#013;&#010;NEW.TEMPO_FORADOPRAZO = CAST(UDF_MINUTESBETWEEN(NEW.DATAPREVISAO, PRIMEIRO) AS DOUBLE PRECISION) / 60;&#013;&#010;ELSE&#013;&#010;NEW.TEMPO_FORADOPRAZO = 0;&#013;&#010;END&#013;&#010;NEW.TEMPO_CICLO = CAST(UDF_MINUTESBETWEEN(NEW.DATA, NEW.DATAFECHAMENTO) AS DOUBLE PRECISION) / 60;&#013;&#010;END&#013;&#010;/* RATEIO DOS CUSTOS DE COMPRA */&#013;&#010;IF ((NEW.ES = 1) AND (NEW.TIPO = 1)) THEN&#013;&#010;EXECUTE PROCEDURE RATEIO_CUSTOS (&#013;&#010;NEW.CODIGO,&#013;&#010;NEW.VALOR_PRODUTOS,&#013;&#010;NEW.VALOR_RATEIO_CUSTO);&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (307, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="308" SQL="/*&#013;&#010;** DADOS DA ATIVAÇÃO AO CONTINUAR VENDA&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTASER (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(40),&#013;&#010;DESCRICAO2 VARCHAR(60),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40),&#013;&#010;ATIVACAO CHAR(1))&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;UDF_LEFT(PO.DESCRICAO, 40),&#013;&#010;ID.SERIE,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;ID.QUANTIDADE,&#013;&#010;ID.VALOR_PAGO,&#013;&#010;ID.VALOR_ICMS,&#013;&#010;TI.SITTRIBU,&#013;&#010;PO.ATIVACAO&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = ID.CODPRODUTO )&#013;&#010;LEFT JOIN TEMPITENS TI ON&#013;&#010;( TI.CODMOVIMENTO = ID.CODMOVENTRADA AND&#013;&#010;TI.CODPRODUTO   = ID.CODPRODUTO    AND&#013;&#010;TI.CODIGO       = ID.CODITEM )&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.PS = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:ATIVACAO&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = DESCRICAO1 || &apos; &apos; || SERIE;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAITENS (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40),&#013;&#010;ATIVACAO CHAR(1))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ESMOV INTEGER;&#013;&#010;DECLARE VARIABLE TIPOMOV INTEGER;&#013;&#010;DECLARE VARIABLE SERIE2 VARCHAR(20);&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ESMOV,&#013;&#010;:TIPOMOV;&#013;&#010;IF ((TIPOMOV = 9) OR ((ESMOV = 0) AND (TIPOMOV = 1))) THEN&#013;&#010;BEGIN&#013;&#010;/* ITENS ESTORNADOS OU DE ORÇAMENTO */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;TI.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.DESCRICAO,&#013;&#010;TI.SERIE,&#013;&#010;TI.SERIE2,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSVENDA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA,&#013;&#010;TI.SITTRIBU,&#013;&#010;PO.UNIDADE,&#013;&#010;PO.ATIVACAO,&#013;&#010;(TI.VALOR_UNITARIO - TI.DESCONTO),&#013;&#010;TI.IPI&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = TI.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:ATIVACAO,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* TRATAMENTO DA SERIE */&#013;&#010;IF ((UDF_TRIM(SERIE) &lt;&gt; &apos;N/F&apos;) AND (UDF_TRIM(SERIE) &gt; &apos;&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE);&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE2);&#013;&#010;END ELSE&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1);&#013;&#010;END&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;UNIDADE,&#013;&#010;VALOR_ITEM,&#013;&#010;IPI,&#013;&#010;LINHA,&#013;&#010;OPERADORA,&#013;&#010;PLANO,&#013;&#010;&apos;N&apos;&#013;&#010;FROM&#013;&#010;REL_NOTAPRO(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI,&#013;&#010;:LINHA,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO,&#013;&#010;:ATIVACAO&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;/* SERVIÇOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;&apos;SE&apos;,&#013;&#010;VALOR_ITEM,&#013;&#010;0 AS IPI,&#013;&#010;LINHA,&#013;&#010;OPERADORA,&#013;&#010;PLANO,&#013;&#010;ATIVACAO&#013;&#010;FROM&#013;&#010;REL_NOTASER(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI,&#013;&#010;:LINHA,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO,&#013;&#010;:ATIVACAO&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (308, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="309" SQL="/*&#013;&#010;** FECHAMENTO / SEM FECHAMENTO COM OBSERVAÇÕES&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_FECHA (&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;USUARIOFECHAMENTO VARCHAR(30),&#013;&#010;OBSERVACOES VARCHAR(2048))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TIPO INTEGER;&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;BEGIN&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;IF (USUARIOFECHAMENTO IS NULL) THEN&#013;&#010;USUARIOFECHAMENTO = &apos;&apos;;&#013;&#010;IF (USUARIOFECHAMENTO = &apos;&apos;) THEN&#013;&#010;BEGIN&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;OBSERVACOES = :OBSERVACOES&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* LEIO O TIPO ATUAL */&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:TIPO;&#013;&#010;IF (TIPO IN (1, 2, 5)) THEN&#013;&#010;BEGIN&#013;&#010;IF (ES = 2) THEN&#013;&#010;BEGIN&#013;&#010;IF (TIPO = 2) THEN&#013;&#010;TIPO = 3;&#013;&#010;ELSE&#013;&#010;TIPO = 6;&#013;&#010;END&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;TIPO = :TIPO,&#013;&#010;USUARIOFECHAMENTO = :USUARIOFECHAMENTO,&#013;&#010;DATAFECHAMENTO = CURRENT_TIMESTAMP,&#013;&#010;OBSERVACOES = :OBSERVACOES,&#013;&#010;FECHADO = &apos;S&apos;&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (309, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="310" SQL="/*&#013;&#010;** ATIVAÇÃO - NOVOS CAMPOS&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ATIVACAO_LER (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODATIVACAO INTEGER,&#013;&#010;CODAPARELHO INTEGER,&#013;&#010;APARELHO VARCHAR(60),&#013;&#010;SERIE VARCHAR(30),&#013;&#010;SERIE2 VARCHAR(30),&#013;&#010;NUMERO VARCHAR(20),&#013;&#010;CODOPERADORA INTEGER,&#013;&#010;CODPLANO INTEGER,&#013;&#010;VALOR1 NUMERIC(9,2),&#013;&#010;VALOR2 NUMERIC(9,2),&#013;&#010;REBATE CHAR(1),&#013;&#010;CONTRATO VARCHAR(10),&#013;&#010;VOUCHER VARCHAR(20),&#013;&#010;TIPO CHAR(1))&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;/* APARELHO */&#013;&#010;SELECT FIRST 1&#013;&#010;ID.CODIGO,&#013;&#010;PO.CODIGO,&#013;&#010;ID.APARELO,&#013;&#010;PO.PRECOVENDA,&#013;&#010;ID.VALOR_PAGO,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.NUMERO_FONE,&#013;&#010;ID.CODOPERADORA,&#013;&#010;ID.CODPLANO,&#013;&#010;ID.CONTRATO,&#013;&#010;ID.VOUCHER,&#013;&#010;ID.TIPOATIVACAO&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = ID.CODPRODUTO)&#013;&#010;JOIN PRODUTOS SE ON&#013;&#010;(SE.CODIGO = PO.CODSERVICO)&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.PS = &apos;P&apos; AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.UNICO = 1 AND&#013;&#010;SE.ATIVACAO = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:CODATIVACAO,&#013;&#010;:CODAPARELHO,&#013;&#010;:APARELHO,&#013;&#010;:VALOR1,&#013;&#010;:VALOR2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:NUMERO,&#013;&#010;:CODOPERADORA,&#013;&#010;:CODPLANO,&#013;&#010;:CONTRATO,&#013;&#010;:VOUCHER,&#013;&#010;:TIPO;&#013;&#010;IF (VALOR1 &lt;&gt; VALOR2) THEN&#013;&#010;REBATE = &apos;S&apos;;&#013;&#010;ELSE&#013;&#010;REBATE = &apos;N&apos;;&#013;&#010;IF (CODATIVACAO IS NOT NULL) THEN&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ATIVACAO_GRAVAR (&#013;&#010;CODATIVACAO INTEGER,&#013;&#010;CODAPARELHO INTEGER,&#013;&#010;APARELHO VARCHAR(60),&#013;&#010;SERIE VARCHAR(30),&#013;&#010;SERIE2 VARCHAR(30),&#013;&#010;NUMERO VARCHAR(20),&#013;&#010;CODOPERADORA INTEGER,&#013;&#010;CODPLANO INTEGER,&#013;&#010;CONTRATO VARCHAR(10),&#013;&#010;VOUCHER VARCHAR(20),&#013;&#010;TIPOATIVACAO CHAR(1),&#013;&#010;REBATE CHAR(1))&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;IF (CODATIVACAO IS NOT NULL) THEN&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS ID&#013;&#010;SET&#013;&#010;ID.CODINDIVIDUO = :CODAPARELHO,&#013;&#010;ID.APARELO      = :APARELHO,&#013;&#010;ID.SERIE        = :SERIE,&#013;&#010;ID.SERIE2       = :SERIE2,&#013;&#010;ID.NUMERO_FONE  = :NUMERO,&#013;&#010;ID.CODOPERADORA = :CODOPERADORA,&#013;&#010;ID.CODPLANO     = :CODPLANO,&#013;&#010;ID.REBATE       = :REBATE,&#013;&#010;ID.CONTRATO     = :CONTRATO,&#013;&#010;ID.VOUCHER      = :VOUCHER,&#013;&#010;ID.TIPOATIVACAO = :TIPOATIVACAO,&#013;&#010;ID.ATIVACAO     = &apos;S&apos;&#013;&#010;WHERE&#013;&#010;ID.CODIGO       = :CODATIVACAO;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE ATIVACAO_LER (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODATIVACAO INTEGER,&#013;&#010;CODAPARELHO INTEGER,&#013;&#010;APARELHO VARCHAR(60),&#013;&#010;SERIE VARCHAR(30),&#013;&#010;SERIE2 VARCHAR(30),&#013;&#010;NUMERO VARCHAR(20),&#013;&#010;CODOPERADORA INTEGER,&#013;&#010;CODPLANO INTEGER,&#013;&#010;VALOR1 NUMERIC(9,2),&#013;&#010;VALOR2 NUMERIC(9,2),&#013;&#010;REBATE CHAR(1),&#013;&#010;CONTRATO VARCHAR(10),&#013;&#010;VOUCHER VARCHAR(20),&#013;&#010;TIPOATIVACAO CHAR(1))&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;/* APARELHO */&#013;&#010;SELECT FIRST 1&#013;&#010;ID.CODIGO,&#013;&#010;PO.CODIGO,&#013;&#010;ID.aparelo,&#013;&#010;PO.PRECOVENDA,&#013;&#010;ID.VALOR_PAGO,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.NUMERO_FONE,&#013;&#010;ID.CODOPERADORA,&#013;&#010;ID.CODPLANO,&#013;&#010;ID.contrato,&#013;&#010;ID.voucher,&#013;&#010;ID.tipoativacao&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = ID.CODPRODUTO)&#013;&#010;JOIN PRODUTOS SE ON&#013;&#010;(SE.CODIGO = PO.CODSERVICO)&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.PS = &apos;P&apos; AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.UNICO = 1 AND&#013;&#010;SE.ATIVACAO = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:CODATIVACAO,&#013;&#010;:CODAPARELHO,&#013;&#010;:APARELHO,&#013;&#010;:VALOR1,&#013;&#010;:VALOR2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:NUMERO,&#013;&#010;:CODOPERADORA,&#013;&#010;:CODPLANO,&#013;&#010;:CONTRATO,&#013;&#010;:VOUCHER,&#013;&#010;:TIPOATIVACAO;&#013;&#010;IF (VALOR1 &lt;&gt; VALOR2) THEN&#013;&#010;REBATE = &apos;S&apos;;&#013;&#010;ELSE&#013;&#010;REBATE = &apos;N&apos;;&#013;&#010;IF (CODATIVACAO IS NOT NULL) THEN&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (310, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="311" SQL="/*&#013;&#010;** ATIVAÇÃO - NOVOS CAMPOS II&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAPRO (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;SERIE2 VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE XIPI CHAR(1);&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE EH COMPRA OU VENDA */&#013;&#010;SELECT&#013;&#010;ES&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ES;&#013;&#010;IF (ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;/* COMPRA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;&apos;N/F&apos;,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSCOMPRA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = TI.CODPRODUTO )&#013;&#010;WHERE&#013;&#010;TI.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:UNIDADE,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:SITTRIBU,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;IF (SERIE &lt;&gt; &apos;N/F&apos;) THEN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || SERIE;&#013;&#010;ELSE&#013;&#010;DESCRICAO2 = DESCRICAO1;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.IPI,&#013;&#010;SUM(ID.QUANTIDADE),&#013;&#010;SUM(ID.VALOR_PAGO),&#013;&#010;SUM(ID.VALOR_ICMS)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = ID.CODPRODUTO )&#013;&#010;LEFT JOIN TEMPITENS TI ON&#013;&#010;( TI.CODMOVIMENTO = ID.CODMOVENTRADA AND&#013;&#010;TI.CODPRODUTO   = ID.CODPRODUTO    AND&#013;&#010;TI.CODIGO       = ID.CODITEM )&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.PS = &apos;P&apos;&#013;&#010;GROUP BY&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.IPI&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:UNIDADE,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:SITTRIBU,&#013;&#010;:IPI,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE O SERIE2 CONTEM DADOS E SERIE NAO, MANDO SERIE2 */&#013;&#010;IF ((UDF_TRIM(SERIE) = &apos;N/F&apos;) OR (UDF_TRIM(SERIE) = &apos;&apos;)) THEN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;SERIE = SERIE2;&#013;&#010;IF (SERIE &lt;&gt; &apos;N/F&apos;) THEN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || SERIE;&#013;&#010;ELSE&#013;&#010;DESCRICAO2 = DESCRICAO1;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;/* VERIFICO SE CORTO IPI */&#013;&#010;SELECT&#013;&#010;NA.IPI&#013;&#010;FROM&#013;&#010;NATUOPER NA&#013;&#010;JOIN MOVIMENTOS MO ON&#013;&#010;(MO.NOTA_CODNATUOPER = NA.CODIGO)&#013;&#010;WHERE&#013;&#010;MO.CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:XIPI;&#013;&#010;IF (XIPI = &apos;N&apos;) THEN&#013;&#010;IPI = NULL;&#013;&#010;/* ATIVAÇÃO */&#013;&#010;SELECT FIRST 1&#013;&#010;ID.NUMERO_FONE,&#013;&#010;OP.NOME AS OPERADORA,&#013;&#010;PL.NOME AS PLANO&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;JOIN OPERADORAS OP ON&#013;&#010;(OP.CODIGO = ID.CODOPERADORA)&#013;&#010;JOIN PLANOS PL ON&#013;&#010;(PL.CODIGO = ID.CODPLANO AND&#013;&#010;PL.CODOPERADORA = ID.CODOPERADORA)&#013;&#010;WHERE&#013;&#010;ID.BARRA = :BARRA AND&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.PS = &apos;P&apos; AND&#013;&#010;ID.UNICO = 1 AND&#013;&#010;ID.CODPLANO IS NOT NULL AND&#013;&#010;ID.NUMERO_FONE IS NOT NULL&#013;&#010;INTO&#013;&#010;:LINHA,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTASER (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(40),&#013;&#010;DESCRICAO2 VARCHAR(60),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;SERIE2 VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40),&#013;&#010;ATIVACAO CHAR(1))&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;UDF_LEFT(PO.DESCRICAO, 40),&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;ID.QUANTIDADE,&#013;&#010;ID.VALOR_PAGO,&#013;&#010;ID.VALOR_ICMS,&#013;&#010;TI.SITTRIBU,&#013;&#010;PO.ATIVACAO&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = ID.CODPRODUTO )&#013;&#010;LEFT JOIN TEMPITENS TI ON&#013;&#010;( TI.CODMOVIMENTO = ID.CODMOVENTRADA AND&#013;&#010;TI.CODPRODUTO   = ID.CODPRODUTO    AND&#013;&#010;TI.CODIGO       = ID.CODITEM )&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.PS = &apos;S&apos;&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:ATIVACAO&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = DESCRICAO1 || &apos; &apos; || SERIE;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAITENS (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;SERIE2 VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40),&#013;&#010;ATIVACAO CHAR(1))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ESMOV INTEGER;&#013;&#010;DECLARE VARIABLE TIPOMOV INTEGER;&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ESMOV,&#013;&#010;:TIPOMOV;&#013;&#010;IF ((TIPOMOV = 9) OR ((ESMOV = 0) AND (TIPOMOV = 1))) THEN&#013;&#010;BEGIN&#013;&#010;/* ITENS ESTORNADOS OU DE ORÇAMENTO */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;TI.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.DESCRICAO,&#013;&#010;TI.SERIE,&#013;&#010;TI.SERIE2,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSVENDA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA,&#013;&#010;TI.SITTRIBU,&#013;&#010;PO.UNIDADE,&#013;&#010;PO.ATIVACAO,&#013;&#010;(TI.VALOR_UNITARIO - TI.DESCONTO),&#013;&#010;TI.IPI&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = TI.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:ATIVACAO,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* TRATAMENTO DA SERIE */&#013;&#010;IF ((UDF_TRIM(SERIE) &lt;&gt; &apos;N/F&apos;) AND (UDF_TRIM(SERIE) &gt; &apos;&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE);&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE2);&#013;&#010;END ELSE&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1);&#013;&#010;END&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;UNIDADE,&#013;&#010;VALOR_ITEM,&#013;&#010;IPI,&#013;&#010;LINHA,&#013;&#010;OPERADORA,&#013;&#010;PLANO,&#013;&#010;&apos;N&apos;&#013;&#010;FROM&#013;&#010;REL_NOTAPRO(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI,&#013;&#010;:LINHA,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO,&#013;&#010;:ATIVACAO&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;/* SERVIÇOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;&apos;SE&apos;,&#013;&#010;VALOR_ITEM,&#013;&#010;0 AS IPI,&#013;&#010;LINHA,&#013;&#010;OPERADORA,&#013;&#010;PLANO,&#013;&#010;ATIVACAO&#013;&#010;FROM&#013;&#010;REL_NOTASER(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI,&#013;&#010;:LINHA,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO,&#013;&#010;:ATIVACAO&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (311, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="312" SQL="/*&#013;&#010;** ATIVAÇÃO - NOVOS CAMPOS II&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER STATUS_UPDATE&#013;&#010;ACTIVE BEFORE UPDATE POSITION 0&#013;&#010;AS&#013;&#010;DECLARE VARIABLE PRIMEIRO TIMESTAMP;&#013;&#010;DECLARE VARIABLE ULTIMO TIMESTAMP;&#013;&#010;DECLARE VARIABLE TOTAL DOUBLE PRECISION;&#013;&#010;DECLARE VARIABLE TDATAINI TIMESTAMP;&#013;&#010;DECLARE VARIABLE TDATAFIM TIMESTAMP;&#013;&#010;BEGIN&#013;&#010;/* DATA DA ENTREGA */&#013;&#010;IF ((NEW.QUEM_RECEBEU IS NOT NULL) AND (OLD.QUEM_RECEBEU IS NULL)) THEN&#013;&#010;NEW.DATA_ENTREGA = CURRENT_TIMESTAMP;&#013;&#010;/* DATA DA AUTORIZAÇÃO */&#013;&#010;IF ((NEW.QUEM_AUTORIZOU IS NOT NULL) AND (OLD.QUEM_AUTORIZOU IS NULL)) THEN&#013;&#010;NEW.DATA_AUTORIZADO = CURRENT_TIMESTAMP;&#013;&#010;IF (NEW.TIPO = 1) THEN&#013;&#010;BEGIN&#013;&#010;IF (NEW.ES = 0) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;ORC ABERTO&apos;;&#013;&#010;IF (NEW.AUTORIZADO = &apos;S&apos;) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;ORC AUTORIZADO&apos;;&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF (NEW.DATA_AUTORIZADO IS NOT NULL) THEN&#013;&#010;NEW.STATUS = &apos;ORC NAO AUTO&apos;;&#013;&#010;IF ((NEW.RETORNO = &apos;S&apos;) AND (NEW.DATA_RETORNO IS NOT NULL)) THEN&#013;&#010;NEW.STATUS = &apos;ORC RETORNAR&apos;;&#013;&#010;END&#013;&#010;END&#013;&#010;IF (NEW.ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;if (NEW.FECHADO = &apos;S&apos;) then&#013;&#010;NEW.STATUS = &apos;COMPRA&apos;;&#013;&#010;ELSE&#013;&#010;NEW.STATUS = &apos;PED COMPRA&apos;;&#013;&#010;END&#013;&#010;END&#013;&#010;IF (NEW.TIPO = 2) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;OS ABERTA&apos;;&#013;&#010;/* VERIFICO SE O TECNICO JÁ INICIOU */&#013;&#010;SELECT FIRST 1&#013;&#010;DATAINI,&#013;&#010;DATAFIM&#013;&#010;FROM&#013;&#010;OS_VENDER&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = NEW.CODIGO&#013;&#010;INTO&#013;&#010;:TDATAINI,&#013;&#010;:TDATAFIM;&#013;&#010;IF (TDATAINI IS NOT NULL) THEN&#013;&#010;BEGIN&#013;&#010;NEW.STATUS = &apos;OS INICIADA&apos;;&#013;&#010;IF (NEW.DATA_AUTORIZADO IS NOT NULL) THEN&#013;&#010;BEGIN&#013;&#010;IF (NEW.AUTORIZADO = &apos;N&apos;) THEN&#013;&#010;NEW.STATUS = &apos;OS NAO AUTO&apos;;&#013;&#010;ELSE&#013;&#010;IF (TDATAFIM IS NULL) THEN&#013;&#010;NEW.STATUS = &apos;OS AUTORIZADA&apos;;&#013;&#010;ELSE&#013;&#010;NEW.STATUS = &apos;OS CONCLUIDA&apos;;&#013;&#010;END&#013;&#010;IF (NEW.DATA_ENTREGA IS NOT NULL) THEN&#013;&#010;NEW.STATUS = &apos;OS ENTREGUE&apos;;&#013;&#010;END&#013;&#010;END&#013;&#010;IF (NEW.TIPO = 3) THEN NEW.STATUS = &apos;OS FECHADA&apos;;&#013;&#010;IF (NEW.TIPO = 4) THEN NEW.STATUS = &apos;PRE ASSITENCIA&apos;;&#013;&#010;IF (NEW.TIPO = 5) THEN NEW.STATUS = &apos;VENDA ABERTA&apos;;&#013;&#010;IF (NEW.TIPO = 6) THEN NEW.STATUS = &apos;VENDA FECHADA&apos;;&#013;&#010;IF (NEW.TIPO = 7) THEN NEW.STATUS = &apos;N/F&apos;;&#013;&#010;IF (NEW.TIPO = 8) THEN NEW.STATUS = &apos;REMESSA&apos;;&#013;&#010;IF (NEW.TIPO = 9) THEN NEW.STATUS = &apos;ESTORNO&apos;;&#013;&#010;/* VERIFICO O NUMERADOR */&#013;&#010;EXECUTE PROCEDURE VALIDA_NUMERADOR(NEW.NUMERADOR, NEW.CODCLIENTE,&#013;&#010;NEW.CODMARCA, NEW.CODMODELO, NEW.SERIE);&#013;&#010;/* calcular impostos */&#013;&#010;IF ((NEW.ES = 2)                  AND&#013;&#010;(NEW.TIPO IN (3, 6))          AND&#013;&#010;(OLD.TIPO IN (2, 5)))         THEN&#013;&#010;BEGIN&#013;&#010;/* TOTAL ICMS */&#013;&#010;EXECUTE PROCEDURE CALC_ICMS(NEW.CODIGO)&#013;&#010;RETURNING_VALUES NEW.VALOR_ICMS, NEW.VALOR_IPI_PRODUTOS;&#013;&#010;IF (NEW.NO_ICMS = &apos;N&apos;) THEN&#013;&#010;NEW.VALOR_ICMS = 0;&#013;&#010;IF (NEW.NO_IPI = &apos;N&apos;) THEN&#013;&#010;NEW.VALOR_IPI_PRODUTOS = 0;&#013;&#010;END&#013;&#010;/* FECHOU A VENDA */&#013;&#010;IF ((OLD.TIPO IN (2, 5)) AND (NEW.TIPO IN (3, 6))) THEN&#013;&#010;BEGIN&#013;&#010;/* USUÁRIO, DATA E HORA DO FECHAMENTO */&#013;&#010;NEW.DATAFECHAMENTO = &apos;NOW&apos;;&#013;&#010;NEW.FECHADO = &apos;S&apos;;&#013;&#010;IF ((UDF_TRIM(NEW.USUARIOFECHAMENTO) = &apos;&apos;) OR (NEW.USUARIOFECHAMENTO IS NULL)) THEN&#013;&#010;NEW.USUARIOFECHAMENTO = USER;&#013;&#010;/* VINCULAR SERIAL NA VENDA FECHADA */&#013;&#010;IF (NEW.TIPO = 6) THEN&#013;&#010;EXECUTE PROCEDURE VINCULO_SERIE NEW.CODIGO&#013;&#010;RETURNING_VALUES NEW.SERIE;&#013;&#010;/* TEMPOS DE ATENDIMENTO, SE FOR OS */&#013;&#010;IF (NEW.TIPO = 3) THEN&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;MIN(DATAINI),&#013;&#010;MAX(DATAFIM),&#013;&#010;SUM(THORAS)&#013;&#010;FROM&#013;&#010;OS_VENDER&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = NEW.CODIGO&#013;&#010;INTO&#013;&#010;:PRIMEIRO,&#013;&#010;:ULTIMO,&#013;&#010;:TOTAL;&#013;&#010;NEW.TEMPO_CHEGADA    = CAST(&#013;&#010;UDF_MINUTESBETWEEN(NEW.DATA, PRIMEIRO)&#013;&#010;AS DOUBLE PRECISION) / 60;&#013;&#010;NEW.TEMPO_CONCLUSAO  = CAST(&#013;&#010;UDF_MINUTESBETWEEN(NEW.DATA, ULTIMO)&#013;&#010;AS DOUBLE PRECISION) / 60;&#013;&#010;NEW.TEMPO_LANCAMENTO = CAST(&#013;&#010;UDF_MINUTESBETWEEN(ULTIMO, NEW.DATAFECHAMENTO)&#013;&#010;AS DOUBLE PRECISION) / 60;&#013;&#010;NEW.TEMPO_TECNICOS = TOTAL;&#013;&#010;NEW.DATAINICIO  = PRIMEIRO;&#013;&#010;NEW.DATATERMINO = ULTIMO;&#013;&#010;IF (PRIMEIRO &gt; NEW.DATAPREVISAO) THEN&#013;&#010;NEW.TEMPO_FORADOPRAZO = CAST(&#013;&#010;UDF_MINUTESBETWEEN(NEW.DATAPREVISAO, PRIMEIRO)&#013;&#010;AS DOUBLE PRECISION) / 60;&#013;&#010;ELSE&#013;&#010;NEW.TEMPO_FORADOPRAZO = 0;&#013;&#010;END&#013;&#010;NEW.TEMPO_CICLO = CAST(&#013;&#010;UDF_MINUTESBETWEEN(NEW.DATA, NEW.DATAFECHAMENTO)&#013;&#010;AS DOUBLE PRECISION) / 60;&#013;&#010;END&#013;&#010;/* RATEIO DOS CUSTOS DE COMPRA */&#013;&#010;IF ((NEW.ES = 1) AND (NEW.TIPO = 1)) THEN&#013;&#010;EXECUTE PROCEDURE RATEIO_CUSTOS (&#013;&#010;NEW.CODIGO,&#013;&#010;NEW.VALOR_PRODUTOS,&#013;&#010;NEW.VALOR_RATEIO_CUSTO);&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE VENDA_FECHA (&#013;&#010;CODMOVIMENTO INTEGER,&#013;&#010;USUARIOFECHAMENTO VARCHAR(30),&#013;&#010;OBSERVACOES VARCHAR(2048))&#013;&#010;RETURNS (&#013;&#010;RE_MOVIMENTO INTEGER)&#013;&#010;AS&#013;&#010;DECLARE VARIABLE TIPO INTEGER;&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE FECHADO CHAR(1);&#013;&#010;BEGIN&#013;&#010;RE_MOVIMENTO = 0;&#013;&#010;FECHADO = &apos;N&apos;;&#013;&#010;/* LEIO O TIPO ATUAL */&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ES,&#013;&#010;:TIPO;&#013;&#010;IF (TIPO IN (1, 2, 5)) THEN&#013;&#010;BEGIN&#013;&#010;IF ((ES = 2) AND (USUARIOFECHAMENTO &gt; &apos;&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;IF (TIPO = 2) THEN&#013;&#010;TIPO = 3;&#013;&#010;ELSE&#013;&#010;TIPO = 6;&#013;&#010;FECHADO = &apos;S&apos;;&#013;&#010;END&#013;&#010;UPDATE&#013;&#010;MOVIMENTOS&#013;&#010;SET&#013;&#010;TIPO = :TIPO,&#013;&#010;USUARIOFECHAMENTO = :USUARIOFECHAMENTO,&#013;&#010;DATAFECHAMENTO = CURRENT_TIMESTAMP,&#013;&#010;OBSERVACOES = :OBSERVACOES,&#013;&#010;FECHADO = :FECHADO&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO;&#013;&#010;WHEN ANY DO RE_MOVIMENTO = 1;&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (312, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="313" SQL="/*&#013;&#010;** ATIVAÇÃO - NOVOS CAMPOS III&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAPRO (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;SERIE2 VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40),&#013;&#010;CONTRATO VARCHAR(10),&#013;&#010;VOUCHER VARCHAR(10),&#013;&#010;TIPOATIVACAO CHAR(1))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE XIPI CHAR(1);&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE EH COMPRA OU VENDA */&#013;&#010;SELECT&#013;&#010;ES&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ES;&#013;&#010;IF (ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;/* COMPRA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;&apos;N/F&apos;,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSCOMPRA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = TI.CODPRODUTO )&#013;&#010;WHERE&#013;&#010;TI.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:UNIDADE,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:SITTRIBU,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;IF (SERIE &lt;&gt; &apos;N/F&apos;) THEN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || SERIE;&#013;&#010;ELSE&#013;&#010;DESCRICAO2 = DESCRICAO1;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;CONTRATO = NULL;&#013;&#010;VOUCHER = NULL;&#013;&#010;TIPOATIVACAO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.IPI,&#013;&#010;ID.numero_fone,&#013;&#010;ID.contrato, &#013;&#010;id.voucher,&#013;&#010;ID.tipoativacao,&#013;&#010;OP.nome, &#013;&#010;PL.nome, &#013;&#010;SUM(ID.QUANTIDADE),&#013;&#010;SUM(ID.VALOR_PAGO),&#013;&#010;SUM(ID.VALOR_ICMS)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = ID.CODPRODUTO )&#013;&#010;LEFT JOIN TEMPITENS TI ON&#013;&#010;( TI.CODMOVIMENTO = ID.CODMOVENTRADA AND&#013;&#010;TI.CODPRODUTO   = ID.CODPRODUTO    AND&#013;&#010;TI.CODIGO       = ID.CODITEM )&#013;&#010;LEFT JOIN OPERADORAS OP ON&#013;&#010;( OP.codigo = ID.codoperadora )&#013;&#010;LEFT JOIN PLANOS PL ON&#013;&#010;( PL.codigo = ID.codplano AND&#013;&#010;PL.codoperadora = ID.codoperadora )&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.PS = &apos;P&apos;&#013;&#010;GROUP BY&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.IPI,&#013;&#010;ID.numero_fone,&#013;&#010;ID.contrato,&#013;&#010;ID.voucher,&#013;&#010;ID.tipoativacao,&#013;&#010;OP.nome,&#013;&#010;PL.nome&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:UNIDADE,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:SITTRIBU,&#013;&#010;:IPI,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:LINHA,&#013;&#010;:contrato,&#013;&#010;:voucher,&#013;&#010;:tipoativacao,&#013;&#010;:operadora,&#013;&#010;:plano&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE O SERIE2 CONTEM DADOS E SERIE NAO, MANDO SERIE2 */&#013;&#010;IF ((UDF_TRIM(SERIE) = &apos;N/F&apos;) OR (UDF_TRIM(SERIE) = &apos;&apos;)) THEN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;SERIE = SERIE2;&#013;&#010;IF (SERIE &lt;&gt; &apos;N/F&apos;) THEN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || SERIE;&#013;&#010;ELSE&#013;&#010;DESCRICAO2 = DESCRICAO1;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;/* VERIFICO SE CORTO IPI */&#013;&#010;SELECT&#013;&#010;NA.IPI&#013;&#010;FROM&#013;&#010;NATUOPER NA&#013;&#010;JOIN MOVIMENTOS MO ON&#013;&#010;(MO.NOTA_CODNATUOPER = NA.CODIGO)&#013;&#010;WHERE&#013;&#010;MO.CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:XIPI;&#013;&#010;IF (XIPI = &apos;N&apos;) THEN&#013;&#010;IPI = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAITENS (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;SERIE2 VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40),&#013;&#010;ATIVACAO CHAR(1),&#013;&#010;CONTRATO VARCHAR(10),&#013;&#010;VOUCHER VARCHAR(10),&#013;&#010;TIPOATIVACAO CHAR(1))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ESMOV INTEGER;&#013;&#010;DECLARE VARIABLE TIPOMOV INTEGER;&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ESMOV,&#013;&#010;:TIPOMOV;&#013;&#010;IF ((TIPOMOV = 9) OR ((ESMOV = 0) AND (TIPOMOV = 1))) THEN&#013;&#010;BEGIN&#013;&#010;/* ITENS ESTORNADOS OU DE ORÇAMENTO */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;TI.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.DESCRICAO,&#013;&#010;TI.SERIE,&#013;&#010;TI.SERIE2,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSVENDA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA,&#013;&#010;TI.SITTRIBU,&#013;&#010;PO.UNIDADE,&#013;&#010;PO.ATIVACAO,&#013;&#010;(TI.VALOR_UNITARIO - TI.DESCONTO),&#013;&#010;TI.IPI&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = TI.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:ATIVACAO,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* TRATAMENTO DA SERIE */&#013;&#010;IF ((UDF_TRIM(SERIE) &lt;&gt; &apos;N/F&apos;) AND (UDF_TRIM(SERIE) &gt; &apos;&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE);&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE2);&#013;&#010;END ELSE&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1);&#013;&#010;END&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;CONTRATO = NULL;&#013;&#010;VOUCHER = NULL;&#013;&#010;TIPOATIVACAO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;UNIDADE,&#013;&#010;VALOR_ITEM,&#013;&#010;IPI,&#013;&#010;LINHA,&#013;&#010;OPERADORA,&#013;&#010;PLANO,&#013;&#010;&apos;N&apos;,&#013;&#010;CONTRATO,&#013;&#010;VOUCHER,&#013;&#010;TIPOATIVACAO&#013;&#010;FROM&#013;&#010;REL_NOTAPRO(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI,&#013;&#010;:LINHA,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO,&#013;&#010;:ATIVACAO,&#013;&#010;:CONTRATO,&#013;&#010;:VOUCHER,&#013;&#010;:TIPOATIVACAO&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;/* SERVIÇOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;&apos;SE&apos;,&#013;&#010;VALOR_ITEM,&#013;&#010;0 AS IPI,&#013;&#010;ATIVACAO&#013;&#010;FROM&#013;&#010;REL_NOTASER(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI,&#013;&#010;:ATIVACAO&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;CONTRATO = NULL;&#013;&#010;VOUCHER = NULL;&#013;&#010;TIPOATIVACAO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (313, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="314" SQL="/*&#013;&#010;** ATIVAÇÃO - NOVOS CAMPOS IV&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAPRO (&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;SERIE2 VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40),&#013;&#010;CONTRATO VARCHAR(10),&#013;&#010;VOUCHER VARCHAR(10),&#013;&#010;TIPOATIVACAO CHAR(1))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ES INTEGER;&#013;&#010;DECLARE VARIABLE XIPI CHAR(1);&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE EH COMPRA OU VENDA */&#013;&#010;SELECT&#013;&#010;ES&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ES;&#013;&#010;IF (ES = 1) THEN&#013;&#010;BEGIN&#013;&#010;/* COMPRA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;PO.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;&apos;N/F&apos;,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSCOMPRA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = TI.CODPRODUTO )&#013;&#010;WHERE&#013;&#010;TI.CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:UNIDADE,&#013;&#010;:SERIE,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:SITTRIBU,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;IF (SERIE &lt;&gt; &apos;N/F&apos;) THEN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || SERIE;&#013;&#010;ELSE&#013;&#010;DESCRICAO2 = DESCRICAO1;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;CONTRATO = NULL;&#013;&#010;VOUCHER = NULL;&#013;&#010;TIPOATIVACAO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* VENDA */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.IPI,&#013;&#010;ID.NUMERO_FONE,&#013;&#010;ID.CONTRATO, &#013;&#010;ID.VOUCHER,&#013;&#010;ID.TIPOATIVACAO,&#013;&#010;OP.NOME, &#013;&#010;PL.NOME, &#013;&#010;SUM(ID.QUANTIDADE),&#013;&#010;SUM(ID.VALOR_PAGO),&#013;&#010;SUM(ID.VALOR_ICMS)&#013;&#010;FROM&#013;&#010;INDIVIDUAIS ID&#013;&#010;LEFT JOIN PRODUTOS PO ON&#013;&#010;( PO.CODIGO = ID.CODPRODUTO )&#013;&#010;LEFT JOIN TEMPITENS TI ON&#013;&#010;( TI.CODMOVIMENTO = ID.CODMOVENTRADA AND&#013;&#010;TI.CODPRODUTO   = ID.CODPRODUTO    AND&#013;&#010;TI.CODIGO       = ID.CODITEM )&#013;&#010;LEFT JOIN OPERADORAS OP ON&#013;&#010;( OP.CODIGO = ID.CODOPERADORA )&#013;&#010;LEFT JOIN PLANOS PL ON&#013;&#010;( PL.CODIGO = ID.CODPLANO AND&#013;&#010;PL.CODOPERADORA = ID.CODOPERADORA )&#013;&#010;WHERE&#013;&#010;ID.CODMOVSAIDA = :CODMOVIMENTO AND&#013;&#010;ID.VENDIDO = &apos;S&apos; AND&#013;&#010;ID.PS = &apos;P&apos;&#013;&#010;GROUP BY&#013;&#010;ID.CODPRODUTO,&#013;&#010;ID.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.UNIDADE,&#013;&#010;ID.SERIE,&#013;&#010;ID.SERIE2,&#013;&#010;ID.VALOR_VENDA,&#013;&#010;ID.ICMSVENDA,&#013;&#010;ID.DESCONTO,&#013;&#010;TI.SITTRIBU,&#013;&#010;TI.IPI,&#013;&#010;ID.NUMERO_FONE,&#013;&#010;ID.CONTRATO,&#013;&#010;ID.VOUCHER,&#013;&#010;ID.TIPOATIVACAO,&#013;&#010;OP.NOME,&#013;&#010;PL.NOME&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:UNIDADE,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:SITTRIBU,&#013;&#010;:IPI,&#013;&#010;:LINHA,&#013;&#010;:CONTRATO,&#013;&#010;:VOUCHER,&#013;&#010;:TIPOATIVACAO,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* VERIFICO SE O SERIE2 CONTEM DADOS E SERIE NAO, MANDO SERIE2 */&#013;&#010;IF ((UDF_TRIM(SERIE) = &apos;N/F&apos;) OR (UDF_TRIM(SERIE) = &apos;&apos;)) THEN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;SERIE = SERIE2;&#013;&#010;IF (SERIE &lt;&gt; &apos;N/F&apos;) THEN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || SERIE;&#013;&#010;ELSE&#013;&#010;DESCRICAO2 = DESCRICAO1;&#013;&#010;VALOR_ITEM = VALOR_VENDA - DESCONTO;&#013;&#010;/* VERIFICO SE CORTO IPI */&#013;&#010;SELECT&#013;&#010;NA.IPI&#013;&#010;FROM&#013;&#010;NATUOPER NA&#013;&#010;JOIN MOVIMENTOS MO ON&#013;&#010;(MO.NOTA_CODNATUOPER = NA.CODIGO)&#013;&#010;WHERE&#013;&#010;MO.CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:XIPI;&#013;&#010;IF (XIPI = &apos;N&apos;) THEN&#013;&#010;IPI = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER PROCEDURE REL_NOTAITENS(&#013;&#010;CODMOVIMENTO INTEGER)&#013;&#010;RETURNS (&#013;&#010;CODIGO INTEGER,&#013;&#010;BARRA CHAR(13),&#013;&#010;DESCRICAO1 VARCHAR(60),&#013;&#010;DESCRICAO2 VARCHAR(80),&#013;&#010;SERIE VARCHAR(20),&#013;&#010;SERIE2 VARCHAR(20),&#013;&#010;VALOR_VENDA NUMERIC(9,2),&#013;&#010;ICMS_VENDA NUMERIC(9,2),&#013;&#010;DESCONTO NUMERIC(9,2),&#013;&#010;QUANTIDADE NUMERIC(9,2),&#013;&#010;VALOR_PAGO NUMERIC(9,2),&#013;&#010;VALOR_ICMS NUMERIC(9,2),&#013;&#010;SITTRIBU CHAR(3),&#013;&#010;UNIDADE CHAR(2),&#013;&#010;VALOR_ITEM NUMERIC(9,2),&#013;&#010;IPI NUMERIC(9,4),&#013;&#010;LINHA VARCHAR(20),&#013;&#010;OPERADORA VARCHAR(40),&#013;&#010;PLANO VARCHAR(40),&#013;&#010;ATIVACAO CHAR(1),&#013;&#010;CONTRATO VARCHAR(10),&#013;&#010;VOUCHER VARCHAR(10),&#013;&#010;TIPOATIVACAO CHAR(1))&#013;&#010;AS&#013;&#010;DECLARE VARIABLE ESMOV INTEGER;&#013;&#010;DECLARE VARIABLE TIPOMOV INTEGER;&#013;&#010;BEGIN&#013;&#010;SELECT&#013;&#010;ES,&#013;&#010;TIPO&#013;&#010;FROM&#013;&#010;MOVIMENTOS&#013;&#010;WHERE&#013;&#010;CODIGO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:ESMOV,&#013;&#010;:TIPOMOV;&#013;&#010;IF ((TIPOMOV = 9) OR ((ESMOV = 0) AND (TIPOMOV = 1))) THEN&#013;&#010;BEGIN&#013;&#010;/* ITENS ESTORNADOS OU DE ORÇAMENTO */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;TI.CODPRODUTO,&#013;&#010;TI.BARRA,&#013;&#010;PO.DESCRICAO,&#013;&#010;PO.DESCRICAO,&#013;&#010;TI.SERIE,&#013;&#010;TI.SERIE2,&#013;&#010;TI.VALOR_UNITARIO,&#013;&#010;TI.ICMSVENDA,&#013;&#010;TI.DESCONTO,&#013;&#010;TI.QUANTIDADE,&#013;&#010;TI.VALOR_TOTAL,&#013;&#010;TI.VALOR_ICMSCOMPRA,&#013;&#010;TI.SITTRIBU,&#013;&#010;PO.UNIDADE,&#013;&#010;PO.ATIVACAO,&#013;&#010;(TI.VALOR_UNITARIO - TI.DESCONTO),&#013;&#010;TI.IPI&#013;&#010;FROM&#013;&#010;TEMPITENS TI&#013;&#010;JOIN PRODUTOS PO ON&#013;&#010;(PO.CODIGO = TI.CODPRODUTO)&#013;&#010;WHERE&#013;&#010;CODMOVIMENTO = :CODMOVIMENTO&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:ATIVACAO,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;/* TRATAMENTO DA SERIE */&#013;&#010;IF ((UDF_TRIM(SERIE) &lt;&gt; &apos;N/F&apos;) AND (UDF_TRIM(SERIE) &gt; &apos;&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE);&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;IF (UDF_TRIM(SERIE2) &gt; &apos;&apos;) THEN&#013;&#010;BEGIN&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1) || &apos; &apos; || UDF_TRIM(SERIE2);&#013;&#010;END ELSE&#013;&#010;DESCRICAO2 = UDF_TRIM(DESCRICAO1);&#013;&#010;END&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;CONTRATO = NULL;&#013;&#010;VOUCHER = NULL;&#013;&#010;TIPOATIVACAO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END ELSE&#013;&#010;BEGIN&#013;&#010;/* PRODUTOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;UNIDADE,&#013;&#010;VALOR_ITEM,&#013;&#010;IPI,&#013;&#010;LINHA,&#013;&#010;OPERADORA,&#013;&#010;PLANO,&#013;&#010;&apos;N&apos;,&#013;&#010;CONTRATO,&#013;&#010;VOUCHER,&#013;&#010;TIPOATIVACAO&#013;&#010;FROM&#013;&#010;REL_NOTAPRO(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI,&#013;&#010;:LINHA,&#013;&#010;:OPERADORA,&#013;&#010;:PLANO,&#013;&#010;:ATIVACAO,&#013;&#010;:CONTRATO,&#013;&#010;:VOUCHER,&#013;&#010;:TIPOATIVACAO&#013;&#010;DO&#013;&#010;SUSPEND;&#013;&#010;/* SERVIÇOS */&#013;&#010;FOR&#013;&#010;SELECT&#013;&#010;CODIGO,&#013;&#010;BARRA,&#013;&#010;DESCRICAO1,&#013;&#010;DESCRICAO2,&#013;&#010;SERIE,&#013;&#010;SERIE2,&#013;&#010;VALOR_VENDA,&#013;&#010;ICMS_VENDA,&#013;&#010;DESCONTO,&#013;&#010;QUANTIDADE,&#013;&#010;VALOR_PAGO,&#013;&#010;VALOR_ICMS,&#013;&#010;SITTRIBU,&#013;&#010;&apos;SE&apos;,&#013;&#010;VALOR_ITEM,&#013;&#010;0 AS IPI,&#013;&#010;ATIVACAO&#013;&#010;FROM&#013;&#010;REL_NOTASER(:CODMOVIMENTO)&#013;&#010;INTO&#013;&#010;:CODIGO,&#013;&#010;:BARRA,&#013;&#010;:DESCRICAO1,&#013;&#010;:DESCRICAO2,&#013;&#010;:SERIE,&#013;&#010;:SERIE2,&#013;&#010;:VALOR_VENDA,&#013;&#010;:ICMS_VENDA,&#013;&#010;:DESCONTO,&#013;&#010;:QUANTIDADE,&#013;&#010;:VALOR_PAGO,&#013;&#010;:VALOR_ICMS,&#013;&#010;:SITTRIBU,&#013;&#010;:UNIDADE,&#013;&#010;:VALOR_ITEM,&#013;&#010;:IPI,&#013;&#010;:ATIVACAO&#013;&#010;DO&#013;&#010;BEGIN&#013;&#010;LINHA = NULL;&#013;&#010;OPERADORA = NULL;&#013;&#010;PLANO = NULL;&#013;&#010;CONTRATO = NULL;&#013;&#010;VOUCHER = NULL;&#013;&#010;TIPOATIVACAO = NULL;&#013;&#010;SUSPEND;&#013;&#010;END&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (314, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/><ROW RowState="4" CODIGO="315" SQL="/*&#013;&#010;** AJUSTE NO ESTORNO DO ITEM&#013;&#010;*/&#013;&#010;SET TERM ^ ;&#013;&#010;ALTER TRIGGER INDIVIDUAIS_BUESTOQUE&#013;&#010;ACTIVE BEFORE UPDATE POSITION 1000&#013;&#010;AS&#013;&#010;BEGIN&#013;&#010;/* APAGO OS RESTOS DO LINK COM A VENDA */&#013;&#010;IF ((NEW.VENDIDO = &apos;N&apos;) AND (OLD.VENDIDO = &apos;S&apos;)) THEN&#013;&#010;NEW.CODMOVSAIDA = NULL;&#013;&#010;/* ESTATISTICA DE GIRO DE ESTOQUE */&#013;&#010;IF ((NEW.VENDIDO = &apos;S&apos;) AND (OLD.VENDIDO = &apos;N&apos;)) THEN&#013;&#010;BEGIN&#013;&#010;/* DATA DA COMPRA */&#013;&#010;SELECT&#013;&#010;MO.DATA&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;WHERE&#013;&#010;MO.CODIGO = NEW.CODMOVENTRADA&#013;&#010;INTO&#013;&#010;NEW.DATAENTRADA;&#013;&#010;/* DATA DA VENDA */&#013;&#010;SELECT&#013;&#010;MO.DATA&#013;&#010;FROM&#013;&#010;MOVIMENTOS MO&#013;&#010;WHERE&#013;&#010;MO.CODIGO = NEW.CODMOVSAIDA&#013;&#010;INTO&#013;&#010;NEW.DATASAIDA;&#013;&#010;/* TEMPO NO ESTOQUE */&#013;&#010;NEW.TEMPOESTOQUE = CAST((NEW.DATASAIDA - NEW.DATAENTRADA) AS DOUBLE PRECISION);&#013;&#010;END&#013;&#010;END&#013;&#010;^&#013;&#010;SET TERM ; ^&#013;&#010;UPDATE&#013;&#010;INDIVIDUAIS&#013;&#010;SET&#013;&#010;CODMOVSAIDA = NULL&#013;&#010;WHERE&#013;&#010;VENDIDO = &apos;N&apos;;&#013;&#010;INSERT INTO SCRIPTVER(NUMERO, DATA) VALUES (315, CURRENT_TIMESTAMP);&#013;&#010;COMMIT;&#013;&#010;"/></ROWDATA></DATAPACKET>