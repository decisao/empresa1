<?xml version="1.0" standalone="yes"?>  <DATAPACKET Version="2.0"><METADATA><FIELDS><FIELD attrname="ITEM_ID" fieldtype="i4"/><FIELD attrname="FOLDER_ID" fieldtype="i4" required="true"/><FIELD attrname="NAME" fieldtype="string" required="true" WIDTH="60"/><FIELD attrname="ITEM_SIZE" fieldtype="i4"/><FIELD attrname="ITEM_TYPE" fieldtype="i4" required="true"/><FIELD attrname="MODIFIED" fieldtype="r8" required="true"/><FIELD attrname="DELETED" fieldtype="r8"/><FIELD attrname="TEMPLATE" fieldtype="bin.hex" SUBTYPE="Binary" WIDTH="1"/></FIELDS><PARAMS LCID="0"/></METADATA><ROWDATA><ROW ITEM_ID="2" FOLDER_ID="2" NAME="Teste" ITEM_SIZE="4452" ITEM_TYPE="1" MODIFIED="38481.92978009259" TEMPLATE="VFBGMAlUcHBSZXBvcnQJcHBSZXBvcnQxCEF1dG9TdG9wCAxEYXRhUGlwZWxpbmUHHGRhU1FMUXVlcnlEYXRhVmlldzEuQ0xJRU5URVMUUHJpbnRlclNldHVwLkJpbk5hbWUGB0RlZmF1bHQZUHJpbnRlclNldHVwLkRvY3VtZW50TmFtZQYGUmVwb3J0FlByaW50ZXJTZXR1cC5QYXBlck5hbWUGFExldHRlciA4IDEvMiB4IDExIGluGFByaW50ZXJTZXR1cC5QcmludGVyTmFtZQYHRGVmYXVsdBtQcmludGVyU2V0dXAubW1NYXJnaW5Cb3R0b20DzhgZUHJpbnRlclNldHVwLm1tTWFyZ2luTGVmdAPOGBpQcmludGVyU2V0dXAubW1NYXJnaW5SaWdodAPOGBhQcmludGVyU2V0dXAubW1NYXJnaW5Ub3ADzhgaUHJpbnRlclNldHVwLm1tUGFwZXJIZWlnaHQEaUMEABlQcmludGVyU2V0dXAubW1QYXBlcldpZHRoBFxLAwAWUHJpbnRlclNldHVwLlBhcGVyU2l6ZQIBDlNhdmVBc1RlbXBsYXRlCSZUZW1wbGF0ZS5EYXRhYmFzZVNldHRpbmdzLkRhdGFQaXBlbGluZQcGcGxJdGVtHlRlbXBsYXRlLkRhdGFiYXNlU2V0dGluZ3MuTmFtZQYFVGVzdGUjVGVtcGxhdGUuRGF0YWJhc2VTZXR0aW5ncy5OYW1lRmllbGQGBE5BTUUnVGVtcGxhdGUuRGF0YWJhc2VTZXR0aW5ncy5UZW1wbGF0ZUZpZWxkBghURU1QTEFURQ9UZW1wbGF0ZS5TYXZlVG8HCnN0RGF0YWJhc2UKRGV2aWNlVHlwZQYGU2NyZWVuGk91dGxpbmVTZXR0aW5ncy5DcmVhdGVOb2RlCR9PdXRsaW5lU2V0dGluZ3MuQ3JlYXRlUGFnZU5vZGVzCRdPdXRsaW5lU2V0dGluZ3MuRW5hYmxlZAgXT3V0bGluZVNldHRpbmdzLlZpc2libGUIFFNob3dBdXRvU2VhcmNoRGlhbG9nCSBUZXh0U2VhcmNoU2V0dGluZ3MuRGVmYXVsdFN0cmluZwYKPEZpbmRUZXh0PhpUZXh0U2VhcmNoU2V0dGluZ3MuRW5hYmxlZAgETGVmdAMhAQNUb3ADRgEHVmVyc2lvbgYENy4wNA1tbUNvbHVtbldpZHRoAgAQRGF0YVBpcGVsaW5lTmFtZQYIQ0xJRU5URVMADVRwcEhlYWRlckJhbmQNcHBIZWFkZXJCYW5kMQ5tbUJvdHRvbU9mZnNldAIACG1tSGVpZ2h0AwM+D21tUHJpbnRQb3NpdGlvbgIAAAhUcHBMYWJlbAhwcExhYmVsMQhVc2VyTmFtZQYGTGFiZWwxB0NhcHRpb24UFgAAAFJlbGF0w7NyaW8gZGUgQ2xpZW50ZXMMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIUCkZvbnQuU3R5bGULBmZzQm9sZAALVHJhbnNwYXJlbnQJCG1tSGVpZ2h0AxsiBm1tTGVmdANnDAVtbVRvcANnDAdtbVdpZHRoBDkcAQAIQmFuZFR5cGUCAAAAAA1UcHBEZXRhaWxCYW5kDXBwRGV0YWlsQmFuZDEObW1Cb3R0b21PZmZzZXQCAAhtbUhlaWdodAN4Dg9tbVByaW50UG9zaXRpb24CAAAJVHBwREJUZXh0CXBwREJUZXh0MQhVc2VyTmFtZQYHREJUZXh0MQlEYXRhRmllbGQGBkNPRElHTwxEYXRhUGlwZWxpbmUHHGRhU1FMUXVlcnlEYXRhVmlldzEuQ0xJRU5URVMMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULBmZzQm9sZAANVGV4dEFsaWdubWVudAcQdGFSaWdodEp1c3RpZmllZAtUcmFuc3BhcmVudAkQRGF0YVBpcGVsaW5lTmFtZQYIQ0xJRU5URVMIbW1IZWlnaHQDeA4GbW1MZWZ0A3ANBW1tVG9wAgAHbW1XaWR0aAMuQwhCYW5kVHlwZQIEAAAJVHBwREJUZXh0CXBwREJUZXh0MghVc2VyTmFtZQYHREJUZXh0MglEYXRhRmllbGQGBE5PTUUMRGF0YVBpcGVsaW5lBxxkYVNRTFF1ZXJ5RGF0YVZpZXcxLkNMSUVOVEVTDEZvbnQuQ2hhcnNldAcPREVGQVVMVF9DSEFSU0VUCkZvbnQuQ29sb3IHB2NsQmxhY2sJRm9udC5OYW1lBgVBcmlhbAlGb250LlNpemUCCApGb250LlN0eWxlCwZmc0JvbGQAC1RyYW5zcGFyZW50CRBEYXRhUGlwZWxpbmVOYW1lBghDTElFTlRFUwhtbUhlaWdodAN4DgZtbUxlZnQD2lcFbW1Ub3ACAAdtbVdpZHRoBDV4AQAIQmFuZFR5cGUCBAAACVRwcERCVGV4dAlwcERCVGV4dDMIVXNlck5hbWUGB0RCVGV4dDMJRGF0YUZpZWxkBgRGT05FDERhdGFQaXBlbGluZQccZGFTUUxRdWVyeURhdGFWaWV3MS5DTElFTlRFUwxGb250LkNoYXJzZXQHD0RFRkFVTFRfQ0hBUlNFVApGb250LkNvbG9yBwdjbEJsYWNrCUZvbnQuTmFtZQYFQXJpYWwJRm9udC5TaXplAggKRm9udC5TdHlsZQsGZnNCb2xkAAtUcmFuc3BhcmVudAkQRGF0YVBpcGVsaW5lTmFtZQYIQ0xJRU5URVMIbW1IZWlnaHQDeA4GbW1MZWZ0BIbeAQAFbW1Ub3ACAAdtbVdpZHRoA2xpCEJhbmRUeXBlAgQAAAANVHBwRm9vdGVyQmFuZA1wcEZvb3RlckJhbmQxDm1tQm90dG9tT2Zmc2V0AgAIbW1IZWlnaHQCAA9tbVByaW50UG9zaXRpb24CAAAADVRkYURhdGFNb2R1bGUNZGFEYXRhTW9kdWxlMQATVGRhU1FMUXVlcnlEYXRhVmlldxNkYVNRTFF1ZXJ5RGF0YVZpZXcxCFVzZXJOYW1lBg5RdWVyeV9DTElFTlRFUwZIZWlnaHQDjwAETGVmdAIKD05hbWVDb2x1bW5XaWR0aAJpD1NpemVDb2x1bW5XaWR0aAIjCFNvcnRNb2RlAgADVG9wAgoPVHlwZUNvbHVtbldpZHRoAjQFV2lkdGgDyAASQXV0b1NlYXJjaFRhYk9yZGVyAgAAElRwcENoaWxkREJQaXBlbGluZQhDTElFTlRFUxBBdXRvQ3JlYXRlRmllbGRzCAhVc2VyTmFtZQYIQ0xJRU5URVMACFRwcEZpZWxkCHBwRmllbGQxCkZpZWxkQWxpYXMGBkNPRElHTwlGaWVsZE5hbWUGBkNPRElHTwtGaWVsZExlbmd0aAIACERhdGFUeXBlBwlkdEludGVnZXIMRGlzcGxheVdpZHRoAgoIUG9zaXRpb24CAAlUYWJsZU5hbWUGCkNMSUVOVEVTXzEAAAhUcHBGaWVsZAhwcEZpZWxkMgpGaWVsZEFsaWFzBgROT01FCUZpZWxkTmFtZQYETk9NRQtGaWVsZExlbmd0aAIoDERpc3BsYXlXaWR0aAIoCFBvc2l0aW9uAgEJVGFibGVOYW1lBgpDTElFTlRFU18xAAAIVHBwRmllbGQIcHBGaWVsZDMKRmllbGRBbGlhcwYERk9ORQlGaWVsZE5hbWUGBEZPTkULRmllbGRMZW5ndGgCFAxEaXNwbGF5V2lkdGgCFAhQb3NpdGlvbgICCVRhYmxlTmFtZQYKQ0xJRU5URVNfMQAAAAZUZGFTUUwGZGFTUUwxDUNvbGxhdGlvblR5cGUHB2N0QVNDSUkMRGF0YWJhc2VOYW1lBg9ldVNRTENvbm5lY3Rpb24MRGF0YWJhc2VUeXBlBwtkdEludGVyQmFzZRBEYXRhUGlwZWxpbmVOYW1lBghDTElFTlRFUw9Jc0Nhc2VTZW5zaXRpdmUJCUxpbmtDb2xvcgcIY2xNYXJvb24WTWF4U1FMRmllbGRBbGlhc0xlbmd0aAIZD1NRTFRleHQuU3RyaW5ncwEGK1NFTEVDVCBDTElFTlRFU18xLkNPRElHTywgQ0xJRU5URVNfMS5OT01FLCAGFiAgICAgICBDTElFTlRFU18xLkZPTkUGGEZST00gQ0xJRU5URVMgQ0xJRU5URVNfMQYYT1JERVIgQlkgQ0xJRU5URVNfMS5OT01FAAdTUUxUeXBlBwZzcVNRTDIAC1RkYUNyaXRlcmlhC2RhQ3JpdGVyaWExCUNoaWxkVHlwZQIHBUxldmVsAgAIT3BlcmF0b3IHCGRhY29MaWtlAAhUZGFGaWVsZAAFQWxpYXMGBE5PTUUKQXV0b1NlYXJjaAkMRGlzcGxheVdpZHRoAigKRmllbGRBbGlhcwYETk9NRQtGaWVsZExlbmd0aAIoCUZpZWxkTmFtZQYETk9NRQxTUUxGaWVsZE5hbWUGBE5PTUUKVGFibGVBbGlhcwYIQ0xJRU5URVMJVGFibGVOYW1lBghDTElFTlRFUw1UYWJsZVNRTEFsaWFzBgpDTElFTlRFU18xAAAACFRkYUZpZWxkCGRhRmllbGQxBUFsaWFzBgZDT0RJR08IRGF0YVR5cGUHCWR0SW50ZWdlcgxEaXNwbGF5V2lkdGgCCgpGaWVsZEFsaWFzBgZDT0RJR08LRmllbGRMZW5ndGgCAAlGaWVsZE5hbWUGBkNPRElHTwxTUUxGaWVsZE5hbWUGBkNPRElHTwpUYWJsZUFsaWFzBghDTElFTlRFUwlUYWJsZU5hbWUGCENMSUVOVEVTDVRhYmxlU1FMQWxpYXMGCkNMSUVOVEVTXzEAAAhUZGFGaWVsZAhkYUZpZWxkMgVBbGlhcwYETk9NRQxEaXNwbGF5V2lkdGgCKApGaWVsZEFsaWFzBgROT01FC0ZpZWxkTGVuZ3RoAigJRmllbGROYW1lBgROT01FDFNRTEZpZWxkTmFtZQYETk9NRQpUYWJsZUFsaWFzBghDTElFTlRFUwlUYWJsZU5hbWUGCENMSUVOVEVTDVRhYmxlU1FMQWxpYXMGCkNMSUVOVEVTXzEAAAhUZGFGaWVsZAhkYUZpZWxkMwVBbGlhcwYERk9ORQxEaXNwbGF5V2lkdGgCFApGaWVsZEFsaWFzBgRGT05FC0ZpZWxkTGVuZ3RoAhQJRmllbGROYW1lBgRGT05FDFNRTEZpZWxkTmFtZQYERk9ORQpUYWJsZUFsaWFzBghDTElFTlRFUwlUYWJsZU5hbWUGCENMSUVOVEVTDVRhYmxlU1FMQWxpYXMGCkNMSUVOVEVTXzEAAAhUZGFGaWVsZAhkYUZpZWxkNAlDaGlsZFR5cGUCAgVBbGlhcwYETk9NRQxEaXNwbGF5V2lkdGgCKApGaWVsZEFsaWFzBgROT01FC0ZpZWxkTGVuZ3RoAigJRmllbGROYW1lBgROT01FDFNRTEZpZWxkTmFtZQYETk9NRQpUYWJsZUFsaWFzBghDTElFTlRFUwlUYWJsZU5hbWUGCENMSUVOVEVTDVRhYmxlU1FMQWxpYXMGCkNMSUVOVEVTXzEAAAhUZGFUYWJsZQhkYVRhYmxlMQlDaGlsZFR5cGUCBQVBbGlhcwYIQ0xJRU5URVMISm9pblR5cGUHCGRhanROb25lCFNRTEFsaWFzBgpDTElFTlRFU18xClRhYmxlQWxpYXMGCENMSUVOVEVTCVRhYmxlTmFtZQYIQ0xJRU5URVMAAAAAAAAA"/><ROW ITEM_ID="8" FOLDER_ID="7" NAME="Inventário geral" ITEM_SIZE="14606" ITEM_TYPE="1" MODIFIED="38608.02772814815" TEMPLATE=""/><ROW ITEM_ID="6" FOLDER_ID="7" NAME="Curva ABC produtos - margem de contribuição" ITEM_SIZE="18894" ITEM_TYPE="1" MODIFIED="38607.88843333333" TEMPLATE=""/><ROW ITEM_ID="72" FOLDER_ID="2" NAME="OSModelo1" ITEM_SIZE="54275" ITEM_TYPE="1" MODIFIED="38730.55480974537" TEMPLATE=""/><ROW ITEM_ID="21" FOLDER_ID="2" NAME="Teste2" ITEM_SIZE="4491" ITEM_TYPE="1" MODIFIED="38676.02093586806" TEMPLATE="VFBGMAlUcHBSZXBvcnQJcHBSZXBvcnQxCEF1dG9TdG9wCAxEYXRhUGlwZWxpbmUHHGRhU1FMUXVlcnlEYXRhVmlldzEuQ0xJRU5URVMUUHJpbnRlclNldHVwLkJpbk5hbWUGB0RlZmF1bHQZUHJpbnRlclNldHVwLkRvY3VtZW50TmFtZQYGUmVwb3J0FlByaW50ZXJTZXR1cC5QYXBlck5hbWUUEwAAAExldHRlciA4wr0geCAxMSBwb2wYUHJpbnRlclNldHVwLlByaW50ZXJOYW1lBgdEZWZhdWx0G1ByaW50ZXJTZXR1cC5tbU1hcmdpbkJvdHRvbQPOGBlQcmludGVyU2V0dXAubW1NYXJnaW5MZWZ0A84YGlByaW50ZXJTZXR1cC5tbU1hcmdpblJpZ2h0A84YGFByaW50ZXJTZXR1cC5tbU1hcmdpblRvcAPOGBpQcmludGVyU2V0dXAubW1QYXBlckhlaWdodARpQwQAGVByaW50ZXJTZXR1cC5tbVBhcGVyV2lkdGgEXEsDABZQcmludGVyU2V0dXAuUGFwZXJTaXplAgEOU2F2ZUFzVGVtcGxhdGUJJlRlbXBsYXRlLkRhdGFiYXNlU2V0dGluZ3MuRGF0YVBpcGVsaW5lBwZwbEl0ZW0eVGVtcGxhdGUuRGF0YWJhc2VTZXR0aW5ncy5OYW1lBgZUZXN0ZTIjVGVtcGxhdGUuRGF0YWJhc2VTZXR0aW5ncy5OYW1lRmllbGQGBE5BTUUnVGVtcGxhdGUuRGF0YWJhc2VTZXR0aW5ncy5UZW1wbGF0ZUZpZWxkBghURU1QTEFURQ9UZW1wbGF0ZS5TYXZlVG8HCnN0RGF0YWJhc2UKRGV2aWNlVHlwZQYGU2NyZWVuGk91dGxpbmVTZXR0aW5ncy5DcmVhdGVOb2RlCR9PdXRsaW5lU2V0dGluZ3MuQ3JlYXRlUGFnZU5vZGVzCRdPdXRsaW5lU2V0dGluZ3MuRW5hYmxlZAgXT3V0bGluZVNldHRpbmdzLlZpc2libGUIFFNob3dBdXRvU2VhcmNoRGlhbG9nCSBUZXh0U2VhcmNoU2V0dGluZ3MuRGVmYXVsdFN0cmluZwYKPEZpbmRUZXh0PhpUZXh0U2VhcmNoU2V0dGluZ3MuRW5hYmxlZAgETGVmdAMhAQNUb3ADRgEHVmVyc2lvbgYENy4wNA1tbUNvbHVtbldpZHRoAgAQRGF0YVBpcGVsaW5lTmFtZQYIQ0xJRU5URVMADVRwcEhlYWRlckJhbmQNcHBIZWFkZXJCYW5kMQ5tbUJvdHRvbU9mZnNldAIACG1tSGVpZ2h0AwM+D21tUHJpbnRQb3NpdGlvbgIAAAhUcHBMYWJlbAhwcExhYmVsMQhVc2VyTmFtZQYGTGFiZWwxB0NhcHRpb24UFgAAAFJlbGF0w7NyaW8gZGUgQ2xpZW50ZXMMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIUCkZvbnQuU3R5bGULBmZzQm9sZAALVHJhbnNwYXJlbnQJCG1tSGVpZ2h0AxsiBm1tTGVmdANnDAVtbVRvcANnDAdtbVdpZHRoBDkcAQAIQmFuZFR5cGUCAAAAAA1UcHBEZXRhaWxCYW5kDXBwRGV0YWlsQmFuZDEObW1Cb3R0b21PZmZzZXQCAAhtbUhlaWdodAN4Dg9tbVByaW50UG9zaXRpb24CAAAJVHBwREJUZXh0CXBwREJUZXh0MQhVc2VyTmFtZQYHREJUZXh0MQlEYXRhRmllbGQGBkNPRElHTwxEYXRhUGlwZWxpbmUHHGRhU1FMUXVlcnlEYXRhVmlldzEuQ0xJRU5URVMMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULBmZzQm9sZAANVGV4dEFsaWdubWVudAcQdGFSaWdodEp1c3RpZmllZAtUcmFuc3BhcmVudAkQRGF0YVBpcGVsaW5lTmFtZQYIQ0xJRU5URVMIbW1IZWlnaHQDeA4GbW1MZWZ0A3ANBW1tVG9wAgAHbW1XaWR0aAMuQwhCYW5kVHlwZQIEAAAJVHBwREJUZXh0CXBwREJUZXh0MghVc2VyTmFtZQYHREJUZXh0MglEYXRhRmllbGQGBE5PTUUMRGF0YVBpcGVsaW5lBxxkYVNRTFF1ZXJ5RGF0YVZpZXcxLkNMSUVOVEVTDEZvbnQuQ2hhcnNldAcPREVGQVVMVF9DSEFSU0VUCkZvbnQuQ29sb3IHB2NsQmxhY2sJRm9udC5OYW1lBgVBcmlhbAlGb250LlNpemUCCApGb250LlN0eWxlCwZmc0JvbGQAC1RyYW5zcGFyZW50CRBEYXRhUGlwZWxpbmVOYW1lBghDTElFTlRFUwhtbUhlaWdodAN4DgZtbUxlZnQD2lcFbW1Ub3ACAAdtbVdpZHRoBDV4AQAIQmFuZFR5cGUCBAAACVRwcERCVGV4dAlwcERCVGV4dDMIVXNlck5hbWUGB0RCVGV4dDMJRGF0YUZpZWxkBgRGT05FDERhdGFQaXBlbGluZQccZGFTUUxRdWVyeURhdGFWaWV3MS5DTElFTlRFUwxGb250LkNoYXJzZXQHD0RFRkFVTFRfQ0hBUlNFVApGb250LkNvbG9yBwdjbEJsYWNrCUZvbnQuTmFtZQYFQXJpYWwJRm9udC5TaXplAggKRm9udC5TdHlsZQsGZnNCb2xkAAtUcmFuc3BhcmVudAkQRGF0YVBpcGVsaW5lTmFtZQYIQ0xJRU5URVMIbW1IZWlnaHQDeA4GbW1MZWZ0BIbeAQAFbW1Ub3ACAAdtbVdpZHRoA2xpCEJhbmRUeXBlAgQAAAANVHBwRm9vdGVyQmFuZA1wcEZvb3RlckJhbmQxDm1tQm90dG9tT2Zmc2V0AgAIbW1IZWlnaHQCAA9tbVByaW50UG9zaXRpb24CAAAADVRkYURhdGFNb2R1bGUNZGFEYXRhTW9kdWxlMQATVGRhU1FMUXVlcnlEYXRhVmlldxNkYVNRTFF1ZXJ5RGF0YVZpZXcxCFVzZXJOYW1lBg5RdWVyeV9DTElFTlRFUwZIZWlnaHQDjwAETGVmdAIKD05hbWVDb2x1bW5XaWR0aAJpD1NpemVDb2x1bW5XaWR0aAIjCFNvcnRNb2RlAgADVG9wAgoPVHlwZUNvbHVtbldpZHRoAjQFV2lkdGgDyAASQXV0b1NlYXJjaFRhYk9yZGVyAgAAElRwcENoaWxkREJQaXBlbGluZQhDTElFTlRFUxBBdXRvQ3JlYXRlRmllbGRzCAhVc2VyTmFtZQYIQ0xJRU5URVMACFRwcEZpZWxkCHBwRmllbGQxCkZpZWxkQWxpYXMGBkNPRElHTwlGaWVsZE5hbWUGBkNPRElHTwtGaWVsZExlbmd0aAIACERhdGFUeXBlBwlkdEludGVnZXIMRGlzcGxheVdpZHRoAgoIUG9zaXRpb24CAAlUYWJsZU5hbWUGCkNMSUVOVEVTXzEAAAhUcHBGaWVsZAhwcEZpZWxkMgpGaWVsZEFsaWFzBgROT01FCUZpZWxkTmFtZQYETk9NRQtGaWVsZExlbmd0aAIoDERpc3BsYXlXaWR0aAIoCFBvc2l0aW9uAgEJVGFibGVOYW1lBgpDTElFTlRFU18xAAAIVHBwRmllbGQIcHBGaWVsZDMKRmllbGRBbGlhcwYERk9ORQlGaWVsZE5hbWUGBEZPTkULRmllbGRMZW5ndGgCFAxEaXNwbGF5V2lkdGgCFAhQb3NpdGlvbgICCVRhYmxlTmFtZQYKQ0xJRU5URVNfMQAAAAZUZGFTUUwGZGFTUUwxDUNvbGxhdGlvblR5cGUHB2N0QVNDSUkMRGF0YWJhc2VOYW1lBg9ldVNRTENvbm5lY3Rpb24MRGF0YWJhc2VUeXBlBwtkdEludGVyQmFzZRBEYXRhUGlwZWxpbmVOYW1lBghDTElFTlRFUw9Jc0Nhc2VTZW5zaXRpdmUJCUxpbmtDb2xvcgcIY2xNYXJvb24WTWF4U1FMRmllbGRBbGlhc0xlbmd0aAIZD1NRTFRleHQuU3RyaW5ncwEGK1NFTEVDVCBDTElFTlRFU18xLkNPRElHTywgQ0xJRU5URVNfMS5OT01FLCAGFiAgICAgICBDTElFTlRFU18xLkZPTkUGGEZST00gQ0xJRU5URVMgQ0xJRU5URVNfMQYYT1JERVIgQlkgQ0xJRU5URVNfMS5OT01FAAdTUUxUeXBlBwZzcVNRTDIAC1RkYUNyaXRlcmlhC2RhQ3JpdGVyaWExCUNoaWxkVHlwZQIHBUxldmVsAgAIT3BlcmF0b3IHCGRhY29MaWtlAAhUZGFGaWVsZAAFQWxpYXMGBE5PTUUKQXV0b1NlYXJjaAkMRGlzcGxheVdpZHRoAigKRmllbGRBbGlhcwYETk9NRQtGaWVsZExlbmd0aAIoCUZpZWxkTmFtZQYETk9NRQxTUUxGaWVsZE5hbWUGBE5PTUUKVGFibGVBbGlhcwYIQ0xJRU5URVMJVGFibGVOYW1lBghDTElFTlRFUw1UYWJsZVNRTEFsaWFzBgpDTElFTlRFU18xAAAACFRkYUZpZWxkCGRhRmllbGQxBUFsaWFzBgZDT0RJR08IRGF0YVR5cGUHCWR0SW50ZWdlcgxEaXNwbGF5V2lkdGgCCgpGaWVsZEFsaWFzBgZDT0RJR08LRmllbGRMZW5ndGgCAAlGaWVsZE5hbWUGBkNPRElHTwxTUUxGaWVsZE5hbWUGBkNPRElHTwpUYWJsZUFsaWFzBghDTElFTlRFUwlUYWJsZU5hbWUGCENMSUVOVEVTDVRhYmxlU1FMQWxpYXMGCkNMSUVOVEVTXzEAAAhUZGFGaWVsZAhkYUZpZWxkMgVBbGlhcwYETk9NRQxEaXNwbGF5V2lkdGgCKApGaWVsZEFsaWFzBgROT01FC0ZpZWxkTGVuZ3RoAigJRmllbGROYW1lBgROT01FDFNRTEZpZWxkTmFtZQYETk9NRQpUYWJsZUFsaWFzBghDTElFTlRFUwlUYWJsZU5hbWUGCENMSUVOVEVTDVRhYmxlU1FMQWxpYXMGCkNMSUVOVEVTXzEAAAhUZGFGaWVsZAhkYUZpZWxkMwVBbGlhcwYERk9ORQxEaXNwbGF5V2lkdGgCFApGaWVsZEFsaWFzBgRGT05FC0ZpZWxkTGVuZ3RoAhQJRmllbGROYW1lBgRGT05FDFNRTEZpZWxkTmFtZQYERk9ORQpUYWJsZUFsaWFzBghDTElFTlRFUwlUYWJsZU5hbWUGCENMSUVOVEVTDVRhYmxlU1FMQWxpYXMGCkNMSUVOVEVTXzEAAAhUZGFGaWVsZAhkYUZpZWxkNAlDaGlsZFR5cGUCAgVBbGlhcwYETk9NRQxEaXNwbGF5V2lkdGgCKApGaWVsZEFsaWFzBgROT01FC0ZpZWxkTGVuZ3RoAigJRmllbGROYW1lBgROT01FDFNRTEZpZWxkTmFtZQYETk9NRQpUYWJsZUFsaWFzBghDTElFTlRFUwlUYWJsZU5hbWUGCENMSUVOVEVTDVRhYmxlU1FMQWxpYXMGCkNMSUVOVEVTXzEAAAhUZGFUYWJsZQhkYVRhYmxlMQlDaGlsZFR5cGUCBQVBbGlhcwYIQ0xJRU5URVMISm9pblR5cGUHCGRhanROb25lCFNRTEFsaWFzBgpDTElFTlRFU18xClRhYmxlQWxpYXMGCENMSUVOVEVTCVRhYmxlTmFtZQYIQ0xJRU5URVMAAAAAABBUcHBQYXJhbWV0ZXJMaXN0EHBwUGFyYW1ldGVyTGlzdDEAAAAA"/><ROW ITEM_ID="23" FOLDER_ID="7" NAME="Curva ABC produtos" ITEM_SIZE="18831" ITEM_TYPE="1" MODIFIED="38607.81757106481" DELETED="0" TEMPLATE=""/><ROW ITEM_ID="7" FOLDER_ID="7" NAME="Curva ABC produtos - margem de contribuição por vendedor" ITEM_SIZE="22894" ITEM_TYPE="1" MODIFIED="38607.89935021991" TEMPLATE=""/><ROW ITEM_ID="26" FOLDER_ID="10" NAME="Curva ABC fornecedores" ITEM_SIZE="13461" ITEM_TYPE="1" MODIFIED="38608.67471534722" DELETED="0" TEMPLATE=""/><ROW ITEM_ID="9" FOLDER_ID="7" NAME="Listagem de preços" ITEM_SIZE="8975" ITEM_TYPE="1" MODIFIED="38608.0225771412" TEMPLATE=""/><ROW ITEM_ID="10" FOLDER_ID="7" NAME="Inventário por grupos" ITEM_SIZE="17862" ITEM_TYPE="1" MODIFIED="38608.02501203704" TEMPLATE=""/><ROW ITEM_ID="11" FOLDER_ID="7" NAME="Listagem de preços por grupos" ITEM_SIZE="11479" ITEM_TYPE="1" MODIFIED="38608.02489123843" TEMPLATE=""/><ROW ITEM_ID="12" FOLDER_ID="8" NAME="Curva ABC serviços" ITEM_SIZE="18731" ITEM_TYPE="1" MODIFIED="38608.03420818287" TEMPLATE=""/><ROW ITEM_ID="13" FOLDER_ID="8" NAME="Curva ABC serviços - margem de contribuição" ITEM_SIZE="18896" ITEM_TYPE="1" MODIFIED="38608.04023701389" TEMPLATE="VFBGMAlUcHBSZXBvcnQJcHBSZXBvcnQxCEF1dG9TdG9wCAxEYXRhUGlwZWxpbmUHHmRhU1FMUXVlcnlEYXRhVmlldzEuTU9WSU1FTlRPUwtQYXNzU2V0dGluZwcJcHNUd29QYXNzFFByaW50ZXJTZXR1cC5CaW5OYW1lBgdEZWZhdWx0GVByaW50ZXJTZXR1cC5Eb2N1bWVudE5hbWUGBlJlcG9ydBZQcmludGVyU2V0dXAuUGFwZXJOYW1lBgVDYXJ0YRhQcmludGVyU2V0dXAuUHJpbnRlck5hbWUGB0RlZmF1bHQbUHJpbnRlclNldHVwLm1tTWFyZ2luQm90dG9tA84YGVByaW50ZXJTZXR1cC5tbU1hcmdpbkxlZnQDzhgaUHJpbnRlclNldHVwLm1tTWFyZ2luUmlnaHQDzhgYUHJpbnRlclNldHVwLm1tTWFyZ2luVG9wA84YGlByaW50ZXJTZXR1cC5tbVBhcGVySGVpZ2h0BGlDBAAZUHJpbnRlclNldHVwLm1tUGFwZXJXaWR0aARcSwMAFlByaW50ZXJTZXR1cC5QYXBlclNpemUCAQ5TYXZlQXNUZW1wbGF0ZQkmVGVtcGxhdGUuRGF0YWJhc2VTZXR0aW5ncy5EYXRhUGlwZWxpbmUHBnBsSXRlbR5UZW1wbGF0ZS5EYXRhYmFzZVNldHRpbmdzLk5hbWUULgAAAEN1cnZhIEFCQyBzZXJ2acOnb3MgLSBtYXJnZW0gZGUgY29udHJpYnVpw6fDo28jVGVtcGxhdGUuRGF0YWJhc2VTZXR0aW5ncy5OYW1lRmllbGQGBE5BTUUnVGVtcGxhdGUuRGF0YWJhc2VTZXR0aW5ncy5UZW1wbGF0ZUZpZWxkBghURU1QTEFURQ9UZW1wbGF0ZS5TYXZlVG8HCnN0RGF0YWJhc2UKRGV2aWNlVHlwZQYGU2NyZWVuGk91dGxpbmVTZXR0aW5ncy5DcmVhdGVOb2RlCR9PdXRsaW5lU2V0dGluZ3MuQ3JlYXRlUGFnZU5vZGVzCRdPdXRsaW5lU2V0dGluZ3MuRW5hYmxlZAgXT3V0bGluZVNldHRpbmdzLlZpc2libGUIFFNob3dBdXRvU2VhcmNoRGlhbG9nCSBUZXh0U2VhcmNoU2V0dGluZ3MuRGVmYXVsdFN0cmluZwYKPEZpbmRUZXh0PhpUZXh0U2VhcmNoU2V0dGluZ3MuRW5hYmxlZAgETGVmdAMhAQNUb3ADRgEHVmVyc2lvbgYENy4wNA1tbUNvbHVtbldpZHRoAgAQRGF0YVBpcGVsaW5lTmFtZQYKTU9WSU1FTlRPUwANVHBwSGVhZGVyQmFuZA1wcEhlYWRlckJhbmQxC1ByaW50SGVpZ2h0BwlwaER5bmFtaWMObW1Cb3R0b21PZmZzZXQCAAhtbUhlaWdodAOvUg9tbVByaW50UG9zaXRpb24CAAAIVHBwTGFiZWwIcHBMYWJlbDEIVXNlck5hbWUGBkxhYmVsMQdDYXB0aW9uFC4AAABDdXJ2YSBBQkMgU2VydmnDp29zIC0gTWFyZ2VtIGRlIENvbnRyaWJ1acOnw6NvDEZvbnQuQ2hhcnNldAcPREVGQVVMVF9DSEFSU0VUCkZvbnQuQ29sb3IHB2NsQmxhY2sJRm9udC5OYW1lBgVBcmlhbAlGb250LlNpemUCCgpGb250LlN0eWxlCwZmc0JvbGQAC1RyYW5zcGFyZW50CQhtbUhlaWdodANfEAZtbUxlZnQDZwwFbW1Ub3ADZwwHbW1XaWR0aATAMgEACEJhbmRUeXBlAgAAABFUcHBTeXN0ZW1WYXJpYWJsZRFwcFN5c3RlbVZhcmlhYmxlMQhVc2VyTmFtZQYPU3lzdGVtVmFyaWFibGUxB1ZhclR5cGUHCHZ0UGFnZU5vDEZvbnQuQ2hhcnNldAcPREVGQVVMVF9DSEFSU0VUCkZvbnQuQ29sb3IHB2NsQmxhY2sJRm9udC5OYW1lBgVBcmlhbAlGb250LlNpemUCCgpGb250LlN0eWxlCwZmc0JvbGQADVRleHRBbGlnbm1lbnQHEHRhUmlnaHRKdXN0aWZpZWQLVHJhbnNwYXJlbnQJCG1tSGVpZ2h0A4kQBm1tTGVmdATx4QIABW1tVG9wA2cMB21tV2lkdGgDcSwIQmFuZFR5cGUCAAAAB1RwcExpbmUHcHBMaW5lMQhVc2VyTmFtZQYFTGluZTEGV2VpZ2h0BQAAAAAAAADA/j8IbW1IZWlnaHQDKwUGbW1MZWZ0AgAFbW1Ub3ADAh8HbW1XaWR0aATAGQMACEJhbmRUeXBlAgAAAAdUcHBNZW1vB3BwTWVtbzEIVXNlck5hbWUGBU1lbW8xB0NhcHRpb24GBU1lbW8xCENoYXJXcmFwCAxGb250LkNoYXJzZXQHD0RFRkFVTFRfQ0hBUlNFVApGb250LkNvbG9yBwdjbEJsYWNrCUZvbnQuTmFtZQYFQXJpYWwJRm9udC5TaXplAggKRm9udC5TdHlsZQsIZnNJdGFsaWMAB1N0cmV0Y2gJC1RyYW5zcGFyZW50CQhtbUhlaWdodAOBDwZtbUxlZnQDZwwFbW1Ub3ADGyIHbW1XaWR0aAQEAwMACEJhbmRUeXBlAgAObW1Cb3R0b21PZmZzZXQCABBtbU92ZXJGbG93T2Zmc2V0AgAObW1TdG9wUG9zaXRpb24CAAltbUxlYWRpbmcCAAAACFRwcExhYmVsCHBwTGFiZWwzCFVzZXJOYW1lBgZMYWJlbDMHQ2FwdGlvbhQHAAAAQ8OzZGlnbwxGb250LkNoYXJzZXQHD0RFRkFVTFRfQ0hBUlNFVApGb250LkNvbG9yBwdjbEJsYWNrCUZvbnQuTmFtZQYFQXJpYWwJRm9udC5TaXplAggKRm9udC5TdHlsZQsIZnNJdGFsaWMADVRleHRBbGlnbm1lbnQHEHRhUmlnaHRKdXN0aWZpZWQLVHJhbnNwYXJlbnQJCG1tSGVpZ2h0A2cMBm1tTGVmdAPhOQVtbVRvcAMlQgdtbVdpZHRoAyQjCEJhbmRUeXBlAgAAAAhUcHBMYWJlbAhwcExhYmVsNAhVc2VyTmFtZQYGTGFiZWw0B0NhcHRpb24UCwAAAERlc2NyacOnw6NvDEZvbnQuQ2hhcnNldAcPREVGQVVMVF9DSEFSU0VUCkZvbnQuQ29sb3IHB2NsQmxhY2sJRm9udC5OYW1lBgVBcmlhbAlGb250LlNpemUCCApGb250LlN0eWxlCwhmc0l0YWxpYwALVHJhbnNwYXJlbnQJCG1tSGVpZ2h0A+YMBm1tTGVmdANJZQVtbVRvcAMlQgdtbVdpZHRoA0cxCEJhbmRUeXBlAgAAAAhUcHBMYWJlbAhwcExhYmVsNQhVc2VyTmFtZQYGTGFiZWw1B0NhcHRpb24GClF1YW50aWRhZGUMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULCGZzSXRhbGljAA1UZXh0QWxpZ25tZW50BxB0YVJpZ2h0SnVzdGlmaWVkC1RyYW5zcGFyZW50CQhtbUhlaWdodANnDAZtbUxlZnQEYZwBAAVtbVRvcAMlQgdtbVdpZHRoA9g4CEJhbmRUeXBlAgAAAAhUcHBMYWJlbAhwcExhYmVsNghVc2VyTmFtZQYGTGFiZWw2B0NhcHRpb24GBUJydXRvDEZvbnQuQ2hhcnNldAcPREVGQVVMVF9DSEFSU0VUCkZvbnQuQ29sb3IHB2NsQmxhY2sJRm9udC5OYW1lBgVBcmlhbAlGb250LlNpemUCCApGb250LlN0eWxlCwhmc0l0YWxpYwANVGV4dEFsaWdubWVudAcQdGFSaWdodEp1c3RpZmllZAtUcmFuc3BhcmVudAkIbW1IZWlnaHQDZwwGbW1MZWZ0BKIAAgAFbW1Ub3ADJUIHbW1XaWR0aAPfGghCYW5kVHlwZQIAAAAIVHBwTGFiZWwIcHBMYWJlbDcIVXNlck5hbWUGBkxhYmVsNwdDYXB0aW9uBgtMaXF1aWRvL0NNVgxGb250LkNoYXJzZXQHD0RFRkFVTFRfQ0hBUlNFVApGb250LkNvbG9yBwdjbEJsYWNrCUZvbnQuTmFtZQYFQXJpYWwJRm9udC5TaXplAggKRm9udC5TdHlsZQsIZnNJdGFsaWMADVRleHRBbGlnbm1lbnQHEHRhUmlnaHRKdXN0aWZpZWQLVHJhbnNwYXJlbnQJCG1tSGVpZ2h0A2cMBm1tTGVmdAT5KQIABW1tVG9wAyVCB21tV2lkdGgDDD8IQmFuZFR5cGUCAAAACFRwcExhYmVsCHBwTGFiZWw4CFVzZXJOYW1lBgZMYWJlbDgHQ2FwdGlvbhQOAAAAQ29udHJpYnVpw6fDo28MRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULCGZzSXRhbGljAA1UZXh0QWxpZ25tZW50BxB0YVJpZ2h0SnVzdGlmaWVkC1RyYW5zcGFyZW50CQhtbUhlaWdodANnDAZtbUxlZnQEhXgCAAVtbVRvcAMlQgdtbVdpZHRoAwM+CEJhbmRUeXBlAgAAAAdUcHBMaW5lB3BwTGluZTIIVXNlck5hbWUGBUxpbmUyBldlaWdodAUAAAAAAAAAwP4/CG1tSGVpZ2h0AxoDBm1tTGVmdAIABW1tVG9wA5VPB21tV2lkdGgEwBkDAAhCYW5kVHlwZQIAAAAIVHBwTGFiZWwJcHBMYWJlbDEwCFVzZXJOYW1lBgdMYWJlbDEwB0NhcHRpb24GASUMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULCGZzSXRhbGljAA1UZXh0QWxpZ25tZW50BxB0YVJpZ2h0SnVzdGlmaWVkC1RyYW5zcGFyZW50CQhtbUhlaWdodAPmDAZtbUxlZnQEbOQCAAVtbVRvcAMlQgdtbVdpZHRoA+wJCEJhbmRUeXBlAgAAAAANVHBwRGV0YWlsQmFuZA1wcERldGFpbEJhbmQxDm1tQm90dG9tT2Zmc2V0AgAIbW1IZWlnaHQDZwwPbW1QcmludFBvc2l0aW9uAgAACVRwcERCVGV4dAlwcERCVGV4dDEIVXNlck5hbWUGB0RCVGV4dDEJRGF0YUZpZWxkBgZDT0RJR08MRGF0YVBpcGVsaW5lBx5kYVNRTFF1ZXJ5RGF0YVZpZXcxLk1PVklNRU5UT1MMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULAA1UZXh0QWxpZ25tZW50BxB0YVJpZ2h0SnVzdGlmaWVkC1RyYW5zcGFyZW50CRBEYXRhUGlwZWxpbmVOYW1lBgpNT1ZJTUVOVE9TCG1tSGVpZ2h0A2cMBm1tTGVmdAOTMAVtbVRvcAIAB21tV2lkdGgDcSwIQmFuZFR5cGUCBAAACVRwcERCVGV4dAlwcERCVGV4dDIIVXNlck5hbWUGB0RCVGV4dDIJRGF0YUZpZWxkBglERVNDUklDQU8MRGF0YVBpcGVsaW5lBx5kYVNRTFF1ZXJ5RGF0YVZpZXcxLk1PVklNRU5UT1MMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULAAtUcmFuc3BhcmVudAkQRGF0YVBpcGVsaW5lTmFtZQYKTU9WSU1FTlRPUwhtbUhlaWdodANnDAZtbUxlZnQDSWUFbW1Ub3ACAAdtbVdpZHRoBIdEAQAIQmFuZFR5cGUCBAAACVRwcERCVGV4dAlwcERCVGV4dDMIVXNlck5hbWUGB0RCVGV4dDMJRGF0YUZpZWxkBhlTVU1fSU5ESVZJRFVBSVNfMV9RVUFOVElEDERhdGFQaXBlbGluZQceZGFTUUxRdWVyeURhdGFWaWV3MS5NT1ZJTUVOVE9TDEZvbnQuQ2hhcnNldAcPREVGQVVMVF9DSEFSU0VUCkZvbnQuQ29sb3IHB2NsQmxhY2sJRm9udC5OYW1lBgVBcmlhbAlGb250LlNpemUCCApGb250LlN0eWxlCwANVGV4dEFsaWdubWVudAcQdGFSaWdodEp1c3RpZmllZAtUcmFuc3BhcmVudAkQRGF0YVBpcGVsaW5lTmFtZQYKTU9WSU1FTlRPUwhtbUhlaWdodANnDAZtbUxlZnQE6qwBAAVtbVRvcAIAB21tV2lkdGgDVykIQmFuZFR5cGUCBAAACVRwcERCVGV4dAlwcERCVGV4dDQIVXNlck5hbWUGB0RCVGV4dDQJRGF0YUZpZWxkBhlTVU1fSU5ESVZJRFVBSVNfMV9WQUxPUl9QDERhdGFQaXBlbGluZQceZGFTUUxRdWVyeURhdGFWaWV3MS5NT1ZJTUVOVE9TDURpc3BsYXlGb3JtYXQGDyMsMC4wMDsoIywwLjAwKQxGb250LkNoYXJzZXQHD0RFRkFVTFRfQ0hBUlNFVApGb250LkNvbG9yBwdjbEJsYWNrCUZvbnQuTmFtZQYFQXJpYWwJRm9udC5TaXplAggKRm9udC5TdHlsZQsADVRleHRBbGlnbm1lbnQHEHRhUmlnaHRKdXN0aWZpZWQLVHJhbnNwYXJlbnQJEERhdGFQaXBlbGluZU5hbWUGCk1PVklNRU5UT1MIbW1IZWlnaHQDZwwGbW1MZWZ0BGTaAQAFbW1Ub3ACAAdtbVdpZHRoAyVCCEJhbmRUeXBlAgQAAAlUcHBEQlRleHQJcHBEQlRleHQ1CFVzZXJOYW1lBgdEQlRleHQ1CURhdGFGaWVsZAYZU1VNX0lORElWSURVQUlTXzFfVE9UQUxfQwxEYXRhUGlwZWxpbmUHHmRhU1FMUXVlcnlEYXRhVmlldzEuTU9WSU1FTlRPUw1EaXNwbGF5Rm9ybWF0Bg8jLDAuMDA7KCMsMC4wMCkMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULAA1UZXh0QWxpZ25tZW50BxB0YVJpZ2h0SnVzdGlmaWVkC1RyYW5zcGFyZW50CRBEYXRhUGlwZWxpbmVOYW1lBgpNT1ZJTUVOVE9TCG1tSGVpZ2h0A2cMBm1tTGVmdATfJgIABW1tVG9wAgAHbW1XaWR0aAMlQghCYW5kVHlwZQIEAAAJVHBwREJUZXh0CXBwREJUZXh0NghVc2VyTmFtZQYHREJUZXh0NglEYXRhRmllbGQGGVNVTV9JTkRJVklEVUFJU18xX1RPVEFMX0wMRGF0YVBpcGVsaW5lBx5kYVNRTFF1ZXJ5RGF0YVZpZXcxLk1PVklNRU5UT1MNRGlzcGxheUZvcm1hdAYPIywwLjAwOygjLDAuMDApDEZvbnQuQ2hhcnNldAcPREVGQVVMVF9DSEFSU0VUCkZvbnQuQ29sb3IHB2NsQmxhY2sJRm9udC5OYW1lBgVBcmlhbAlGb250LlNpemUCCApGb250LlN0eWxlCwANVGV4dEFsaWdubWVudAcQdGFSaWdodEp1c3RpZmllZAtUcmFuc3BhcmVudAkQRGF0YVBpcGVsaW5lTmFtZQYKTU9WSU1FTlRPUwhtbUhlaWdodANnDAZtbUxlZnQEY3QCAAVtbVRvcAIAB21tV2lkdGgDJUIIQmFuZFR5cGUCBAAAC1RwcFZhcmlhYmxlC3BwVmFyaWFibGUxCFVzZXJOYW1lBglWYXJpYWJsZTEJQ2FsY09yZGVyAgAMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULCGZzSXRhbGljAA1UZXh0QWxpZ25tZW50BxB0YVJpZ2h0SnVzdGlmaWVkC1RyYW5zcGFyZW50CQhtbUhlaWdodAPmDAZtbUxlZnQE1r8CAAVtbVRvcAIAB21tV2lkdGgDoi4IQmFuZFR5cGUCBAAAC1RwcFZhcmlhYmxlC3BwVmFyaWFibGUyCFVzZXJOYW1lBglWYXJpYWJsZTIJQ2FsY09yZGVyAgEMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULCGZzSXRhbGljAAtUcmFuc3BhcmVudAkIbW1IZWlnaHQD5gwGbW1MZWZ0BK74AgAFbW1Ub3ACAAdtbVdpZHRoA6wUCEJhbmRUeXBlAgQAAAlUcHBEQkNhbGMJcHBEQkNhbGM0CFVzZXJOYW1lBgdEQkNhbGM0CURhdGFGaWVsZAYZU1VNX0lORElWSURVQUlTXzFfVE9UQUxfTAxEYXRhUGlwZWxpbmUHHmRhU1FMUXVlcnlEYXRhVmlldzEuTU9WSU1FTlRPUwxGb250LkNoYXJzZXQHD0RFRkFVTFRfQ0hBUlNFVApGb250LkNvbG9yBwdjbEJsYWNrCUZvbnQuTmFtZQYFQXJpYWwJRm9udC5TaXplAggKRm9udC5TdHlsZQsAC1RyYW5zcGFyZW50CQdWaXNpYmxlCBBEYXRhUGlwZWxpbmVOYW1lBgpNT1ZJTUVOVE9TCG1tSGVpZ2h0A2cMBm1tTGVmdAQ7rQIABW1tVG9wAgAHbW1XaWR0aAOBDwhCYW5kVHlwZQIEAAAJVHBwREJDYWxjCXBwREJDYWxjNQhVc2VyTmFtZQYHREJDYWxjNQlEYXRhRmllbGQGBkNPRElHTwxEYXRhUGlwZWxpbmUHHmRhU1FMUXVlcnlEYXRhVmlldzEuTU9WSU1FTlRPUwxGb250LkNoYXJzZXQHD0RFRkFVTFRfQ0hBUlNFVApGb250LkNvbG9yBwdjbEJsYWNrCUZvbnQuTmFtZQYFQXJpYWwJRm9udC5TaXplAggKRm9udC5TdHlsZQsADVRleHRBbGlnbm1lbnQHEHRhUmlnaHRKdXN0aWZpZWQLVHJhbnNwYXJlbnQJCkRCQ2FsY1R5cGUHB2RjQ291bnQQRGF0YVBpcGVsaW5lTmFtZQYKTU9WSU1FTlRPUwhtbUhlaWdodANnDAZtbUxlZnQDZwwFbW1Ub3ACAAdtbVdpZHRoAwIfCEJhbmRUeXBlAgQAAAANVHBwRm9vdGVyQmFuZA1wcEZvb3RlckJhbmQxDm1tQm90dG9tT2Zmc2V0AgAIbW1IZWlnaHQDzhgPbW1QcmludFBvc2l0aW9uAgAACFRwcExhYmVsCHBwTGFiZWwyCFVzZXJOYW1lBgZMYWJlbDIHQ2FwdGlvbhQzAAAARW1wcmVzYTEgVGVjbm9sb2dpYSBkZSBOZWfDs2Npb3MgLSB3d3cuZW1wcmVzYTEubmV0DEZvbnQuQ2hhcnNldAcPREVGQVVMVF9DSEFSU0VUCkZvbnQuQ29sb3IHB2NsQmxhY2sJRm9udC5OYW1lBgVBcmlhbAlGb250LlNpemUCCApGb250LlN0eWxlCwALVHJhbnNwYXJlbnQJCG1tSGVpZ2h0A7wMBm1tTGVmdANnDAVtbVRvcAMTDAdtbVdpZHRoBKgUAQAIQmFuZFR5cGUCCAAAAA5UcHBTdW1tYXJ5QmFuZA5wcFN1bW1hcnlCYW5kMQ5tbUJvdHRvbU9mZnNldAIACG1tSGVpZ2h0A5IRD21tUHJpbnRQb3NpdGlvbgIAAAlUcHBEQkNhbGMJcHBEQkNhbGMxCFVzZXJOYW1lBgdEQkNhbGMxCURhdGFGaWVsZAYZU1VNX0lORElWSURVQUlTXzFfVkFMT1JfUAxEYXRhUGlwZWxpbmUHHmRhU1FMUXVlcnlEYXRhVmlldzEuTU9WSU1FTlRPUw1EaXNwbGF5Rm9ybWF0Bg8jLDAuMDA7KCMsMC4wMCkMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULBmZzQm9sZAhmc0l0YWxpYwANVGV4dEFsaWdubWVudAcQdGFSaWdodEp1c3RpZmllZAtUcmFuc3BhcmVudAkQRGF0YVBpcGVsaW5lTmFtZQYKTU9WSU1FTlRPUwhtbUhlaWdodAPmDAZtbUxlZnQEW9kBAAVtbVRvcAOsBAdtbVdpZHRoAy5DCEJhbmRUeXBlAgcAAAlUcHBEQkNhbGMJcHBEQkNhbGMyCFVzZXJOYW1lBgdEQkNhbGMyCURhdGFGaWVsZAYZU1VNX0lORElWSURVQUlTXzFfVE9UQUxfQwxEYXRhUGlwZWxpbmUHHmRhU1FMUXVlcnlEYXRhVmlldzEuTU9WSU1FTlRPUw1EaXNwbGF5Rm9ybWF0Bg8jLDAuMDA7KCMsMC4wMCkMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULBmZzQm9sZAhmc0l0YWxpYwANVGV4dEFsaWdubWVudAcQdGFSaWdodEp1c3RpZmllZAtUcmFuc3BhcmVudAkQRGF0YVBpcGVsaW5lTmFtZQYKTU9WSU1FTlRPUwhtbUhlaWdodAPmDAZtbUxlZnQE3yYCAAVtbVRvcAOsBAdtbVdpZHRoAy5DCEJhbmRUeXBlAgcAAAlUcHBEQkNhbGMJcHBEQkNhbGMzCFVzZXJOYW1lBgdEQkNhbGMzCURhdGFGaWVsZAYZU1VNX0lORElWSURVQUlTXzFfVE9UQUxfTAxEYXRhUGlwZWxpbmUHHmRhU1FMUXVlcnlEYXRhVmlldzEuTU9WSU1FTlRPUw1EaXNwbGF5Rm9ybWF0Bg8jLDAuMDA7KCMsMC4wMCkMRm9udC5DaGFyc2V0Bw9ERUZBVUxUX0NIQVJTRVQKRm9udC5Db2xvcgcHY2xCbGFjawlGb250Lk5hbWUGBUFyaWFsCUZvbnQuU2l6ZQIICkZvbnQuU3R5bGULBmZzQm9sZAhmc0l0YWxpYwANVGV4dEFsaWdubWVudAcQdGFSaWdodEp1c3RpZmllZAtUcmFuc3BhcmVudAkQRGF0YVBpcGVsaW5lTmFtZQYKTU9WSU1FTlRPUwhtbUhlaWdodAPmDAZtbUxlZnQEWnMCAAVtbVRvcAOsBAdtbVdpZHRoAy5DCEJhbmRUeXBlAgcAAAdUcHBMaW5lB3BwTGluZTMIVXNlck5hbWUGBUxpbmUzBldlaWdodAUAAAAAAAAAwP4/CG1tSGVpZ2h0AxoDBm1tTGVmdAIABW1tVG9wAxECB21tV2lkdGgEwBkDAAhCYW5kVHlwZQIHAAAIVHBwTGFiZWwIcHBMYWJlbDkIVXNlck5hbWUGBkxhYmVsOQdDYXB0aW9uBgVUT1RBTAxGb250LkNoYXJzZXQHD0RFRkFVTFRfQ0hBUlNFVApGb250LkNvbG9yBwdjbEJsYWNrCUZvbnQuTmFtZQYFQXJpYWwJRm9udC5TaXplAggKRm9udC5TdHlsZQsGZnNCb2xkCGZzSXRhbGljAAtUcmFuc3BhcmVudAkIbW1IZWlnaHQD5gwGbW1MZWZ0A0llBW1tVG9wA6wEB21tV2lkdGgD4CQIQmFuZFR5cGUCBwAAAA1UcmFDb2RlTW9kdWxlDXJhQ29kZU1vZHVsZTENUHJvZ3JhbVN0cmVhbQo0BgAAAQYNVHJhVmFyUHJvZ3JhbQlDaGlsZFR5cGUCEQtQcm9ncmFtTmFtZQYJVmFyaWFibGVzC1Byb2dyYW1UeXBlBwt0dFByb2NlZHVyZQZTb3VyY2UGP3Byb2NlZHVyZSBWYXJpYWJsZXM7DQp2YXINCiAgIFRvdGFsOiBleHRlbmRlZDsNCmJlZ2luDQoNCmVuZDsNCgABBg9UcmFFdmVudEhhbmRsZXILUHJvZ3JhbU5hbWUGDE1lbW8xT25QcmludAtQcm9ncmFtVHlwZQcLdHRQcm9jZWR1cmUGU291cmNlBlxwcm9jZWR1cmUgTWVtbzFPblByaW50Ow0KYmVnaW4NCiAgUmVwb3J0LkdldEF1dG9TZWFyY2hEZXNjcmlwdGlvbkxpbmVzKE1lbW8xLkxpbmVzKTsNCmVuZDsNCg1Db21wb25lbnROYW1lBgVNZW1vMQlFdmVudE5hbWUGB09uUHJpbnQHRXZlbnRJRAIgAAEGD1RyYUV2ZW50SGFuZGxlcgtQcm9ncmFtTmFtZQYiUmVwb3J0QmVmb3JlQXV0b1NlYXJjaERpYWxvZ0NyZWF0ZQtQcm9ncmFtVHlwZQcLdHRQcm9jZWR1cmUGU291cmNlFMAAAABwcm9jZWR1cmUgUmVwb3J0QmVmb3JlQXV0b1NlYXJjaERpYWxvZ0NyZWF0ZTsNCmJlZ2luDQogIFJlcG9ydC5BdXRvU2VhcmNoRmllbGRzWzBdLkZpZWxkQWxpYXMgOj0gJ0RhdGEgZGUgRmVjaGFtZW50byc7DQogIFJlcG9ydC5BdXRvU2VhcmNoRmllbGRzWzFdLkZpZWxkQWxpYXMgOj0gJ0PDs2RpZ28gZGEgRW1wcmVzYSc7DQplbmQ7DQoNQ29tcG9uZW50TmFtZQYGUmVwb3J0CUV2ZW50TmFtZQYcQmVmb3JlQXV0b1NlYXJjaERpYWxvZ0NyZWF0ZQdFdmVudElEAkgAAQYPVHJhRXZlbnRIYW5kbGVyC1Byb2dyYW1OYW1lBhRSZXBvcnRPbkVuZEZpcnN0UGFzcwtQcm9ncmFtVHlwZQcLdHRQcm9jZWR1cmUGU291cmNlBklwcm9jZWR1cmUgUmVwb3J0T25FbmRGaXJzdFBhc3M7DQpiZWdpbg0KICBUb3RhbCA6PSBEQkNhbGMzLlZhbHVlOw0KZW5kOw0KDUNvbXBvbmVudE5hbWUGBlJlcG9ydAlFdmVudE5hbWUGDk9uRW5kRmlyc3RQYXNzB0V2ZW50SUQCEAABBg9UcmFFdmVudEhhbmRsZXILUHJvZ3JhbU5hbWUGD1ZhcmlhYmxlMU9uQ2FsYwtQcm9ncmFtVHlwZQcLdHRQcm9jZWR1cmUGU291cmNlBoNwcm9jZWR1cmUgVmFyaWFibGUxT25DYWxjKHZhciBWYWx1ZTogVmFyaWFudCk7DQpiZWdpbg0KDQogIFZhbHVlIDo9IEludFRvU3RyKFRydW5jKChEQkNhbGM0LlZhbHVlICogMTAwKSAvIFRvdGFsKSkgKyAnJSc7DQoNCmVuZDsNCg1Db21wb25lbnROYW1lBglWYXJpYWJsZTEJRXZlbnROYW1lBgZPbkNhbGMHRXZlbnRJRAIhAAEGD1RyYUV2ZW50SGFuZGxlcgtQcm9ncmFtTmFtZQYPVmFyaWFibGUyT25DYWxjC1Byb2dyYW1UeXBlBwt0dFByb2NlZHVyZQZTb3VyY2UG5nByb2NlZHVyZSBWYXJpYWJsZTJPbkNhbGModmFyIFZhbHVlOiBWYXJpYW50KTsNCmJlZ2luDQoNCiAgaWYgKChEQkNhbGM0LlZhbHVlICogMTAwKSAvIFRvdGFsKSA+IDkwIHRoZW4NCiAgICBWYWx1ZSA6PSAnQycNCiAgZWxzZSBpZiAoKERCQ2FsYzQuVmFsdWUgKiAxMDApIC8gVG90YWwpID4gNzAgdGhlbg0KICAgIFZhbHVlIDo9ICdCJw0KICBlbHNlIA0KICAgIFZhbHVlIDo9ICdBJzsNCg0KZW5kOw0KDUNvbXBvbmVudE5hbWUGCVZhcmlhYmxlMglFdmVudE5hbWUGBk9uQ2FsYwdFdmVudElEAiEAAAAADVRkYURhdGFNb2R1bGUNZGFEYXRhTW9kdWxlMQATVGRhU1FMUXVlcnlEYXRhVmlldxNkYVNRTFF1ZXJ5RGF0YVZpZXcxCFVzZXJOYW1lBhBRdWVyeV9NT1ZJTUVOVE9TBkhlaWdodAPCAARMZWZ0AgoPTmFtZUNvbHVtbldpZHRoA5wAD1NpemVDb2x1bW5XaWR0aAIjCFNvcnRNb2RlAgADVG9wAgoPVHlwZUNvbHVtbldpZHRoAjQFV2lkdGgDFAESQXV0b1NlYXJjaFRhYk9yZGVyAgAAElRwcENoaWxkREJQaXBlbGluZQpNT1ZJTUVOVE9TEEF1dG9DcmVhdGVGaWVsZHMICFVzZXJOYW1lBgpNT1ZJTUVOVE9TAAhUcHBGaWVsZAhwcEZpZWxkMQpGaWVsZEFsaWFzBgZDT0RJR08JRmllbGROYW1lBgZDT0RJR08LRmllbGRMZW5ndGgCAAhJc0RldGFpbAkIRGF0YVR5cGUHCWR0SW50ZWdlcgxEaXNwbGF5V2lkdGgCCghQb3NpdGlvbgIACVRhYmxlTmFtZQYKUFJPRFVUT1NfMQAACFRwcEZpZWxkCHBwRmllbGQyCkZpZWxkQWxpYXMGCURFU0NSSUNBTwlGaWVsZE5hbWUGCURFU0NSSUNBTwtGaWVsZExlbmd0aAI8CElzRGV0YWlsCQxEaXNwbGF5V2lkdGgCPAhQb3NpdGlvbgIBCVRhYmxlTmFtZQYKUFJPRFVUT1NfMQAACFRwcEZpZWxkCHBwRmllbGQzCkZpZWxkQWxpYXMGEFNvbWEoUVVBTlRJREFERSkJRmllbGROYW1lBhlTVU1fSU5ESVZJRFVBSVNfMV9RVUFOVElEC0ZpZWxkTGVuZ3RoAgAITGlua2FibGUICERhdGFUeXBlBwhkdERvdWJsZQxEaXNwbGF5V2lkdGgCCghQb3NpdGlvbgICCVRhYmxlTmFtZQYNSU5ESVZJRFVBSVNfMQAACFRwcEZpZWxkCHBwRmllbGQ0CkZpZWxkQWxpYXMGEFNvbWEoVkFMT1JfUEFHTykJRmllbGROYW1lBhlTVU1fSU5ESVZJRFVBSVNfMV9WQUxPUl9QC0ZpZWxkTGVuZ3RoAgIITGlua2FibGUICERhdGFUeXBlBwhkdERvdWJsZQxEaXNwbGF5V2lkdGgCEAhQb3NpdGlvbgIDCVRhYmxlTmFtZQYNSU5ESVZJRFVBSVNfMQAACFRwcEZpZWxkCHBwRmllbGQ1CkZpZWxkQWxpYXMGEVNvbWEoVE9UQUxfQ1VTVE8pCUZpZWxkTmFtZQYZU1VNX0lORElWSURVQUlTXzFfVE9UQUxfQwtGaWVsZExlbmd0aAICCExpbmthYmxlCAhEYXRhVHlwZQcIZHREb3VibGUMRGlzcGxheVdpZHRoAhAIUG9zaXRpb24CBAlUYWJsZU5hbWUGDUlORElWSURVQUlTXzEAAAhUcHBGaWVsZAhwcEZpZWxkNgpGaWVsZEFsaWFzBhFTb21hKFRPVEFMX0xVQ1JPKQlGaWVsZE5hbWUGGVNVTV9JTkRJVklEVUFJU18xX1RPVEFMX0wLRmllbGRMZW5ndGgCAghMaW5rYWJsZQgIRGF0YVR5cGUHCGR0RG91YmxlDERpc3BsYXlXaWR0aAIQCFBvc2l0aW9uAgUJVGFibGVOYW1lBg1JTkRJVklEVUFJU18xAAAABlRkYVNRTAZkYVNRTDENQ29sbGF0aW9uVHlwZQcHY3RBU0NJSQxEYXRhYmFzZU5hbWUGD2V1U1FMQ29ubmVjdGlvbgxEYXRhYmFzZVR5cGUHC2R0SW50ZXJCYXNlEERhdGFQaXBlbGluZU5hbWUGCk1PVklNRU5UT1MPSXNDYXNlU2Vuc2l0aXZlCRNHcm91cEJ5RmllbGRzU3luY2VkCQlMaW5rQ29sb3IHCGNsTWFyb29uFk1heFNRTEZpZWxkQWxpYXNMZW5ndGgCGQ9TUUxUZXh0LlN0cmluZ3MBBjBTRUxFQ1QgUFJPRFVUT1NfMS5DT0RJR08sIFBST0RVVE9TXzEuREVTQ1JJQ0FPLCAGQCAgICAgICBTVU0oSU5ESVZJRFVBSVNfMS5RVUFOVElEQURFKSBTVU1fSU5ESVZJRFVBSVNfMV9RVUFOVElELCAGQCAgICAgICBTVU0oSU5ESVZJRFVBSVNfMS5WQUxPUl9QQUdPKSBTVU1fSU5ESVZJRFVBSVNfMV9WQUxPUl9QLCAGQSAgICAgICBTVU0oSU5ESVZJRFVBSVNfMS5UT1RBTF9DVVNUTykgU1VNX0lORElWSURVQUlTXzFfVE9UQUxfQywgBj8gICAgICAgU1VNKElORElWSURVQUlTXzEuVE9UQUxfTFVDUk8pIFNVTV9JTkRJVklEVUFJU18xX1RPVEFMX0wGHEZST00gTU9WSU1FTlRPUyBNT1ZJTUVOVE9TXzEGLiAgICAgIElOTkVSIEpPSU4gSU5ESVZJRFVBSVMgSU5ESVZJRFVBSVNfMSBPTiAGNiAgICAgKElORElWSURVQUlTXzEuQ09ETU9WU0FJREEgPSBNT1ZJTUVOVE9TXzEuQ09ESUdPKQYoICAgICAgSU5ORVIgSk9JTiBQUk9EVVRPUyBQUk9EVVRPU18xIE9OIAYzICAgICAoUFJPRFVUT1NfMS5DT0RJR08gPSBJTkRJVklEVUFJU18xLkNPRFBST0RVVE8pBh1XSEVSRSAoIE1PVklNRU5UT1NfMS5FUyA9IDIgKQYpICAgICAgIEFORCAoIE1PVklNRU5UT1NfMS5USVBPIElOICgzLDYpICkGJSAgICAgICBBTkQgKCBJTkRJVklEVUFJU18xLlBTID0gJ1MnICkGKiAgICAgICBBTkQgKCBJTkRJVklEVUFJU18xLlZFTkRJRE8gPSAnUycgKQYmICAgICAgIEFORCAoIFBST0RVVE9TXzEuT0NVTFRPID0gJ04nICkGMEdST1VQIEJZIFBST0RVVE9TXzEuQ09ESUdPLCBQUk9EVVRPU18xLkRFU0NSSUNBTwYPT1JERVIgQlkgNiBERVNDAAdTUUxUeXBlBwZzcVNRTDIADlRkYUNhbGN1bGF0aW9uDmRhQ2FsY3VsYXRpb24xCUNoaWxkVHlwZQIIBUFsaWFzBhBTb21hKFFVQU5USURBREUpCERhdGFUeXBlBwhkdERvdWJsZQxEaXNwbGF5V2lkdGgCCgpGaWVsZEFsaWFzBgpRVUFOVElEQURFC0ZpZWxkTGVuZ3RoAgAJRmllbGROYW1lBgpRVUFOVElEQURFCExpbmthYmxlCAxTUUxGaWVsZE5hbWUGGVNVTV9JTkRJVklEVUFJU18xX1FVQU5USUQKVGFibGVBbGlhcwYLSU5ESVZJRFVBSVMJVGFibGVOYW1lBgtJTkRJVklEVUFJUw1UYWJsZVNRTEFsaWFzBg1JTkRJVklEVUFJU18xCENhbGNUeXBlBwdkYWNhU3VtAAAOVGRhQ2FsY3VsYXRpb24OZGFDYWxjdWxhdGlvbjIJQ2hpbGRUeXBlAggFQWxpYXMGEFNvbWEoVkFMT1JfUEFHTykIRGF0YVR5cGUHCGR0RG91YmxlDERpc3BsYXlXaWR0aAIQCkZpZWxkQWxpYXMGClZBTE9SX1BBR08LRmllbGRMZW5ndGgCAglGaWVsZE5hbWUGClZBTE9SX1BBR08ITGlua2FibGUIDFNRTEZpZWxkTmFtZQYZU1VNX0lORElWSURVQUlTXzFfVkFMT1JfUApUYWJsZUFsaWFzBgtJTkRJVklEVUFJUwlUYWJsZU5hbWUGC0lORElWSURVQUlTDVRhYmxlU1FMQWxpYXMGDUlORElWSURVQUlTXzEIQ2FsY1R5cGUHB2RhY2FTdW0AAA5UZGFDYWxjdWxhdGlvbg5kYUNhbGN1bGF0aW9uMwlDaGlsZFR5cGUCCAVBbGlhcwYRU29tYShUT1RBTF9DVVNUTykIRGF0YVR5cGUHCGR0RG91YmxlDERpc3BsYXlXaWR0aAIQCkZpZWxkQWxpYXMGC1RPVEFMX0NVU1RPC0ZpZWxkTGVuZ3RoAgIJRmllbGROYW1lBgtUT1RBTF9DVVNUTwhMaW5rYWJsZQgMU1FMRmllbGROYW1lBhlTVU1fSU5ESVZJRFVBSVNfMV9UT1RBTF9DClRhYmxlQWxpYXMGC0lORElWSURVQUlTCVRhYmxlTmFtZQYLSU5ESVZJRFVBSVMNVGFibGVTUUxBbGlhcwYNSU5ESVZJRFVBSVNfMQhDYWxjVHlwZQcHZGFjYVN1bQAADlRkYUNhbGN1bGF0aW9uDmRhQ2FsY3VsYXRpb240CUNoaWxkVHlwZQIIBUFsaWFzBhFTb21hKFRPVEFMX0xVQ1JPKQhEYXRhVHlwZQcIZHREb3VibGUMRGlzcGxheVdpZHRoAhAKRmllbGRBbGlhcwYLVE9UQUxfTFVDUk8LRmllbGRMZW5ndGgCAglGaWVsZE5hbWUGC1RPVEFMX0xVQ1JPCExpbmthYmxlCAxTUUxGaWVsZE5hbWUGGVNVTV9JTkRJVklEVUFJU18xX1RPVEFMX0wKVGFibGVBbGlhcwYLSU5ESVZJRFVBSVMJVGFibGVOYW1lBgtJTkRJVklEVUFJUw1UYWJsZVNRTEFsaWFzBg1JTkRJVklEVUFJU18xCENhbGNUeXBlBwdkYWNhU3VtAAALVGRhQ3JpdGVyaWELZGFDcml0ZXJpYTEJQ2hpbGRUeXBlAgcFTGV2ZWwCAAVWYWx1ZQYBMgAIVGRhRmllbGQABUFsaWFzBgJFUwhEYXRhVHlwZQcJZHRJbnRlZ2VyDERpc3BsYXlXaWR0aAIKCkZpZWxkQWxpYXMGAkVTC0ZpZWxkTGVuZ3RoAgAJRmllbGROYW1lBgJFUwxTUUxGaWVsZE5hbWUGAkVTClRhYmxlQWxpYXMGCk1PVklNRU5UT1MJVGFibGVOYW1lBgpNT1ZJTUVOVE9TDVRhYmxlU1FMQWxpYXMGDE1PVklNRU5UT1NfMQAAD1RkYU51bWVyaWNWYWx1ZQAFVmFsdWUFAAAAAAAAAIAAQAAAAAtUZGFDcml0ZXJpYQtkYUNyaXRlcmlhMglDaGlsZFR5cGUCBwVMZXZlbAIACE9wZXJhdG9yBwpkYWNvSW5MaXN0BVZhbHVlBgMzLDYACFRkYUZpZWxkAAVBbGlhcwYEVElQTwhEYXRhVHlwZQcJZHRJbnRlZ2VyDERpc3BsYXlXaWR0aAIKCkZpZWxkQWxpYXMGBFRJUE8LRmllbGRMZW5ndGgCAAlGaWVsZE5hbWUGBFRJUE8MU1FMRmllbGROYW1lBgRUSVBPClRhYmxlQWxpYXMGCk1PVklNRU5UT1MJVGFibGVOYW1lBgpNT1ZJTUVOVE9TDVRhYmxlU1FMQWxpYXMGDE1PVklNRU5UT1NfMQAAD1RkYU51bWVyaWNWYWx1ZQAFVmFsdWUFAAAAAAAAAMAAQAAAD1RkYU51bWVyaWNWYWx1ZQAFVmFsdWUFAAAAAAAAAMABQAAAAAtUZGFDcml0ZXJpYQtkYUNyaXRlcmlhMwlDaGlsZFR5cGUCBwVMZXZlbAIACE9wZXJhdG9yBwtkYWNvQmV0d2VlbgAIVGRhRmllbGQABUFsaWFzBg5EQVRBRkVDSEFNRU5UTwpBdXRvU2VhcmNoCQhEYXRhVHlwZQcKZHREYXRlVGltZQxEaXNwbGF5V2lkdGgCIgpGaWVsZEFsaWFzBg5EQVRBRkVDSEFNRU5UTwtGaWVsZExlbmd0aAIACUZpZWxkTmFtZQYOREFUQUZFQ0hBTUVOVE8MU1FMRmllbGROYW1lBg5EQVRBRkVDSEFNRU5UTwpUYWJsZUFsaWFzBgpNT1ZJTUVOVE9TCVRhYmxlTmFtZQYKTU9WSU1FTlRPUw1UYWJsZVNRTEFsaWFzBgxNT1ZJTUVOVE9TXzEAAAALVGRhQ3JpdGVyaWELZGFDcml0ZXJpYTQJQ2hpbGRUeXBlAgcFTGV2ZWwCAAAIVGRhRmllbGQABUFsaWFzBgpDT0RFTVBSRVNBCkF1dG9TZWFyY2gJCERhdGFUeXBlBwlkdEludGVnZXIMRGlzcGxheVdpZHRoAgoKRmllbGRBbGlhcwYKQ09ERU1QUkVTQQtGaWVsZExlbmd0aAIACUZpZWxkTmFtZQYKQ09ERU1QUkVTQQxTUUxGaWVsZE5hbWUGCkNPREVNUFJFU0EKVGFibGVBbGlhcwYKTU9WSU1FTlRPUwlUYWJsZU5hbWUGCk1PVklNRU5UT1MNVGFibGVTUUxBbGlhcwYMTU9WSU1FTlRPU18xAAAAC1RkYUNyaXRlcmlhC2RhQ3JpdGVyaWE1CUNoaWxkVHlwZQIHBUxldmVsAgAFVmFsdWUGAVMACFRkYUZpZWxkAAVBbGlhcwYCUFMMRGlzcGxheVdpZHRoAgEKRmllbGRBbGlhcwYCUFMLRmllbGRMZW5ndGgCAQlGaWVsZE5hbWUGAlBTDFNRTEZpZWxkTmFtZQYCUFMKVGFibGVBbGlhcwYLSU5ESVZJRFVBSVMJVGFibGVOYW1lBgtJTkRJVklEVUFJUw1UYWJsZVNRTEFsaWFzBg1JTkRJVklEVUFJU18xAAAAC1RkYUNyaXRlcmlhC2RhQ3JpdGVyaWE2CUNoaWxkVHlwZQIHBUxldmVsAgAFVmFsdWUGAVMACFRkYUZpZWxkAAVBbGlhcwYHVkVORElETwxEaXNwbGF5V2lkdGgCAQpGaWVsZEFsaWFzBgdWRU5ESURPC0ZpZWxkTGVuZ3RoAgEJRmllbGROYW1lBgdWRU5ESURPDFNRTEZpZWxkTmFtZQYHVkVORElETwpUYWJsZUFsaWFzBgtJTkRJVklEVUFJUwlUYWJsZU5hbWUGC0lORElWSURVQUlTDVRhYmxlU1FMQWxpYXMGDUlORElWSURVQUlTXzEAAAALVGRhQ3JpdGVyaWELZGFDcml0ZXJpYTcJQ2hpbGRUeXBlAgcFTGV2ZWwCAAVWYWx1ZQYBTgAIVGRhRmllbGQABUFsaWFzBgZPQ1VMVE8MRGlzcGxheVdpZHRoAgEKRmllbGRBbGlhcwYGT0NVTFRPC0ZpZWxkTGVuZ3RoAgEJRmllbGROYW1lBgZPQ1VMVE8MU1FMRmllbGROYW1lBgZPQ1VMVE8KVGFibGVBbGlhcwYIUFJPRFVUT1MJVGFibGVOYW1lBghQUk9EVVRPUw1UYWJsZVNRTEFsaWFzBgpQUk9EVVRPU18xAAAACFRkYUZpZWxkCGRhRmllbGQxBUFsaWFzBgZDT0RJR08IRGF0YVR5cGUHCWR0SW50ZWdlcgxEaXNwbGF5V2lkdGgCCgpGaWVsZEFsaWFzBgZDT0RJR08LRmllbGRMZW5ndGgCAAlGaWVsZE5hbWUGBkNPRElHTwhJc0RldGFpbAkMU1FMRmllbGROYW1lBgZDT0RJR08KVGFibGVBbGlhcwYIUFJPRFVUT1MJVGFibGVOYW1lBghQUk9EVVRPUw1UYWJsZVNRTEFsaWFzBgpQUk9EVVRPU18xAAAIVGRhRmllbGQIZGFGaWVsZDIFQWxpYXMGCURFU0NSSUNBTwxEaXNwbGF5V2lkdGgCPApGaWVsZEFsaWFzBglERVNDUklDQU8LRmllbGRMZW5ndGgCPAlGaWVsZE5hbWUGCURFU0NSSUNBTwhJc0RldGFpbAkMU1FMRmllbGROYW1lBglERVNDUklDQU8KVGFibGVBbGlhcwYIUFJPRFVUT1MJVGFibGVOYW1lBghQUk9EVVRPUw1UYWJsZVNRTEFsaWFzBgpQUk9EVVRPU18xAAAIVGRhRmllbGQIZGFGaWVsZDMJQ2hpbGRUeXBlAgEFQWxpYXMGBkNPRElHTwhEYXRhVHlwZQcJZHRJbnRlZ2VyDERpc3BsYXlXaWR0aAIKCkZpZWxkQWxpYXMGBkNPRElHTwtGaWVsZExlbmd0aAIACUZpZWxkTmFtZQYGQ09ESUdPDFNRTEZpZWxkTmFtZQYGQ09ESUdPClRhYmxlQWxpYXMGCFBST0RVVE9TCVRhYmxlTmFtZQYIUFJPRFVUT1MNVGFibGVTUUxBbGlhcwYKUFJPRFVUT1NfMQAACFRkYUZpZWxkCGRhRmllbGQ0CUNoaWxkVHlwZQIBBUFsaWFzBglERVNDUklDQU8MRGlzcGxheVdpZHRoAjwKRmllbGRBbGlhcwYJREVTQ1JJQ0FPC0ZpZWxkTGVuZ3RoAjwJRmllbGROYW1lBglERVNDUklDQU8MU1FMRmllbGROYW1lBglERVNDUklDQU8KVGFibGVBbGlhcwYIUFJPRFVUT1MJVGFibGVOYW1lBghQUk9EVVRPUw1UYWJsZVNRTEFsaWFzBgpQUk9EVVRPU18xAAAOVGRhQ2FsY3VsYXRpb24OZGFDYWxjdWxhdGlvbjUJQ2hpbGRUeXBlAgIFQWxpYXMGEVNvbWEoVE9UQUxfTFVDUk8pCUFzY2VuZGluZwgIRGF0YVR5cGUHCGR0RG91YmxlDERpc3BsYXlXaWR0aAIQCkZpZWxkQWxpYXMGC1RPVEFMX0xVQ1JPC0ZpZWxkTGVuZ3RoAgIJRmllbGROYW1lBgtUT1RBTF9MVUNSTwhMaW5rYWJsZQgMU1FMRmllbGROYW1lBhlTVU1fSU5ESVZJRFVBSVNfMV9UT1RBTF9MClRhYmxlQWxpYXMGC0lORElWSURVQUlTCVRhYmxlTmFtZQYLSU5ESVZJRFVBSVMNVGFibGVTUUxBbGlhcwYNSU5ESVZJRFVBSVNfMQhDYWxjVHlwZQcHZGFjYVN1bQAACFRkYVRhYmxlCGRhVGFibGUxCUNoaWxkVHlwZQIFBUFsaWFzBgpNT1ZJTUVOVE9TCEpvaW5UeXBlBwhkYWp0Tm9uZQhTUUxBbGlhcwYMTU9WSU1FTlRPU18xClRhYmxlQWxpYXMGCk1PVklNRU5UT1MJVGFibGVOYW1lBgpNT1ZJTUVOVE9TAAAIVGRhVGFibGUIZGFUYWJsZTIJQ2hpbGRUeXBlAgUFQWxpYXMGC0lORElWSURVQUlTCFNRTEFsaWFzBg1JTkRJVklEVUFJU18xClRhYmxlQWxpYXMGC0lORElWSURVQUlTCVRhYmxlTmFtZQYLSU5ESVZJRFVBSVMADFRkYVRhYmxlSm9pbgxkYVRhYmxlSm9pbjEJQ2hpbGRUeXBlAgYACFRkYUZpZWxkCGRhRmllbGQ2CUNoaWxkVHlwZQIDBUFsaWFzBgtDT0RNT1ZTQUlEQQhEYXRhVHlwZQcJZHRJbnRlZ2VyDERpc3BsYXlXaWR0aAIKCkZpZWxkQWxpYXMGC0NPRE1PVlNBSURBC0ZpZWxkTGVuZ3RoAgAJRmllbGROYW1lBgtDT0RNT1ZTQUlEQQxTUUxGaWVsZE5hbWUGC0NPRE1PVlNBSURBClRhYmxlQWxpYXMGC0lORElWSURVQUlTCVRhYmxlTmFtZQYLSU5ESVZJRFVBSVMNVGFibGVTUUxBbGlhcwYNSU5ESVZJRFVBSVNfMQAACFRkYUZpZWxkCGRhRmllbGQ1CUNoaWxkVHlwZQIEBUFsaWFzBgZDT0RJR08IRGF0YVR5cGUHCWR0SW50ZWdlcgxEaXNwbGF5V2lkdGgCCgpGaWVsZEFsaWFzBgZDT0RJR08LRmllbGRMZW5ndGgCAAlGaWVsZE5hbWUGBkNPRElHTwxTUUxGaWVsZE5hbWUGBkNPRElHTwpUYWJsZUFsaWFzBgpNT1ZJTUVOVE9TCVRhYmxlTmFtZQYKTU9WSU1FTlRPUw1UYWJsZVNRTEFsaWFzBgxNT1ZJTUVOVE9TXzEAAAAACFRkYVRhYmxlCGRhVGFibGUzCUNoaWxkVHlwZQIFBUFsaWFzBghQUk9EVVRPUwhTUUxBbGlhcwYKUFJPRFVUT1NfMQpUYWJsZUFsaWFzBghQUk9EVVRPUwlUYWJsZU5hbWUGCFBST0RVVE9TAAxUZGFUYWJsZUpvaW4MZGFUYWJsZUpvaW4yCUNoaWxkVHlwZQIGAAhUZGFGaWVsZAhkYUZpZWxkOAlDaGlsZFR5cGUCAwVBbGlhcwYGQ09ESUdPCERhdGFUeXBlBwlkdEludGVnZXIMRGlzcGxheVdpZHRoAgoKRmllbGRBbGlhcwYGQ09ESUdPC0ZpZWxkTGVuZ3RoAgAJRmllbGROYW1lBgZDT0RJR08MU1FMRmllbGROYW1lBgZDT0RJR08KVGFibGVBbGlhcwYIUFJPRFVUT1MJVGFibGVOYW1lBghQUk9EVVRPUw1UYWJsZVNRTEFsaWFzBgpQUk9EVVRPU18xAAAIVGRhRmllbGQIZGFGaWVsZDcJQ2hpbGRUeXBlAgQFQWxpYXMGCkNPRFBST0RVVE8IRGF0YVR5cGUHCWR0SW50ZWdlcgxEaXNwbGF5V2lkdGgCCgpGaWVsZEFsaWFzBgpDT0RQUk9EVVRPC0ZpZWxkTGVuZ3RoAgAJRmllbGROYW1lBgpDT0RQUk9EVVRPDFNRTEZpZWxkTmFtZQYKQ09EUFJPRFVUTwpUYWJsZUFsaWFzBgtJTkRJVklEVUFJUwlUYWJsZU5hbWUGC0lORElWSURVQUlTDVRhYmxlU1FMQWxpYXMGDUlORElWSURVQUlTXzEAAAAAAAAAEFRwcFBhcmFtZXRlckxpc3QQcHBQYXJhbWV0ZXJMaXN0MQAAAAA="/><ROW ITEM_ID="42" FOLDER_ID="17" NAME="Etiquetas - principais clientes" ITEM_SIZE="17955" ITEM_TYPE="1" MODIFIED="38696.50926799769" TEMPLATE=""/><ROW ITEM_ID="17" FOLDER_ID="9" NAME="Curva ABC clientes - margem de contribuição" ITEM_SIZE="17017" ITEM_TYPE="1" MODIFIED="38608.05275708334" TEMPLATE=""/><ROW ITEM_ID="65" FOLDER_ID="8" NAME="Curva ABC serviços - margem de contribuição por técnico" ITEM_SIZE="24782" ITEM_TYPE="1" MODIFIED="38757.57395072917" DELETED="0" TEMPLATE=""/><ROW ITEM_ID="68" FOLDER_ID="9" NAME="Curva ABC clientes" ITEM_SIZE="16954" ITEM_TYPE="1" MODIFIED="38608.05136729166" DELETED="0" TEMPLATE=""/><ROW ITEM_ID="18" FOLDER_ID="7" NAME="Inventário - compra mínima" ITEM_SIZE="13693" ITEM_TYPE="1" MODIFIED="38608.07017805555" TEMPLATE=""/></ROWDATA></DATAPACKET>